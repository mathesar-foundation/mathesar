name: Cache images
on:
  push:
    branches: [ develop ]
jobs:
  cache-images:
  runs-on: ubuntu-latest
  steps:
    - uses: actions/checkout@v4
    - id: docker-cache
      uses: actions/cache@v3
      with:
        path: /tmp/docker-images
        key: ${{ runner.os }}-docker-${{ hashFiles('**/Dockerfile', '**/api_tests/Dockerfile', '**/Dockerfile.caddy', '**/Dockerfile.devdb') }}
    - name: Verify image SHAs
      id: verifysha
      if: steps.docker-cache.outputs.cache-hit == 'true'
      run: |
        touch /tmp/live-images-sha.txt

        for version in 3.9 3.10 3.11 3.12 3.13; do
          echo "$(skopeo inspect docker://python:$version-bookworm | jq -r '.Digest') python:$version-bookworm" >> /tmp/live-images-sha.txt
        done

        for version in 13 14 15 16 17; do
          echo "$(skopeo inspect docker://postgres:$version | jq -r '.Digest') postgres:$version" >> /tmp/live-images-sha.txt
        done

        if diff <(sort -k2 /tmp/live-images-sha.txt) <(sort -k2 /tmp/docker-images/cached-images-sha.txt); then
          echo "needs-update=false" >> $GITHUB_OUTPUT;
          echo "exit code $?";
        else
          echo "needs-update=true" >> $GITHUB_OUTPUT;
          echo "exit code $?";
        fi
    - name: echo
      run: echo "${{ steps.verifysha.outputs.needs-update }}"
    - name: Pull and save python images on cache misses
      if: steps.docker-cache.outputs.cache-hit != 'true' || steps.verifysha.outputs.needs-update == 'true'
      run: |
        mkdir -p /tmp/docker-images && cd /tmp/docker-images
        for version in 3.9 3.10 3.11 3.12 3.13; do
          docker pull python:$version-bookworm && docker save python:$version-bookworm -o python-$version-bookworm.tar
        done

        for version in 13 14 15 16 17; do
          docker pull postgres:$version && docker save postgres:$version -o postgres-$version.tar
        done

        docker images --digests --format '{{.Digest}} {{.Repository}}:{{.Tag}}' > cached-images-sha.txt

        cat cached-images-sha.txt