{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Mathesar Documentation","text":"<p>Mathesar is a web application that makes working with PostgreSQL databases both simple and powerful. It empowers users of all technical skill levels to view, edit, query, and collaborate on data with a familiar spreadsheet-like interface\u2014no code needed. It has native database-level access control, can be deployed in minutes, and works directly with PostgreSQL databases, schemas, and tables without extra abstractions. The project is 100% open source and maintained by Mathesar Foundation, a 501(c)(3) nonprofit.</p>"},{"location":"#try-mathesar","title":"Try Mathesar","text":"<p>This is a quick way to play with Mathesar locally, but is not appropriate for saving data that you care about or setting up a long-term installation.</p> <ol> <li> <p>With Docker installed, run:</p> <pre><code>docker run -it --name mathesar -p 8000:8000 mathesar/mathesar:latest\n</code></pre> </li> <li> <p>Visit http://localhost:8000/ to set up an admin user account and create a database connection.</p> Tips when trying Mathesar locally <ul> <li> <p>To open a psql shell within the container, run:</p> <pre><code>docker exec -it mathesar sudo -u postgres psql\n</code></pre> </li> <li> <p>To stop Mathesar, press Ctrl+C in the shell where it is running.</p> </li> <li> <p>To start again, run <code>docker start mathesar</code>.</p> </li> <li> <p>To remove the Docker container, run <code>docker rm mathesar</code> .</p> <p>\u26a0\ufe0f This will also delete the data that you\u2019ve saved within Mathesar!</p> </li> </ul> </li> </ol>"},{"location":"#install-mathesar","title":"Install Mathesar","text":"<p>You can self-host Mathesar by following one of the guides below:</p> <ul> <li>Using Docker Compose \u2014 a production setup with separate reverse-proxy and database containers.</li> <li>Directly on Linux, macOS, or WSL \u2014 an advanced setup that doesn\u2019t rely on Docker.</li> <li>Via one-click, GUI-only installation:<ul> <li>DigitalOcean</li> <li>Railway</li> </ul> </li> </ul>"},{"location":"#help-out","title":"Help out","text":"<ul> <li>Make a donation - We\u2019re a non-profit organization and your donations help sustain our core team.</li> <li>Help build Mathesar - As an open source project, we actively encourage contribution!</li> </ul>"},{"location":"administration/debug/","title":"Debugging Mathesar","text":"<p>Not for production</p> <p>Debug mode should not be enabled in production environments, where it can cause performance issues and potentially expose sensitive information.</p> <p>If your Mathesar installation isn\u2019t working as expected, you can prefix the docker command with <code>DEBUG=true</code> to add additional debugging output to the console and more verbose errors in the browser when something goes wrong. The additional information logged should help you or the Mathesar team diagnose any installation issues.</p>"},{"location":"administration/debug/#with-docker-compose","title":"With Docker Compose","text":"<p>When debugging Mathesar\u2019s recommended docker compose installation method, add <code>DEBUG=true</code> to the beginning of the docker compose command:</p> <pre><code>- docker compose -f docker-compose.yml up\n+ DEBUG=true docker compose -f docker-compose.yml up\n</code></pre>"},{"location":"administration/debug/#with-the-basic-mathesar-docker-image","title":"With the basic Mathesar docker image","text":"<p>If you are just trying the Mathesar Docker image directly as instructed in the introduction, you will follow the same approach of setting <code>DEBUG=true</code>:</p> <pre><code>- docker run -it --name mathesar -p 8000:8000 mathesar/mathesar:latest\n+ DEBUG=true docker run -it --name mathesar -p 8000:8000 mathesar/mathesar:latest\n</code></pre>"},{"location":"administration/debug/#before-version-021","title":"Before version 0.2.1","text":"<p>Previous versions of Mathesar used a dedicated debugging image called <code>mathesar/mathesar-debug</code>. These images will not be supported or created for Mathesar versions 0.2.1 or higher.</p>"},{"location":"administration/environment-variables/","title":"Environment Variables","text":"<p>This page contains all available environment variables supported by Mathesar. See the specific installation guides for the applicable environment variables and instructions on how to set them.</p>"},{"location":"administration/environment-variables/#backend","title":"Backend configuration","text":""},{"location":"administration/environment-variables/#secret_key","title":"<code>SECRET_KEY</code>","text":"<ul> <li>Description: A unique random string used by Django for cryptographic signing (see Django docs). It helps Mathesar secure user sessions and encrypt saved PostgreSQL passwords. If not set as an environment variable, Mathesar will generate one at random, and persist that on disk. The variable only needs to be set for backwards compatibility, or in deployments where persistence of secret information on disk is not possible.</li> <li>Format: A 50 character string</li> <li> <p>Additional information:</p> <p>To generate a secret key you can use this browser-based generator or run this command on MacOS or Linux:</p> <pre><code>echo $(cat /dev/urandom | LC_CTYPE=C tr -dc 'a-zA-Z0-9' | head -c 50)\n</code></pre> </li> </ul>"},{"location":"administration/environment-variables/#allowed_hosts","title":"<code>ALLOWED_HOSTS</code>","text":"<ul> <li>Description: A set of strings representing the host/domain names that Django is allowed to serve. This is a security measure to prevent HTTP Host header attacks (see Django docs).</li> <li>Format: A set of host/domain names separated by a comma</li> <li>Default value: <code>.localhost,127.0.0.1,[::1]</code></li> </ul>"},{"location":"administration/environment-variables/#web_concurrency","title":"<code>WEB_CONCURRENCY</code>","text":"<ul> <li>Description: Sets the number of sync Gunicorn workers, affecting the number of concurrent requests Mathesar can handle. Bigger is better, subject to system resources. The typically-recommended number is <code>2 * $(NUM_PROC) + 1</code>, where <code>NUM_PROC</code> is the number of logical cores on your machine. So, if Mathesar is running on a server with 4 vCPUs, then this should be set to 9.</li> <li>Format: An integer.</li> <li>Default value: <code>3</code></li> </ul>"},{"location":"administration/environment-variables/#db","title":"Internal database configuration","text":"<p>Default values below are from our docker-compose.yml file, used if installing via Docker Compose.</p> <p>The database specified in this section is used to store Mathesar\u2019s internal data. If desired, it can also be connected to Mathesar\u2019s UI to store user data.</p>"},{"location":"administration/environment-variables/#postgres_db","title":"<code>POSTGRES_DB</code>","text":"<ul> <li>Description: Specifies a name for the database that will be created and used by Mathesar for managing internal data.</li> <li>Default value: <code>mathesar_django</code></li> </ul>"},{"location":"administration/environment-variables/#postgres_user","title":"<code>POSTGRES_USER</code>","text":"<ul> <li>Description: Specifies creation of a user with superuser privileges and a database with the same name.</li> <li>Default value: <code>mathesar</code></li> </ul>"},{"location":"administration/environment-variables/#postgres_password-optional","title":"<code>POSTGRES_PASSWORD</code> (optional)","text":"<ul> <li>Description: Specifies the superuser password that is required to be set for the PostgreSQL docker image.</li> <li>Default value: <code>mathesar</code></li> </ul>"},{"location":"administration/environment-variables/#postgres_host","title":"<code>POSTGRES_HOST</code>","text":"<ul> <li>Description: Specifies the host name on which portgres listen for connections from client applications.</li> <li>Default value: <code>mathesar_db</code><ul> <li>When installing via docker, this value can reference:<ul> <li>A Docker service name (e.g., <code>mathesar_django</code>)</li> <li>A TCP host address (e.g., <code>host.docker.internal</code>)</li> <li>A Unix socket path (e.g., <code>/var/run/postgresql</code>)</li> </ul> </li> </ul> </li> </ul>"},{"location":"administration/environment-variables/#postgres_port-optional","title":"<code>POSTGRES_PORT</code> (optional)","text":"<ul> <li>Description: Specifies the port on which portgres listen for connections from client applications.</li> <li>Default value: <code>5432</code></li> </ul>"},{"location":"administration/environment-variables/#caddy","title":"Caddy reverse proxy configuration","text":"<p>OPTIONAL</p> <p>Only needed if you\u2019re using the Caddy configuration in our default Docker Compose file.</p>"},{"location":"administration/environment-variables/#domain_name","title":"<code>DOMAIN_NAME</code>","text":"<ul> <li>Description: The public URL that will be used to access Mathesar (see Caddy docs).</li> <li> <p>Format: A URL or hostname</p> <p>Example values</p> <ul> <li><code>https://example.com</code></li> <li><code>localhost</code></li> <li><code>http://localhost</code></li> </ul> </li> <li> <p>Additional information</p> <ul> <li>If the protocol is <code>http</code>, then Caddy will serve traffic via HTTP only.</li> <li>If the protocol is <code>https</code> or is not specified, then Caddy will serve traffic via HTTPS (and will redirect all HTTP traffic to HTTPS). In this case Caddy will also attempt to automatically set up HTTPS with Let\u2019s Encrypt for you (see Caddy docs).</li> </ul> <p>Tip</p> <ul> <li>Set this to <code>localhost</code> if you\u2019d like Mathesar to be available only on localhost</li> <li>Set the protocol to <code>http</code> if you don\u2019t want Caddy to automatically handle setting up SSL, e.g. <code>http://example.com</code></li> </ul> </li> </ul>"},{"location":"administration/environment-variables/#sso","title":"Single sign-on (SSO) configuration","text":"<p>OPTIONAL</p> <p>Only used if using SSO in installations where the local filesystem is inaccessible.</p>"},{"location":"administration/environment-variables/#oidc_config_dict-optional","title":"<code>OIDC_CONFIG_DICT</code> (optional)","text":"<ul> <li>Description: The configuration for enabling SSO and configuring providers in Mathesar.</li> <li> <p>Format: A stringified JSON representation of the config in the <code>sso.yml</code> file.</p> <p>Example</p> <pre><code> OIDC_CONFIG_DICT=\"{\\\"version\\\": 1,\\\"oidc_providers\\\": {\\\"provider1\\\": {\\\"provider_name\\\": \\\"okta\\\",\\\"client_id\\\": \\\"client-id\\\",\\\"secret\\\": \\\"client-secret\\\",\\\"server_url\\\": \\\"https://trial-2872264-admin.okta.com\\\"}}}\"\n</code></pre> </li> <li> <p>Additional information: The following tools might help you convert the YAML syntax from <code>sso.yml</code> into the proper format:</p> <ul> <li>Convert YAML to JSON</li> <li>JSON stringify online</li> </ul> </li> </ul>"},{"location":"administration/environment-variables/#file-backend-configuration","title":"File backend configuration","text":"<p>OPTIONAL</p> <p>Only needed if using file columns, in installations where the local filesystem is inaccessible.</p>"},{"location":"administration/environment-variables/#file_storage_dict-optional","title":"<code>FILE_STORAGE_DICT</code> (optional)","text":"<ul> <li>Description: The configuration to connect Mathesar to an S3-compatible file storage backend.</li> <li> <p>Format: A stringified JSON representation of the config in the <code>file_storage.yml</code> file.</p> <p>Example</p> <pre><code> FILE_STORAGE_DICT=\"{\\\"default\\\":{\\\"protocol\\\":\\\"s3\\\",\\\"nickname\\\":\\\"Example\\\",\\\"prefix\\\":\\\"mathesar-storage\\\",\\\"kwargs\\\":{\\\"client_kwargs\\\":{\\\"endpoint_url\\\":\\\"https:\\/\\/storage-example.mathesar.org\\\",\\\"region_name\\\":\\\"auto\\\",\\\"aws_access_key_id\\\":\\\"XXX\\\",\\\"aws_secret_access_key\\\":\\\"XXX\\\"}}}}\"\n</code></pre> </li> <li> <p>Additional information: The following tools might help you convert the YAML syntax from <code>file_storage.yml</code> into the proper format:</p> <ul> <li>Convert YAML to JSON</li> <li>JSON stringify online</li> </ul> </li> </ul>"},{"location":"administration/file-backend-config/","title":"Configuring file storage backends","text":"<p>Help us refine file storage!</p> <p>Our file storage feature is new and still evolving. We\u2019d love to hear about how you\u2019re using it, what\u2019s working, and what additional workflows you\u2019d like to see supported.</p> <p>Talk to us for 20 min! We\u2019ll give you a $25 gift card as a thank you.</p> <p>Mathesar\u2019s file data type requires you to configure an S3-compatible object storage backend. File storage allows users to upload, preview, and download files directly within Mathesar.</p> <p>Configuring file storage and using file columns is optional. By default, Mathesar does not expose file column controls unless a storage backend is set up. If you do not set up a backend, users will not be able to work directly with files in Mathesar.</p>"},{"location":"administration/file-backend-config/#1-configure-your-storage-backend","title":"1. Configure your storage backend","text":"<p>First, you\u2019ll need to decide which S3-compatible object storage backend you\u2019ll use.</p> <p>Popular options include:</p> <ul> <li>AWS S3</li> <li>Cloudflare R2</li> <li>DigitalOcean Spaces</li> <li>Self-hosted MinIO</li> </ul> <p>MinIO license considerations</p> <p>MinIO is licensed under the GNU Affero General Public License v3 (AGPLv3). This license requires that if you modify MinIO and make it available over a network, you must also make your modified source code available to users.</p> <p>Be sure you understand these obligations before choosing MinIO as your storage backend. See MinIO\u2019s documentation on license compliance for details.</p> <p>After choosing a backend, you\u2019ll need to follow the basic steps for working with S3-comptiable object storage:</p> <ol> <li>Create a bucket<ul> <li>Decide on a unique bucket name.</li> <li>Choose which region your bucket is in (if your platform supports regions).</li> <li>(Optional but recommended) enable versioning or lifecycle policies depending on your retention needs.</li> </ul> </li> <li>Create an API key and secret key<ul> <li>Generate credentials with read/write permissions scoped to your bucket.</li> </ul> </li> <li>Note the endpoint URL<ul> <li>For example, AWS uses <code>https://s3.[region].amazonaws.com</code> by default.</li> <li>Other providers (Cloudflare R2, DigitalOcean Spaces, MinIO) each provide a specific endpoint.</li> </ul> </li> </ol>"},{"location":"administration/file-backend-config/#2-enable-file-storage-in-mathesar","title":"2. Enable file storage in Mathesar","text":"<p>Enabling file storage requires setting up a new configuration file or environment variable that contains your backend\u2019s connection details.</p> <p>You\u2019ll either create a file named <code>file_storage.yml</code> or set up the <code>FILE_STORAGE_DICT</code> environment variable. Which you choose depends on how you installed Mathesar:</p> For Docker Compose installationsFor Linux, macOS, or WSL installationsFor DigitalOcean or Railway <p>If you used Docker Compose, create the <code>file_storage.yml</code> file next to your <code>docker-compose.yml</code> file:</p> <pre><code>mathesar\n \u251c\u2500\u2500 docker-compose.yml\n \u251c\u2500\u2500 msar/\n+\u2514\u2500\u2500 file_storage.yml\n</code></pre> <p>Then, uncomment the following lines in your docker compose file:</p> <pre><code>volumes:\n - ./msar/static:/code/static\n - ./msar/media:/code/media\n# Uncomment the following to mount file_storage.yml and enable\n#  an S3-compliant file storage backend\n-# - ./file_storage.yml:/code/file_storage.yml\n+  - ./file_storage.yml:/code/file_storage.yml\n</code></pre> <p>For direct installations, create <code>file_storage.yml</code> in the installation directory you defined while installing Mathesar.</p> <p>If you deployed to an environment where you can\u2019t use the local filesystem (e.g. DigitalOcean, Railway), you can use the <code>FILE_STORAGE_DICT</code> environment variable instead of a <code>file_storage.yml</code> file.</p> <p>This variable must contain a JSON representation of the same data that <code>file_storage.yml</code> contains, wrapped in quotes and with quotes escaped. Here\u2019s an example:</p> <pre><code>FILE_STORAGE_DICT=\"{\\\"default\\\": {\\\"protocol\\\": \\\"s3\\\", \\\"nickname\\\": \\\"Local object store\\\", \\\"prefix\\\": \\\"mathesar-storages\\\", \\\"kwargs\\\": {\\\"client_kwargs\\\": {\\\"endpoint_url\\\": \\\"http://mathesar-dev-store:9000\\\", \\\"region_name\\\": \\\"us-east-2\\\", \\\"aws_access_key_id\\\": \\\"mathesar\\\", \\\"aws_secret_access_key\\\": \\\"mathesar\\\"}}}}\"\n</code></pre> <p>See Environment Variables for links to tools that simplify this process.</p>"},{"location":"administration/file-backend-config/#3-configure-backend-connection-details","title":"3. Configure backend connection details","text":"<p>Here\u2019s where you populate your configuration file.</p>"},{"location":"administration/file-backend-config/#3a-retrieve-needed-information","title":"3a. Retrieve needed information","text":"<p>From your chosen storage backend, collect the following details:</p> <ul> <li>Bucket name: corresponds to the <code>prefix</code> field in Mathesar\u2019s config.</li> <li>Endpoint URL: the base URL for your provider\u2019s S3 API.</li> <li>Region name: required by some providers (e.g. AWS). If your provider doesn\u2019t use regions (e.g. Cloudflare R2), set this to <code>\"auto\"</code>.</li> <li>Access key ID: generated credential for programmatic access.</li> <li>Secret access key: generated credential paired with the access key ID.</li> </ul>"},{"location":"administration/file-backend-config/#3b-basic-setup","title":"3b. Basic setup","text":"<p>Once you have those details, update <code>file_storage.yml</code> with your values:</p> <pre><code># This config file allows you to configure an S3-compatible\n# object storage backend for file columns in Mathesar.\ndefault:\n+  protocol: s3\n+  nickname: \"Backend name\"   # A friendly label for this backend\n+  prefix: my-mathesar-bucket # This should match your bucket name exactly\n+  kwargs:\n+    client_kwargs:\n+      endpoint_url: https://s3.us-east-2.amazonaws.com\n+      region_name: us-east-2\n+      aws_access_key_id: YOUR_ACCESS_KEY\n+      aws_secret_access_key: YOUR_SECRET_KEY\n</code></pre>"},{"location":"administration/file-backend-config/#4-activate-file-storage","title":"4. Activate file storage","text":"<p>Once you\u2019ve finished configuring storage, restart Mathesar so it can load the updated <code>file_storage.yml</code> file or environment variable.</p> For Docker Compose installationsFor Linux, macOS, or WSL installationsFor DigitalOcean or Railway <pre><code>docker compose -f docker-compose.yml down\ndocker compose -f docker-compose.yml up -d\n</code></pre> <pre><code>sudo systemctl restart mathesar.service\n</code></pre> <p>Use their web interface to restart (often framed as a \u201credeploy\u201d) Mathesar.</p> <p>After restarting, file columns will be enabled in your Mathesar installation. To test this, check the UI for adding a new file column.</p>"},{"location":"administration/file-backend-config/#tips-technical-information","title":"Tips &amp; technical information","text":""},{"location":"administration/file-backend-config/#how-files-are-stored","title":"How files are stored","text":"<p>Files are stored in your PostgreSQL database in <code>JSONB</code> columns. A typical file value looks like this:</p> <pre><code>{\n  \"uri\": \"s3://my-mathesar-bucket/my-username/20250919-192215167015/example.csv\",\n  \"mash\": \"58f47a1eafd567cd9d0bdfa1f42a01978cc6f36eb7937b310b208d9957b7ee8b\"\n}\n</code></pre> <p>With the <code>uri</code> being the path to the file on the storage backend and the mash being a generated, unique value used by Mathesar.</p>"},{"location":"administration/file-backend-config/#removing-file-backends","title":"Removing file backends","text":"<p>If you remove a file backend, you\u2019ll no longer see the \u201cFile\u201d option in the \u201cadd column\u201d dropdown. Existing file data will be preserved in your database, but in Mathesar\u2019s UI you\u2019ll see the underlying JSONB instead of image thumbnails or file icons.</p>"},{"location":"administration/install-digitalocean/","title":"Install Mathesar on DigitalOcean","text":"<p>This guide walks you through how to deploy Mathesar on DigitalOcean via their App Platform.</p> DigitalOcean vs. other deployment methods <p>Deploying using DigitalOcean works really well for:  </p> <ul> <li>Users who are new to self-hosting, but need a permanent installation.</li> <li>Users who do not have the capacity or interest in manually managing server infrastructure.</li> <li>Users who would prefer configuring Mathesar primarily through GUI tools rather than CLI tools.</li> </ul> <p>Railway also works well for this use case. If you need more flexibility or configurability, we recommend using our Docker Compose or direct installation methods instead.</p>"},{"location":"administration/install-digitalocean/#installation","title":"Installation","text":""},{"location":"administration/install-digitalocean/#step-1-run-the-one-click-deployer","title":"Step 1: Run the one-click deployer","text":"<p>DigitalOcean account recommended</p> <p>Although you do not need a DigitalOcean account for this process, we\u2019ve found that the process goes more smoothly if you set up an account first. You can do this here. Be sure you have a payment method added too.</p> <p></p>"},{"location":"administration/install-digitalocean/#step-2-generate-a-secret-key","title":"Step 2: Generate a secret key","text":"<p>Do not share this key with anyone</p> <p>The <code>SECRET_KEY</code> is used to encrypt user data in your database. Be sure to keep it secret.</p> <p>1. Important. Secure your installation with a <code>SECRET_KEY</code> . </p> <p>Press the button below to generate a key, and automatically copy it. </p> Generate Secret Key Generating a secret key requires JavaScript to work. Please enable JavaScript in your browser. Copy Regenerate <p>2. Add a <code>SECRET_KEY</code> environment variable in the DigitalOcean UI. You can do this by: </p> <ul> <li>Clicking the \u201cEdit\u201d button next to the \u201cEnvironment Variables\u201d header.</li> <li>Then clicking the \u201cAdd environment variable\u201d button. </li> </ul> <p>When completed, Digital Ocean should look something like this:</p> <p></p>"},{"location":"administration/install-digitalocean/#step-3-create-the-application","title":"Step 3: Create the application","text":"<p>Press the \u201cCreate App\u201d button.</p> <p>It will take a few minutes for DigitalOcean to set up your installation. Once ready, you will see your domain name and a link to visit your new Mathesar site.</p>"},{"location":"administration/install-digitalocean/#step-4-set-up-an-admin-user-account","title":"Step 4: Set up an admin user account","text":"<p>Navigate to your Mathesar installation using the link that DigitalOcean shows you.</p> <p>You\u2019ll be prompted to set up an admin user account the first time you open Mathesar. Just follow the instructions on screen.</p>"},{"location":"administration/install-digitalocean/#step-5-upgrade-your-database-optional","title":"Step 5: Upgrade your database (optional)","text":"<p>By default, this installation uses a DigitalOcean \u201cdev database\u201d, which does not allow you to create new databases.</p> <p>If you plan to create new databases within Mathesar, you will need to upgrade your database to one of Digital Ocean\u2019s \u201cmanaged databases\u201d. Here are DigitalOcean\u2019s instructions for how to upgrade, just follow those.</p> <p>Managed databases also give you automated daily backups of your database, so we recommend them for all permanent setups.</p> <p>Please note that managed databases cost a few dollars more per month. You can learn more about them here.</p>"},{"location":"administration/install-digitalocean/#step-6-additional-setup-optional","title":"Step 6: Additional setup (optional)","text":"<p>Congratulations on your new Mathesar install! </p> <p>Here are some other things you can do to complete your Mathesar setup, depending on your needs:</p> <ul> <li>Connect your existing database(s) to Mathesar to begin working with your data.</li> <li>Set up a custom domain name using DigitalOcean\u2019s control panel if you don\u2019t want to use their default domain e.g. <code>https://mathesar-*.ondigitalocean.app/</code>.</li> </ul>"},{"location":"administration/install-from-scratch/","title":"Install Mathesar directly on Linux \u00b7 macOS \u00b7 WSL","text":"<p>For experienced system administrators</p> <p>This guide assumes you are comfortable with the command line, package management and basic database administration on Linux or macOS (or WSL\u202f2 on Windows). If you hit any snags, please open an issue or send a PR against this page.</p>"},{"location":"administration/install-from-scratch/#requirements","title":"Requirements","text":"<ul> <li>Hardware:<ul> <li>\u2265\u202f60\u202fGB disk.</li> <li>\u2265\u202f4\u202fGB\u202fRAM. (Recommended)</li> </ul> </li> <li>OS:<ul> <li>Should work on most modern Linux distributions and macOS versions.</li> <li>Tested on Debian\u202f12, Ubuntu\u202f22.04, and macOS\u00a014.</li> <li>On Windows, install under WSL\u202f2 (Ubuntu or Debian).</li> </ul> </li> <li>Software:<ul> <li>PostgreSQL\u00a013 or newer.</li> </ul> </li> </ul>"},{"location":"administration/install-from-scratch/#installation","title":"Installation","text":""},{"location":"administration/install-from-scratch/#set-up-mathesars-internal-database","title":"Set up Mathesar\u2019s internal database","text":"<p>These steps create Mathesar\u2019s internal database so Mathesar can store metadata about your data.</p> <ol> <li> <p>Open a <code>psql</code> shell.</p> <pre><code>sudo -u postgres psql\n</code></pre> <p>(Modify as necessary based on your Postgres installation.)</p> </li> <li> <p>Create a Postgres user for Mathesar.</p> <pre><code>CREATE USER mathesar WITH ENCRYPTED PASSWORD 'strong\u2011pw\u2011here' CREATEDB;\n</code></pre> <p>Use a real password</p> <p>Replace <code>strong\u2011pw\u2011here</code> with a strong, private password and make a note of it, you\u2019ll need it later.</p> <p>Tip</p> <p>About the extra privileges in the command:</p> <ul> <li> <p><code>CREATEDB</code>: gives the Postgres user permission to create new databases.</p> <ul> <li>It\u2019s handy if you want Mathesar admins to spin up databases from the web interface.</li> <li>Don\u2019t need that capability? Just remove <code>CREATEDB</code> from the command, everything else will still work.</li> </ul> </li> <li> <p><code>CREATEROLE</code>: allows the Postgres user to create and manage other Postgres roles.</p> <ul> <li>If you\u2019d like Mathesar admins to handle role management (create, drop, alter roles) from the web interface, add this attribute as well: <pre><code>CREATE USER mathesar WITH ENCRYPTED PASSWORD 'strong-pw-here' CREATEDB CREATEROLE;\n</code></pre></li> </ul> </li> <li> <p>You could refer to the official Postgres documentation to learn more about these attributes.</p> </li> </ul> <p>(Both attributes are optional, so feel free to include only what matches your comfort level.)</p> </li> <li> <p>Create a database for storing Mathesar metadata. The Postgres user you created in the previous step should be the <code>OWNER</code> of this database.</p> <pre><code>CREATE DATABASE mathesar_django OWNER mathesar;\n</code></pre> </li> <li> <p>Press Ctrl+D to exit the <code>psql</code> shell.</p> </li> </ol>"},{"location":"administration/install-from-scratch/#set-up-your-installation-directory","title":"Set up your installation directory","text":"<ol> <li> <p>Choose a directory where you will install Mathesar.</p> <p>For example: <code>/home/your_user_name/mathesar</code>, or <code>/etc/mathesar</code></p> </li> <li> <p>Enter your installation directory into the box below and press Enter to personalize this guide:</p> <p></p> <ul> <li>Do not include a trailing slash.</li> <li>Do not use any variables like <code>$HOME</code>.</li> </ul> </li> <li> <p>Create your installation directory and ensure it has proper permissions.</p> <pre><code>mkdir -p \"xMATHESAR_INSTALL_DIRx\"\nchown \"$(id -u):$(id -g)\" \"xMATHESAR_INSTALL_DIRx\"\n</code></pre> <p>When installing outside your home folder</p> <p>If you choose a directory outside your home folder, like /etc/mathesar or /opt/mathesar, you\u2019ll need super-user rights for this step:</p> <pre><code>sudo mkdir -p /etc/mathesar\nsudo chown &lt;desired-owner&gt;:&lt;desired-group&gt; /etc/mathesar\n</code></pre> <p>Choose an owner that makes sense for your setup:</p> <ul> <li><code>root</code>: if only admins will touch the files</li> <li>your own user: if you\u2019ll run everything yourself</li> <li>a dedicated <code>mathesar</code> user: nice for shared or production servers</li> </ul> <p>The remainder of this guide requires you to run commands with full permissions inside your installation directory.</p> </li> <li> <p>Move inside the installation directory.</p> <pre><code>cd \"xMATHESAR_INSTALL_DIRx\"\n</code></pre> </li> </ol>"},{"location":"administration/install-from-scratch/#run-the-install-script","title":"Run the install script","text":"<ol> <li> <p>Download the install script and make it executable:</p> <pre><code>curl -sSfL https://github.com/mathesar-foundation/mathesar/releases/download/0.6.0/install.sh -o install.sh\nchmod +x install.sh\n</code></pre> </li> <li> <p>Run it, pointing at the Postgres DB and user you created earlier:</p> <pre><code>./install.sh . \\\n  -c \"postgres://mathesar:strong\u2011pw\u2011here@localhost:5432/mathesar_django\"\n</code></pre> <ul> <li>Any valid PostgreSQL connection string can be used as the argument for <code>-c</code>. Here are some examples:     <pre><code>postgres://mathesar:strong\u2011pw\u2011here@localhost:5432/mathesar_django\n\n# As parameters\npostgres:///mathesar_django/?host=localhost&amp;port=5432&amp;user=mathesar&amp;password=strong\u2011pw\u2011here\n\n# Over Unix domain sockets\npostgres://mathesar:strong\u2011pw\u2011here@/mathesar_django?host=/var/run/postgresql\n\n# Non-standard port over Unix domain sockets\npostgres://mathesar:strong\u2011pw\u2011here@%2Fvar%2Flib%2Fpostgresql:5455/mathesar_django\n</code></pre></li> </ul> Additional install script options Flags Purpose <code>-h</code> <code>--help</code> Show help <code>-c</code> <code>--connection-string</code> Non\u2011interactive DB setup <code>-n</code> <code>--no-prompt</code> Fail instead of prompting (CI) <code>-f</code> <code>--force-download-python</code> Always download Python even if system Python is OK </li> <li> <p>When it\u2019s successful, you\u2019ll see:</p> <p>Mathesar\u2019s installed successfully!</p> <p>The script attempts to add the <code>mathesar</code> executable to your <code>PATH</code>.</p> <p>If that works you\u2019ll also see:</p> <p>Everything\u2019s ready, you can now start Mathesar by executing \u201cmathesar run\u201d.</p> <p>You may have to open a new terminal (or re-source your shell profile) for the change to take effect.</p> <p>If the script can\u2019t update your <code>PATH</code>, it will provide you instructions on how to add it yourself.</p> <p>Tip: Want to allow all system users to run Mathesar?</p> <p>For security purposes, the installer only sets up the command and necessary permissions for the user who runs it.</p> <p>To make <code>mathesar</code> available system-wide,</p> <ul> <li>Create a symlink in <code>/usr/local/bin</code>:     <pre><code>sudo ln -s \"xMATHESAR_INSTALL_DIRx/bin/mathesar\" /usr/local/bin/mathesar\n</code></pre></li> <li>Provide read access to the installation directory and it\u2019s contents to all users.     <pre><code>sudo chmod -R a+rX xMATHESAR_INSTALL_DIRx\n</code></pre></li> <li>Provide write access to the <code>.media</code> directory within <code>xMATHESAR_INSTALL_DIRx</code> to all users.     <pre><code>sudo chmod -R a+rwX xMATHESAR_INSTALL_DIRx/.media\n</code></pre></li> </ul> </li> </ol>"},{"location":"administration/install-from-scratch/#run-mathesar","title":"Run Mathesar","text":"<ol> <li> <p>Open a new shell and verify the installation. This command should print your Mathesar version.</p> <pre><code>mathesar version\n</code></pre> </li> <li> <p>Start Mathesar:</p> <pre><code>mathesar run\n</code></pre> </li> <li> <p>You can now access Mathesar by navigating to <code>http://localhost:8000</code>.</p> </li> </ol>"},{"location":"administration/install-from-scratch/#deployment","title":"Deployment","text":"<p>Turn your local Mathesar installation into a public-facing production service.</p> <p>Optional - Server hosting only</p> <ul> <li>Follow this section if you want Mathesar to run continuously on a server and be reachable by other users (with or without a public domain).</li> <li>For personal use, evaluation, or on\u2011prem workstations, you can simply start Mathesar on demand with <code>mathesar run</code> and skip ahead to setting up your user account.</li> <li>See our guide to setting up single sign-on (SSO) if that\u2019s of interest to you.</li> <li>Consider configuring a file backend to enable the file data type.</li> </ul> <p>Linux-only</p> <ul> <li>The steps below only target Linux servers that use systemd.</li> <li>On macOS, you can adapt the service portion to <code>launchd</code>.</li> <li>On Windows, deploy from a Linux VM or WSL\u00a02.</li> </ul> <p>Elevated permissions needed</p> <p>Most of the commands below need to be run as a root user, or using <code>sudo</code>. If you try to run one of these commands, and see an error about \u201cpermission denied\u201d, run again with elevated privileges.</p> <p>Gunicorn worker configuration</p> <p>By default Mathesar will use <code>3</code> Gunicorn sync workers. You may wish to adjust this if you\u2019re running Mathesar on a more powerful machine with additional vCPU cores. See our recommendations for the <code>WEB_CONCURRENCY</code> env var to learn more.</p>"},{"location":"administration/install-from-scratch/#run-mathesar-as-a-systemd-service","title":"Run Mathesar as a systemd service","text":"<p>These steps create a systemd service to run Mathesar continuously - 24x7.</p> <p>Before proceeding, stop Mathesar if it\u2019s currently running.</p> <ol> <li> <p>Create a dedicated user for running Mathesar.</p> <pre><code>sudo groupadd mathesar &amp;&amp; \\\nsudo useradd mathesar -g mathesar\n</code></pre> </li> <li> <p>Make the <code>mathesar</code> user the owner of the <code>.media</code> directory within Mathesar\u2019s installation folder.</p> <pre><code>sudo chown -R mathesar:mathesar \"xMATHESAR_INSTALL_DIRx/.media/\"\n</code></pre> </li> <li> <p>Write the systemd unit.</p> <pre><code>cat &lt;&lt;'EOF' | sudo tee /etc/systemd/system/mathesar.service &gt;/dev/null\n[Unit]\nDescription=mathesar daemon\nAfter=network.target network-online.target\nRequires=network-online.target\n\n[Service]\nType=notify\nUser=mathesar\nGroup=mathesar\nRuntimeDirectory=mathesar\nWorkingDirectory=xMATHESAR_INSTALL_DIRx\nExecStart=/bin/bash -c 'xMATHESAR_INSTALL_DIRx/bin/mathesar run'\nEnvironmentFile=xMATHESAR_INSTALL_DIRx/.env\nRestart=on-failure\nRestartSec=5s\n\n[Install]\nWantedBy=multi-user.target\nEOF\n</code></pre> </li> <li> <p>Reload <code>systemctl</code> and start the Mathesar service.</p> <pre><code>sudo systemctl daemon-reload\nsudo systemctl start mathesar.service\nsudo systemctl enable mathesar.service\n</code></pre> </li> <li> <p>Check the logs to verify if Mathesar is running without any errors.</p> <pre><code>journalctl --unit=mathesar.service\n</code></pre> </li> </ol>"},{"location":"administration/install-from-scratch/#serve-over-https-with-a-domain","title":"Serve over HTTPS with a domain","text":"<p>These steps put Caddy in front of Mathesar as a reverse proxy, serving the app over HTTPS while automatically fetching and renewing Let\u2019s Encrypt certificates.</p> <p>If you prefer nginx or another proxy, please refer to their documentation.</p> <p>Optional</p> <p>You can skip this if you only plan to use Mathesar from <code>localhost</code>. The following steps assume that you have a domain name.</p>"},{"location":"administration/install-from-scratch/#set-your-domain","title":"Set your domain","text":"<ol> <li> <p>Ensure that your DNS <code>A</code> and/or <code>AAAA</code> records are configured correctly. Your domain should resolve to your server\u2019s IP.</p> </li> <li> <p>Enter your domain and press Enter to customize the remaining steps in this guide.</p> <p></p> <ul> <li>For example: <code>example.com</code></li> <li>Do not precede your domain with <code>http://</code> or <code>https://</code></li> <li>Do not use a trailing slash</li> </ul> <p>Tip</p> <p>To specify multiple domains/subdomains, type in the domain names separated by a comma. Make sure that there are no whitespaces between them:</p> <ul> <li>For example: <code>localhost,example.com,subdomain.example.com</code></li> </ul> </li> </ol>"},{"location":"administration/install-from-scratch/#configure-allowed_hosts","title":"Configure <code>ALLOWED_HOSTS</code>","text":"<ul> <li>Add the environment variable <code>ALLOWED_HOSTS</code> to the end of the <code>.env</code> file in your Mathesar installation (located at <code>xMATHESAR_INSTALL_DIRx/.env</code>):   <pre><code>ALLOWED_HOSTS=xMATHESAR_DEPLOY_DOMAIN_NAMEx\n</code></pre></li> <li>If there multiple values for <code>ALLOWED_HOSTS</code>, they should be comma-separated, with no spaces.</li> <li>Please refer to the list of environment variables to further configure Mathesar.</li> <li>Once the environment variables are configured, restart the Mathesar service:   <pre><code>sudo systemctl restart mathesar.service\n</code></pre></li> </ul>"},{"location":"administration/install-from-scratch/#install-and-configure-caddy","title":"Install and configure Caddy","text":"<ol> <li> <p>Install Caddy by following the instructions from the Caddy documentation.</p> </li> <li> <p>Create/modify the Caddyfile at <code>/etc/caddy/Caddyfile</code>, with the following content:</p> <pre><code># The below line specifies your domain names\nxMATHESAR_DEPLOY_DOMAIN_NAMEx {\n\n  log {\n    output stdout\n  }\n\n  respond /caddy-health-check 200\n  encode zstd gzip\n\n  handle_path /media/* {\n    @downloads {\n      query dl=*\n    }\n    header @downloads Content-disposition \"attachment; filename={query.dl}\"\n\n    file_server {\n      precompressed br zstd gzip\n      root \"xMATHESAR_INSTALL_DIRx/.media/\"\n    }\n  }\n\n  handle_path /static/* {\n    file_server {\n      precompressed br zstd gzip\n      root \"xMATHESAR_INSTALL_DIRx/static/\"\n    }\n  }\n\n  # This is the address at which Mathesar is running\n  reverse_proxy localhost:8000\n}\n</code></pre> </li> <li> <p>Most Caddy installation methods automatically set up Caddy to run as a service, with a systemd unit and a user account. You can verify it by running:     <pre><code>systemctl status caddy.service\n</code></pre>     If you encounter any error mentioning that the service is not found, you can manually set up a service by following their documentation.</p> </li> <li> <p>Restart the Caddy service.</p> <pre><code>sudo systemctl restart caddy.service\n</code></pre> </li> <li> <p>Check the logs to verify if Caddy is running without any errors</p> <pre><code>journalctl --unit=caddy.service\n</code></pre> </li> </ol>"},{"location":"administration/install-from-scratch/#set-up-your-user-account","title":"Set up your user account","text":"<ol> <li> <p>Use your web browser to navigate to your Mathesar URL.</p> <ul> <li>With a domain <code>https://xMATHESAR_DEPLOY_DOMAIN_NAMEx</code></li> <li>Without <code>http://localhost:8000</code></li> </ul> </li> <li> <p>Follow the on\u2011screen wizard to create the first admin account and start using Mathesar!</p> </li> </ol>"},{"location":"administration/install-from-scratch/#troubleshooting","title":"Troubleshooting","text":"<p>If you encounter any issues during the installation or while running Mathesar, try the troubleshooting steps below.</p> <p>If you\u2019re unable to resolve the problem, feel free to reach out through our community channels or report a bug on our Github repository.</p> <ul> <li> <p>Installer stops with \u201cPermission denied\u201d / mkdir fails</p> <p>Possible cause: Installing into a root-owned directory without privileges.</p> <p>Resolution: Re-run the command with sudo, or install in a directory you have write privileges on.</p> </li> <li> <p>Installer fails while building Python dependencies</p> <p>Possible cause: Build tools/headers are not present in your environment.</p> <p>Resolution:</p> <ul> <li>Run the install script with <code>-f</code> flag to force download a self contained python distributable.</li> <li>Or, install build tools: <code>build-essential python3-dev libpq-dev</code> in your environment.</li> </ul> </li> <li> <p>Paths with spaces break service</p> <p>Possible cause: Missing escapes in commands &amp; unit files.</p> <p>Resolution:</p> <ul> <li>Always escape spaces in systemd unit files.</li> <li>Eg., <code>WorkingDirectory=/etc/mathesar\\ install\\ dir</code></li> </ul> </li> <li> <p>Caddy returning blank page / 502</p> <p>Possible causes:</p> <ul> <li>Caddy does not have permissions to read <code>/static</code> folder.</li> <li>Mathesar is not running or has crashed.</li> </ul> <p>Resolution:</p> <ul> <li>Ensure that the Caddy service user has read permissions on the <code>static</code> folder and its contents within your installation directory.</li> <li>If Mathesar has crashed, check the logs to investigate the error.</li> </ul> </li> <li> <p>Uploading CSV fails (500 error)</p> <p>Possible cause: <code>.media</code> folder not writable by Mathesar service or other users.</p> <p>Resolution:</p> <ul> <li>Ensure that the Mathesar service user has write permissions on the <code>.media</code> folder and its contents within your installation directory.</li> <li>If Mathesar was installed system-wide, ensure other users of the system have write permissions on the <code>.media</code> folder and it\u2019s contents.</li> </ul> </li> <li> <p>Browser shows \u201cNot Secure\u201d / HTTP padlock</p> <p>Possible causes:</p> <ul> <li>Using plain HTTP.</li> <li>Using an IP address instead of a domain name in Caddyfile.</li> </ul> <p>Resolution:</p> <ul> <li>Serve Mathesar over HTTPS using Caddy.</li> <li>Make sure that you mention a valid domain name in the Caddyfile, and not an IP address.</li> <li>Ensure that your A/AAAA records are configured correctly so that your domain name resolves to your server\u2019s IP address.</li> </ul> </li> </ul>"},{"location":"administration/install-railway/","title":"Install Mathesar on Railway","text":"<p>This guide walks you through how to deploy Mathesar on Railway.</p> Railway vs. other deployment methods <p>Deploying using Railway works really well for:</p> <ul> <li>Users who are new to self-hosting but want a long-term, low-maintenance deployment.</li> <li>Users who do not have the capacity or interest in manually managing server infrastructure, scaling, or observability.</li> <li>Users who want to integrate Mathesar into a broader application stack using GUI tooling.</li> </ul> <p>DigitalOcean also works well for this use case. If you need more flexibility or configurability, we recommend using our Docker Compose or direct installation methods instead.</p>"},{"location":"administration/install-railway/#installation","title":"Installation","text":""},{"location":"administration/install-railway/#step-1-run-the-one-click-deployer","title":"Step 1: Run the one-click deployer","text":"<p>Railway trial accounts</p> <p>If you sign up with GitHub and your account meets Railway\u2019s requirements, you\u2019ll receive a \u201cfull\u201d free trial and be able to install Mathesar immediately.</p> <p>Otherwise, you\u2019ll be placed on a \u201climited\u201d trial, which doesn\u2019t support code deployment. Instead, Railway will prompt you to upgrade to one of their \u201cHobby\u201d-tier monthly plans in order to deploy Mathesar.</p> <p></p>"},{"location":"administration/install-railway/#step-2-create-the-application","title":"Step 2: Create the application","text":"<p>Press the \u201cDeploy\u201d button.</p> <p>It will take a minute or two for Railway to set up your installation. Once ready, you will see your domain name and a link to visit your new Mathesar site.</p>"},{"location":"administration/install-railway/#step-3-set-up-an-admin-user-account","title":"Step 3: Set up an admin user account","text":"<p>Navigate to your Mathesar installation using the link that Railway shows you.</p> <p>You\u2019ll be prompted to set up an admin user account the first time you open Mathesar. Just follow the instructions on screen.</p>"},{"location":"administration/install-railway/#step-4-additional-setup-optional","title":"Step 4: Additional setup (optional)","text":"<p>Congratulations on your new Mathesar install!</p> <p>Here are some other things you can do to complete your Mathesar setup, depending on your needs:</p> <ul> <li>Connect your existing database(s) to Mathesar or create a new database in the Mathesar UI to begin working with your data.</li> <li>Set up a custom domain name in Railway if you don\u2019t want to use their default domain e.g. <code>https://mathesar-*.up.railway.app</code>.</li> </ul>"},{"location":"administration/install-via-docker-compose/","title":"Install Mathesar via Docker Compose","text":""},{"location":"administration/install-via-docker-compose/#prerequisites","title":"Prerequisites","text":""},{"location":"administration/install-via-docker-compose/#operating-system","title":"Operating System","text":"<p>You can install Mathesar using this method on Linux, MacOS, and Windows.</p>"},{"location":"administration/install-via-docker-compose/#software","title":"Software","text":"<p>You\u2019ll need to install the following software before you install Mathesar:</p> <ul> <li>Docker v23+</li> <li>Docker Compose v2.10+</li> <li>If you\u2019re installing on Windows:<ul> <li>Ensure you have WSL installed</li> <li>Turn on Docker Desktop WSL 2, see Docker docs for more information</li> </ul> </li> </ul>"},{"location":"administration/install-via-docker-compose/#steps","title":"Step-by-Step Guide","text":"<p>Note</p> <p>Depending on your Docker setup, you may need to run <code>docker</code> commands with <code>sudo</code>.</p> <ol> <li> <p>Download our docker-compose.yml file.</p> <pre><code>wget https://github.com/mathesar-foundation/mathesar/raw/0.6.0/docker-compose.yml\n</code></pre> </li> <li> <p>Open the downloaded docker-compose file using your text editor.</p> </li> <li> <p>Set the required environment variables in the x-config section of the docker compose file:</p> <p>Config</p> <pre><code>x-config: &amp;config\n  # (Optional) Replace 'http://localhost' with custom domain(s) e.g.\n  # 'yourdomain.com, 127.0.0.1' to manage the host(s) at which you want to\n  # access Mathesar over http or https\n  DOMAIN_NAME: ${DOMAIN_NAME:-http://localhost}\n\n  # Edit the POSTGRES_* variables if you are not using the db service provided\n  # below, or if you want to use a custom database user.\n\n  # (Optional) Replace 'mathesar_django' with any custom name for the internal\n  # database managed by mathesar web-service\n  POSTGRES_DB: ${POSTGRES_DB:-mathesar_django}\n\n  # (Optional) Replace 'mathesar' with any custom username for the\n  # aforementioned database\n  POSTGRES_USER: ${POSTGRES_USER:-mathesar}\n\n  # (Optional) Replace 'mathesar' with any custom password for the\n  # aforementioned database\n  POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-mathesar}\n\n  # (Optional) Replace 'mathesar_db' with the name of the host running postgres\n  POSTGRES_HOST: ${POSTGRES_HOST:-mathesar_db}\n\n  # (Optional) Replace '5432' with the port on which postgres is running\n  POSTGRES_PORT: ${POSTGRES_PORT:-5432}\n</code></pre> </li> <li> <p>This is a good time to set up single sign-on (SSO) if that\u2019s of interest to you.</p> </li> <li> <p>Run the docker compose file using:         <pre><code>docker compose -f docker-compose.yml up\n</code></pre></p> </li> <li> <p>Set up your user account</p> <p>Mathesar is now installed! You can use it by visiting <code>localhost</code> or the domain you\u2019ve set up. You\u2019ll be prompted to set up an admin user account the first time you open Mathesar. Just follow the instructions on screen.</p> </li> </ol>"},{"location":"administration/install-via-docker-compose/#start-stop","title":"Starting and stopping Mathesar","text":"<p>The Mathesar server needs to be running for you to use Mathesar. If you restart your machine, you\u2019ll need to start the server again.</p> <ul> <li> <p>Start Mathesar:</p> <pre><code>docker compose -f docker-compose.yml up -d\n</code></pre> <p>Info</p> <p>Exclude the <code>-d</code> flag if you\u2019d like to see the container\u2019s logs.</p> </li> <li> <p>Stop Mathesar:</p> <pre><code>docker compose -f docker-compose.yml down\n</code></pre> <p>This stops all Mathesar Docker containers and releases their ports.</p> </li> </ul>"},{"location":"administration/install-via-docker-compose/#optional-configurations","title":"Optional configurations","text":""},{"location":"administration/install-via-docker-compose/#hosting-mathesar-over-a-custom-domain-with-https","title":"Hosting Mathesar over a custom domain with https","text":"<p>If you want Mathesar to be accessible over the internet, you\u2019ll probably want to set up a domain or sub-domain to use. If you don\u2019t need a domain, you can skip this section.</p> <p>Ensure that the DNS for your domain or sub-domain is pointing to the public IP address of the machine that you\u2019re installing Mathesar on.</p> <p>Add your domain(s) or sub-domain(s) to the <code>DOMAIN_NAME</code> environment variable, in the CONFIG section of the docker-compose file.</p> <p>Example</p> <pre><code>DOMAIN_NAME: ${DOMAIN_NAME:-yourdomain.org, yoursubdomain.example.org}\n</code></pre> <p>Restart the docker containers for the configuration to take effect.</p>"},{"location":"administration/install-via-docker-compose/#modifying-the-number-of-gunicorn-workers","title":"Modifying the number of Gunicorn workers","text":"<p>If you\u2019re deploying Mathesar in a production or multi-user environment, you may want to increase the number of Gunicorn workers to improve performance and handle more concurrent requests.</p> <p>You can control this by adjusting the <code>WEB_CONCURRENCY</code> environment variable in the CONFIG section of the docker-compose file. Learn more about the recommended value on our ENV variables page.</p>"},{"location":"administration/install-via-docker-compose/#using-an-external-postgresql-server-for-mathesars-internal-database","title":"Using an external PostgreSQL server for Mathesar\u2019s internal database","text":"<p>If you\u2019d like to use an external PostgreSQL server for Mathesar\u2019s internal database, you\u2019ll need to do the following:</p> <ol> <li> <p>On your PostgreSQL server, create a new database for Mathesar to store its metadata.</p> <pre><code>psql -c 'create database mathesar_django;'\n</code></pre> </li> <li> <p>Configure the internal database environment variables to point to the database you just created. Ensure that you change the default values for the user, password, and host.</p> </li> </ol>"},{"location":"administration/install-via-docker-compose/#docker-host-networking-considerations","title":"Docker Host Networking Considerations","text":"<p>When connecting to PostgreSQL running on the Docker host machine over the network (TCP/IP), remember the following:</p> <ul> <li>Using <code>localhost</code> within Docker will reference the container itself, not your host.</li> <li>On macOS or Windows, <code>host.docker.internal</code> typically works to access the host network.</li> <li>On Linux, you can use <code>host.docker.internal</code>, but it must be explicitly configured in your docker compose file like so:   <pre><code>extra_hosts:\n  - \"host.docker.internal:host-gateway\"\n</code></pre><ul> <li>Alternatively, try the Docker network gateway IP (<code>172.17.0.1</code>) or your host machine\u2019s local network IP.</li> </ul> </li> </ul>"},{"location":"administration/install-via-docker-compose/#connecting-via-unix-socket","title":"Connecting via Unix Socket","text":"<p>If you\u2019re connecting Mathesar to PostgreSQL via a Unix socket, ensure the following:</p> <ul> <li>Set <code>POSTGRES_HOST</code> to the directory containing your PostgreSQL Unix socket (typically <code>/var/run/postgresql</code>).</li> <li>You may omit <code>POSTGRES_PORT</code> if using the default value (<code>5432</code>), but must specify it when using a non-standard port.</li> <li>Adjust your PostgreSQL server permissions (<code>pg_hba.conf</code>) to allow socket connections using appropriate authentication for the <code>POSTGRES_USER</code>  (such as <code>md5</code>). Refer to PostgreSQL Authentication docs for more information.</li> <li>In Docker, mount the Unix socket directory as a volume to enable container access. For example:</li> </ul> <pre><code> service:\n    container_name: mathesar_service\n    image: mathesar/mathesar:latest\n    volumes:\n       # Add this line\n       - /var/run/postgresql:/var/run/postgresql\n</code></pre>"},{"location":"administration/single-sign-on/","title":"Single Sign-on (SSO)","text":"<p>Help us refine SSO!</p> <p>Our SSO feature is new and potentially rough around the edges. We would love to talk with you about what you\u2019re using it for, whether it\u2019s working for you, and any additional workflows you\u2019d like us to support. If you talk to us for 20 min, we\u2019ll give you a $25 gift card as a thank you!</p> <p>Mathesar supports single sign-on (SSO) using any identity provider that implements the OpenID Connect (OIDC) standard, such as Okta, Azure Active Directory, Google Workspace, and others. SSO allows users to use Mathesar without needing to maintain another set of credentials.</p> <p>Configuring SSO is optional. By default, Mathesar has separate user accounts with their own passwords, as described in Mathesar Users.</p>"},{"location":"administration/single-sign-on/#setting-up-sso","title":"Setting up SSO","text":"<p>Assuming you already have an identity provider (IdP) set up, this guide explains how to set up SSO in Mathesar using that provider.</p>"},{"location":"administration/single-sign-on/#1-configure-your-identity-provider-idp","title":"1. Configure your identity provider (IdP)","text":"<p>First, you\u2019ll need to set up your IdP to be aware of Mathesar.</p>"},{"location":"administration/single-sign-on/#1a-identify-your-idp-key","title":"1a. Identify your IdP key","text":"<p>We support over a hundred IdPs (see the full list). You\u2019ll need our \u201ckey\u201d associated with it to configure your application\u2019s callback URL in your IdP.</p> <p>Here\u2019s a list of common IdPs, with links to their documentation, and the key associated with each.</p> Provider Key Provider Key Provider Key Apple <code>apple</code> Google <code>google</code> LinkedIn <code>linkedin</code> Auth0 <code>auth0</code> Kakao <code>kakao</code> Microsoft <code>microsoft</code> GitLab <code>gitlab</code> Keycloak <code>keycloak</code> Okta <code>okta</code> <p>If you would like to use a different provider, find your IdP on this list and navigate to its page. The key is the part of the \u201cdevelopment callback URL\u201d between <code>accounts/</code> and <code>/login</code>.</p>"},{"location":"administration/single-sign-on/#1b-create-the-mathesar-application-in-your-idp","title":"1b. Create the Mathesar application in your IdP","text":"<p>Create an OAuth application within your IdP using the process you usually follow.</p> <p>During this process, you\u2019ll be asked to specify a \u201cCallback URL\u201d (also called a Redirect URI or Login URL, depending on the provider). This is the URL your IdP uses to return users to Mathesar after a successful login.</p> <p>In your provider\u2019s settings, set the Callback URL to:</p> <pre><code>https://[YOUR MATHESAR DOMAIN]/auth/oidc/[IDP KEY FROM 1a]/login/callback/\n</code></pre> <p>Ensure you replace the two variables in the example URL above. Your SSO configuration will not work unless this URL is an exact match.</p>"},{"location":"administration/single-sign-on/#2-enable-sso-in-mathesar","title":"2. Enable SSO in Mathesar","text":"<p>Enabling SSO in Mathesar requires setting up a new configuration file or environment variable to hold the necessary IdP-related settings.</p>"},{"location":"administration/single-sign-on/#2a-create-configuration-file","title":"2a. Create configuration file.","text":"<p>You\u2019ll either create a file named <code>sso.yml</code> or set up the <code>OIDC_CONFIG_DICT</code> environment variable. Which you create, and where you save it depends on how you installed Mathesar:</p> For Docker Compose installationsFor Linux, macOS, or WSL installationsFor DigitalOcean or Railway <p>If you used Docker Compose, create the <code>sso.yml</code> file next to your <code>docker-compose.yml</code> file:</p> <pre><code>mathesar\n \u251c\u2500\u2500 docker-compose.yml\n \u251c\u2500\u2500 msar/\n+\u2514\u2500\u2500 sso.yml\n</code></pre> <p>Then uncomment the following lines in your docker compose file:</p> <pre><code> volumes:\n   - ./msar/static:/code/static\n   - ./msar/media:/code/media\n # Uncomment the following to mount sso.yml and enable Single Sign-On (SSO).\n-# - ./sso.yml:/code/sso.yml\n+  - ./sso.yml:/code/sso.yml\n</code></pre> <p>For direct installations, create <code>sso.yml</code> in the installation directory you defined while installing Mathesar.</p> <p>If you deployed to an environment where you can\u2019t use the local filesystem (e.g. DigitalOcean, Railway), you can use the <code>OIDC_CONFIG_DICT</code> environment variable instead of an <code>sso.yml</code> file.</p> <p>This variable must contain a JSON representation of the same data that <code>sso.yml</code> contains, wrapped in quotes and with quotes escaped. Here\u2019s an example:</p> <pre><code>OIDC_CONFIG_DICT=\"{\\\"version\\\": 1,\\\"oidc_providers\\\": {\\\"provider1\\\": {\\\"provider_name\\\": \\\"okta\\\",\\\"client_id\\\": \\\"client-id\\\",\\\"secret\\\": \\\"client-secret\\\",\\\"server_url\\\": \\\"https://trial-2872264-admin.okta.com\\\"}}}\"\n</code></pre> <p>See Environment Variables for links to tools that simplify this process.</p>"},{"location":"administration/single-sign-on/#2b-start-with-our-sample-configuration","title":"2b. Start with our sample configuration","text":"<p>Once you have <code>sso.yml</code> created, paste in our example configuration.</p> <p>If you\u2019re using <code>OIDC_CONFIG_DICT</code> instead, we recommend starting with a YAML file and filling in the configuration before converting it to JSON.</p>"},{"location":"administration/single-sign-on/#3-configuring-your-idp-in-mathesar","title":"3. Configuring your IdP in Mathesar","text":"<p>Here\u2019s where you populate the configuration file.</p>"},{"location":"administration/single-sign-on/#3a-retrieve-needed-information","title":"3a. Retrieve needed information","text":"<p>You\u2019ll need the following information handy for this step:</p> <ul> <li>The key associated with your IdP, from Step 1a.</li> <li>OIDC issuer or discovery URL, from your IdP\u2019s documentation (e.g. <code>https://[YOUR-ORGANIZATION].okta.com</code> for Okta)</li> <li>The client ID and secret for the Mathesar OAuth application you set up in Step 1b. The secret may instead be called \u201cclient secret\u201d, \u201ctoken\u201d, or \u201cclient key\u201d.</li> </ul>"},{"location":"administration/single-sign-on/#3b-basic-setup","title":"3b. Basic setup","text":"<p>Once you have those, update <code>sso.yml</code> like so:</p> <pre><code># This config file allows you to configure OpenID Connect(OIDC)\n# based Single Sign-On(SSO) for logging into Mathesar with your preferred\n# Identity Provider(IdP).\nversion: 1\noidc_providers:\n+  [provider1]:\n+    provider_name: [PROVIDER KEY]\n+    server_url: [YOUR SERVER URL]\n+    client_id: [YOUR CLIENT ID]\n+    secret: [YOUR CLIENT SECRET]\n</code></pre> <p>Skip straight to Step 7 if you don\u2019t need to configure restricted email domains, default Postgres roles, or additional providers.</p>"},{"location":"administration/single-sign-on/#4-optional-restrict-to-specific-email-domains","title":"4. (Optional) Restrict to specific email domains","text":"<p>By default, users from any domain can log in to Mathesar, as long as they are registered with the IdP. You can change this to only allow users to log in if their domain of their email address is on a list of specific allowed domains.</p> <p>You can use the <code>allowed_email_domains</code> setting to achieve this. It expects a list of domain names (e.g., <code>['example.com', 'mathesar.org']</code>), like so:</p> <pre><code>oidc_providers:\n  provider1:\n    provider_name: okta\n    server_url: https://trial-example-admin.okta.com\n    client_id: YOUR_CLIENT_ID\n    secret: YOUR_SECRET\n+   allowed_email_domains: ['example.com', 'mathesar.org']\n</code></pre> <p>Now, only users whose email ends in <code>@example.com</code> or <code>@mathesar.org</code> will be allowed to log in.</p>"},{"location":"administration/single-sign-on/#5-optional-automatically-provision-new-users-with-a-specific-role","title":"5. (Optional) Automatically provision new users with a specific role","text":"<p>By default, administrators need to manually assign PostgreSQL roles for each individual user, per database.</p> <p>The <code>default_pg_role</code> block simplifies this process by allowing you to configure a specific PostgreSQL role to automatically assign the user the first time they log in via SSO. This must be configured per-database, as follows:</p> <pre><code>oidc_providers:\n  provider1:\n    provider_name: okta\n    server_url: https://trial-example-admin.okta.com\n    client_id: YOUR_CLIENT_ID\n    secret: YOUR_SECRET\n+   default_pg_role:\n+     db1:\n+       name: my_database\n+       host: db.internal.example.com\n+       port: 5432\n+       role: readonly_user\n+     db2:\n+       name: analytics_db\n+       host: analytics-db.example.net\n+       port: 5432\n+       role: analyst\n</code></pre> <p>Each database block must include the following:</p> <ul> <li><code>name</code>: The PostgreSQL database name</li> <li><code>host</code>: The hostname or IP address of the database</li> <li><code>port</code>: The port on which the database is running</li> <li><code>role</code>: The PostgreSQL role to assign to users</li> </ul> <p>On first login, users will be granted the specified roles on each listed database. This only works for new users; existing users will have their roles preserved.</p> <p>Overriding automatic provisioning</p> <p>Since Mathesar preserves roles associated with existing users, administrators can take advantage of this and pre-create user accounts that they want to assign a different role to, and assign roles via the Mathesar UI. Then, when the user logs in for the first time, they\u2019ll have the custom role that was assigned to them.</p> Example scenario <p>Acme, Inc. is setting up SSO and wants employees to have read-only access by default, except for the CTO and support engineers.</p> <p>During the process of setting up Mathesar, they:</p> <ol> <li>create <code>read_only</code> and <code>read_write</code> roles in their PostgreSQL database</li> <li>set <code>default_pg_role</code> to all databases to <code>read_only</code> in their SSO configuration</li> <li>create user accounts for the CTO and the support engineers and assign them the <code>read_write</code> role</li> <li>activate SSO and launch Mathesar internally</li> </ol> <p>The CTO will now have write access when logging in for the first time, but the customer success manager will only have read access.</p>"},{"location":"administration/single-sign-on/#6-optional-set-up-additional-idps","title":"6. (Optional) Set up additional IdPs","text":"<p>Mathesar supports logging in using multiple IdPs. To add an additional IdP, add a <code>provider2</code> block to your <code>sso.yml</code> file or <code>OIDC_CONFIG_DICT</code> JSON and configure it just like above.</p>"},{"location":"administration/single-sign-on/#7-activate-sso","title":"7. Activate SSO","text":"<p>Once you\u2019ve finished configuring SSO, restart Mathesar so it can load the updated <code>sso.yml</code> file or environment variable.</p> For Docker Compose installationsFor Linux, macOS, or WSL installationsFor DigitalOcean or Railway <pre><code>docker compose -f docker-compose.yml down\ndocker compose -f docker-compose.yml up -d\n</code></pre> <pre><code>sudo systemctl restart mathesar.service\n</code></pre> <p>Use their web interface to restart (often framed as a \u201credeploy\u201d) Mathesar.</p> <p>Visit your Mathesar installation and you should see your IdP as a log in option:</p> <p></p> <p>Mathesar\u2019s login screen with Okta SSO enabled.</p>"},{"location":"administration/single-sign-on/#how-to-transition-existing-users-to-sso","title":"How to transition existing users to SSO","text":"<p>When a user logs in via SSO, Mathesar checks if their email address matches an existing user. If it does, they will be logged into the that existing account, with roles and access intact.</p> <p>This means that if you already have users in Mathesar, you can transition to SSO seamlessly, as long as you ensure that their existing account\u2019s email address exactly matches the email address used for SSO. If it does not, you will need to manually update their email via Mathesar\u2019s UI before enabling SSO.</p> <p>No exception for Mathesar admins</p> <p>Once SSO is enabled, any account logging in will be connected to an existing user that matches, regardless of Mathesar privileges. This also applies to the default administrator account.</p>"},{"location":"administration/single-sign-on/#how-to-deactivate-sso","title":"How to deactivate SSO","text":"<p>You can remove the option for users to use SSO by deleting the <code>sso.yml</code> file or <code>OIDC_CONFIG_DICT</code> environment variable and restarting Mathesar. Mathesar will then only support password-based authentication.</p> <p>Deactivating SSO may require manual password resets</p> <p>Note that Mathesar users who only logged in via SSO will not have known passwords. If SSO is deactivated, these users will not be able to log in until an admin resets their password through the Mathesar UI.</p>"},{"location":"administration/uninstall/","title":"Uninstall Mathesar","text":"<p>The uninstall instructions vary depending on the installation method you chose. Select your installation method below to proceed.</p>"},{"location":"administration/uninstall/#uninstall-a-docker-installation-of-mathesar","title":"Uninstall a Docker installation of Mathesar","text":"<p>Note</p> <p>Depending on your Docker setup, you may need to run <code>docker</code> commands with <code>sudo</code>.</p> <ol> <li> <p>Remove Mathesar internal schemas.</p> <p>If you\u2019d like to continue using your PostgreSQL databases, you can remove the schemas created for Mathesar\u2019s use during installation. For each database accessible through the Mathesar UI, the safe and easy way to do so is to use Mathesar\u2019s new \u201cDisconnect Database\u201d functionality. When disconnecting a database, choose the \u201cRemove Mathesar\u2019s internal schemas\u201d option to safely remove any Mathesar schemas.</p> <p>If that doesn\u2019t work, or doesn\u2019t work for all databases, you can perform the following manual steps instead:</p> <ol> <li> <p>Connect to the database.</p> <pre><code>psql -h &lt;DB HOSTNAME&gt; -p &lt;DB PORT&gt; -U &lt;DB_USER&gt; &lt;DB_NAME&gt;\n</code></pre> </li> <li> <p>Delete the types schema.</p> <pre><code>DROP SCHEMA mathesar_types CASCADE;\n</code></pre> <p>Deleting this schema will also delete any database objects that depend on it. Specifically, this will delete any data using Mathesar\u2019s custom data types.</p> </li> <li> <p>Delete the function schemas.</p> <pre><code>DROP SCHEMA msar CASCADE;\nDROP SCHEMA __msar CASCADE;\n</code></pre> </li> </ol> </li> <li> <p>Remove the Mathesar container.</p> <pre><code>docker rm -v mathesar_service\n</code></pre> </li> <li> <p>Remove the Mathesar Image</p> <pre><code>docker rmi mathesar_service\n</code></pre> </li> <li> <p>Remove volumes related to Mathesar</p> <pre><code>docker volume rm static &amp;&amp;\ndocker volume rm media\n</code></pre> </li> </ol>"},{"location":"administration/uninstall/#uninstall-a-guided-script-or-docker-compose-installation-of-mathesar","title":"Uninstall a guided script or Docker compose installation of Mathesar","text":"<ol> <li> <p>Remove Mathesar internal schemas.</p> <p>If you\u2019d like to continue using your PostgreSQL databases, you can remove the schemas created for Mathesar\u2019s use during installation. For each database accessible through the Mathesar UI, the safe and easy way to do so is to use Mathesar\u2019s new \u201cDisconnect Database\u201d functionality. When disconnecting a database, choose the \u201cRemove Mathesar\u2019s internal schemas\u201d option to safely remove any Mathesar schemas.</p> <p>If that doesn\u2019t work, or doesn\u2019t work for all databases, you can perform the following manual steps instead:</p> <ol> <li> <p>Connect to the database.</p> <pre><code>psql -h &lt;DB HOSTNAME&gt; -p &lt;DB PORT&gt; -U &lt;DB_USER&gt; &lt;DB_NAME&gt;\n</code></pre> </li> <li> <p>Delete the types schema.</p> <pre><code>DROP SCHEMA mathesar_types CASCADE;\n</code></pre> <p>Deleting this schema will also delete any database objects that depend on it. Specifically, this will delete any data using Mathesar\u2019s custom data types.</p> </li> <li> <p>Delete the function schemas.</p> <pre><code>DROP SCHEMA msar CASCADE;\nDROP SCHEMA __msar CASCADE;\n</code></pre> </li> </ol> </li> <li> <p>Remove all Mathesar Docker images and containers.</p> <pre><code>docker compose -f docker-compose.yml down --rmi all -v\n</code></pre> </li> <li> <p>Remove configuration files.</p> <pre><code>rm -rf xMATHESAR_INSTALLATION_DIRx  # may need sudo, depending on location\n</code></pre> </li> </ol>"},{"location":"administration/uninstall/#uninstall-a-direct-installation-of-mathesar-on-linux-macos-or-wsl","title":"Uninstall a direct installation of Mathesar on Linux, macOS, or WSL","text":"<ol> <li> <p>Remove Mathesar internal schemas.</p> <p>If you\u2019d like to continue using your PostgreSQL databases, you can remove the schemas created for Mathesar\u2019s use during installation. For each database accessible through the Mathesar UI, the safe and easy way to do so is to use Mathesar\u2019s new \u201cDisconnect Database\u201d functionality. When disconnecting a database, choose the \u201cRemove Mathesar\u2019s internal schemas\u201d option to safely remove any Mathesar schemas.</p> <p>If that doesn\u2019t work, or doesn\u2019t work for all databases, you can perform the following manual steps instead:</p> <ol> <li> <p>Connect to the database.</p> <pre><code>psql -h &lt;DB HOSTNAME&gt; -p &lt;DB PORT&gt; -U &lt;DB_USER&gt; &lt;DB_NAME&gt;\n</code></pre> </li> <li> <p>Delete the types schema.</p> <pre><code>DROP SCHEMA mathesar_types CASCADE;\n</code></pre> <p>Deleting this schema will also delete any database objects that depend on it. Specifically, this will delete any data using Mathesar\u2019s custom data types.</p> </li> <li> <p>Delete the function schemas.</p> <pre><code>DROP SCHEMA msar CASCADE;\nDROP SCHEMA __msar CASCADE;\n</code></pre> </li> </ol> </li> <li> <p>Stop Mathesar if it\u2019s running. If you\u2019ve deployed Mathesar as a service and are using Caddy as a reverse proxy, follow these steps:</p> <ol> <li> <p>Stop Caddy Service     <pre><code>systemctl disable caddy.service &amp;&amp; systemctl stop caddy.service\n</code></pre></p> </li> <li> <p>Remove Caddy service file and Caddyfile</p> <pre><code>sudo rm /lib/systemd/system/caddy.service\nsudo rm /etc/caddy/Caddyfile\n</code></pre> </li> <li> <p>Stop the Mathesar service</p> <pre><code>systemctl disable mathesar.service\nsystemctl stop mathesar.service\n</code></pre> </li> <li> <p>Remove Mathesar service file</p> <pre><code>sudo rm /etc/systemd/system/mathesar.service\n</code></pre> </li> </ol> </li> <li> <p>Remove your Mathesar installation directory</p> <pre><code>rm -r xMATHESAR_INSTALLATION_DIRx  # May need sudo, depending on location\n</code></pre> <p>Your installation directory might be customized</p> <p>It\u2019s possible that Mathesar could have been installed into a different directory than shown above. Use caution when deleting this directory.</p> </li> <li> <p>Remove Django database</p> <ol> <li> <p>Connect to the psql terminal.</p> <pre><code>sudo -u postgres psql\n</code></pre> </li> <li> <p>Drop the Django database.</p> <pre><code>DROP DATABASE mathesar_django;\n</code></pre> </li> </ol> </li> </ol>"},{"location":"administration/upgrade/","title":"Upgrade Mathesar","text":"<p>Versions &gt;= 0.1.7 cannot be upgraded to versions &gt;= 0.2.0</p> <p>Users running version 0.1.7 or lower need to reinstall in order to use Mathesar 0.2.0, our initial beta release. Upgrading from our alpha versions is not supported.</p> <p>The steps to upgrade Mathesar vary by release.</p> <ol> <li>Find the release notes for the version to which you\u2019d like to upgrade.</li> <li>Look at the bottom of the release notes for upgrade instructions.</li> </ol>"},{"location":"administration/version-support/","title":"PostgreSQL and Python Version Support","text":"<p>The general strategy of Mathesar is to support whichever versions of Python and PostgreSQL are supported upstream when each release is made. We will only remove support on minor version increases. The following table will be updated as future versions of Mathesar are released.</p> Mathesar version Release Date Python Versions PostgreSQL versions 0.2.x 2025-01 3.9-3.13 13-17"},{"location":"administration/version-support/#upstream-eol-dates-to-note","title":"Upstream EOL dates to note","text":"<ul> <li>Python 3.9 is supported upstream until October 2025</li> <li>PostgreSQL 13 is supported upstream until November 2025</li> </ul>"},{"location":"administration/version-support/#default-python-and-postgresql-versions-for-mathesar-021","title":"Default Python and PostgreSQL versions for Mathesar 0.2.1","text":"<ul> <li>Mathesar\u2019s Docker image uses PostgreSQL 17.</li> <li>Mathesar\u2019s Docker image uses Python 3.13.</li> <li>The default PostgreSQL version provided in our example <code>docker-compose.yml</code> is 17.</li> </ul>"},{"location":"administration/version-support/#regarding-python-support","title":"Regarding Python Support","text":"<p>Python support is mostly only relevant for installations which followed the Install From Scratch instructions.</p>"},{"location":"api/","title":"Mathesar\u2019s API","text":"<p>Mathesar has an API available at <code>/api/rpc/v0/</code> which follows the JSON-RPC spec version 2.0. It has been built primarily for consumption by the Mathesar front end but theoretically could be used to build automation workflows and Mathesar integrations.</p>"},{"location":"api/#caveats","title":"Caveats","text":"<ul> <li> <p>The Mathesar API is not yet stable. If you build logic that depends on it, be mindful that future Mathesar versions will likely bring breaking changes to the API without warning or notice.</p> </li> <li> <p>This API documentation is still in its early stages and may contain inaccuracies or incomplete information. If you encounter any issues, please report them via GitHub.</p> </li> <li> <p>A small subset of functionality in Mathesar still relies on a legacy REST API which is gradually being phased out. It is not documented here.</p> </li> </ul>"},{"location":"api/#usage","title":"Usage","text":"<p>You can find a full list of Mathesar\u2019s RPC methods on the API Methods page.</p> <p>Converting Functions to API requests</p> <p>The methods are shown as Python function definitions to make them easier to understand, but they need to be converted into JSON payloads for API calls.</p> <p>Here\u2019s how to convert a function call like this: <code>tables.list_(*, database_id=None, **kwargs)</code> into an API payload.</p> <ol> <li>The function name becomes the method path:<ul> <li><code>tables.list_</code> converts to <code>\"method\": \"tables.list\"</code></li> </ul> </li> <li>Named parameters become part of the <code>\"parameters\"</code> object:    <pre><code>{\n  \"method\": \"tables.list\",\n  \"parameters\": {\n    \"database_id\": 1\n  }\n}\n</code></pre></li> </ol>"},{"location":"api/#requests","title":"Requests","text":"<p>To use an RPC method:</p> <ul> <li>Call it with a dot path starting from its root path.</li> <li>Always use named parameters.</li> <li>Ensure that your request includes HTTP headers for valid session IDs, as well as CSRF cookies and tokens.</li> </ul> <p>Example</p> <p>To list information about tables for a schema, call the <code>tables.list</code> method with a payload like this:</p> <p><code>POST /api/rpc/v0/</code></p> <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"id\": 234,\n  \"method\": \"tables.list\",\n  \"params\": {\n    \"schema_oid\": 47324,\n    \"database_id\": 1\n  }\n}\n</code></pre>"},{"location":"api/#success-responses","title":"Success Responses","text":"<p>Upon a successful RPC method call, the API will return a success object with the following form:</p> <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"id\": 234,\n  \"result\": &lt;any&gt;\n}\n</code></pre> <p>The <code>result</code> is whatever was returned by the underlying method.</p>"},{"location":"api/#error-responses","title":"Error Responses","text":"<p>When an RPC method call fails, it generates an error response of the following form:</p> <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"id\": 234,\n  \"error\": {\n    \"code\": &lt;int&gt;,\n    \"message\": &lt;str&gt;\n  }\n}\n</code></pre> <p>The <code>code</code> is a negative integer. Some codes are produced according to the JSON-RPC spec.</p> <p>Other error codes are grouped according to the library that produced the Exception:</p> <ul> <li><code>builtins</code>: -31xxx</li> <li><code>psycopg</code> or <code>psycopg2</code>: -30xxx</li> <li><code>django</code>: -29xxx</li> <li><code>mathesar</code> (our code): -28xxx</li> <li><code>db</code> (our code): -27xxx</li> <li><code>sqlalchemy</code>: -26xxx</li> <li>other: -25xxx</li> </ul> <p>Unrecognized errors from a given library return a \u201cround number\u201d code, so an unknown <code>builtins</code> error gets the code -31000.</p>"},{"location":"api/methods/","title":"API Methods","text":""},{"location":"api/methods/#analytics","title":"Analytics","text":"<p>Classes and functions exposed to the RPC endpoint for managing analytics.</p>"},{"location":"api/methods/#analytics.get_state","title":"analytics.get_state","text":"<pre><code>get_state()\n</code></pre> <p>Returns:</p> Type Description <code>AnalyticsState</code> <p>A boolean to identify if analytics is enabled.</p>"},{"location":"api/methods/#analytics.initialize","title":"analytics.initialize","text":"<pre><code>initialize()\n</code></pre> <p>Initialize analytics collection and reporting in Mathesar</p> <p>If initialized, analytics are gathered to a local model once per day, and uploaded.</p>"},{"location":"api/methods/#analytics.disable","title":"analytics.disable","text":"<pre><code>disable()\n</code></pre> <p>Disable analytics collection and reporting in Mathesar</p> <p>Disabling analytics amounts to (for now) simply deleting the Installation ID, ensuring that it\u2019s impossible to save analytics reports. Any reports currently saved are removed when the Installation ID is deleted.</p>"},{"location":"api/methods/#analytics.view_report","title":"analytics.view_report","text":"<pre><code>view_report()\n</code></pre> <p>View an example analytics report, prepared with the same function that creates real reports that would be saved and uploaded.</p> <p>Returns:</p> Type Description <code>AnalyticsReport</code> <p>An analytics report.</p>"},{"location":"api/methods/#analytics.upload_feedback","title":"analytics.upload_feedback","text":"<pre><code>upload_feedback(message)\n</code></pre> <p>Upload a feedback message to Mathesar\u2019s servers.</p> <p>Parameters:</p> Name Type Description Default <code>message</code> <code>str</code> <p>The feedback message to send.</p> required"},{"location":"api/methods/#analytics.AnalyticsReport","title":"analytics.AnalyticsReport","text":"<p>               Bases: <code>TypedDict</code></p> <p>A report with some statistics about the data accessible by Mathesar.</p> <p>Attributes:</p> Name Type Description <code>installation_id</code> <code>Optional[str]</code> <p>A unique ID for this Mathesar installation.</p> <code>mathesar_version</code> <code>str</code> <p>The version of Mathesar.</p> <code>user_count</code> <code>int</code> <p>The number of configured users in Mathesar.</p> <code>active_user_count</code> <code>int</code> <p>The number of users who have recently logged in.</p> <code>configured_role_count</code> <code>int</code> <p>The number of DB roles configured.</p> <code>connected_database_count</code> <code>int</code> <p>The number of databases configured.</p> <code>connected_database_schema_count</code> <code>int</code> <p>The number of all schemas in all connected databases.</p> <code>connected_database_table_count</code> <code>int</code> <p>The total number of tables in all connected databasees.</p> <code>connected_database_record_count</code> <code>int</code> <p>The total number of records in all connected databasees (approximated)</p> <code>exploration_count</code> <code>int</code> <p>The number of explorations.</p> <code>form_count</code> <code>int</code> <p>The number of forms.</p> <code>public_form_count</code> <code>int</code> <p>The number of published forms.</p>"},{"location":"api/methods/#analytics.AnalyticsState","title":"analytics.AnalyticsState","text":"<p>               Bases: <code>TypedDict</code></p> <p>Returns the current state of analytics.</p> <p>Attributes:</p> Name Type Description <code>enabled</code> <code>bool</code> <p>A boolean representing if analytics is enabled.</p>"},{"location":"api/methods/#collaborators","title":"Collaborators","text":""},{"location":"api/methods/#collaborators.list_","title":"collaborators.list_","text":"<pre><code>list_(*, database_id=None, **kwargs)\n</code></pre> <p>List information about collaborators. Exposed as <code>list</code>.</p> <p>If called with no <code>database_id</code>, all collaborators for all databases are listed.</p> <p>Parameters:</p> Name Type Description Default <code>database_id</code> <code>int</code> <p>The Django id of the database associated with the collaborators.</p> <code>None</code> <p>Returns:</p> Type Description <code>list[CollaboratorInfo]</code> <p>A list of collaborators.</p>"},{"location":"api/methods/#collaborators.add","title":"collaborators.add","text":"<pre><code>add(*, database_id, user_id, configured_role_id, **kwargs)\n</code></pre> <p>Set up a new collaborator for a database.</p> <p>Parameters:</p> Name Type Description Default <code>database_id</code> <code>int</code> <p>The Django id of the Database to associate with the collaborator.</p> required <code>user_id</code> <code>int</code> <p>The Django id of the User model instance who\u2019d be the collaborator.</p> required <code>configured_role_id</code> <code>int</code> <p>The Django id of the ConfiguredRole model instance to associate with the collaborator.</p> required"},{"location":"api/methods/#collaborators.delete","title":"collaborators.delete","text":"<pre><code>delete(*, collaborator_id, **kwargs)\n</code></pre> <p>Delete a collaborator from a database.</p> <p>Parameters:</p> Name Type Description Default <code>collaborator_id</code> <code>int</code> <p>The Django id of the UserDatabaseRoleMap model instance of the collaborator.</p> required"},{"location":"api/methods/#collaborators.set_role","title":"collaborators.set_role","text":"<pre><code>set_role(*, collaborator_id, configured_role_id, **kwargs)\n</code></pre> <p>Set the role of a collaborator for a database.</p> <p>Parameters:</p> Name Type Description Default <code>collaborator_id</code> <code>int</code> <p>The Django id of the UserDatabaseRoleMap model instance of the collaborator.</p> required <code>configured_role_id</code> <code>int</code> <p>The Django id of the ConfiguredRole model instance to associate with the collaborator.</p> required"},{"location":"api/methods/#collaborators.CollaboratorInfo","title":"collaborators.CollaboratorInfo","text":"<p>               Bases: <code>TypedDict</code></p> <p>Information about a collaborator.</p> <p>Attributes:</p> Name Type Description <code>id</code> <code>int</code> <p>the Django ID of the UserDatabaseRoleMap model instance.</p> <code>user_id</code> <code>int</code> <p>The Django ID of the User model instance of the collaborator.</p> <code>database_id</code> <code>int</code> <p>the Django ID of the Database model instance for the collaborator.</p> <code>configured_role_id</code> <code>int</code> <p>The Django ID of the ConfiguredRole model instance for the collaborator.</p>"},{"location":"api/methods/#columns","title":"Columns","text":""},{"location":"api/methods/#columns.list_","title":"columns.list_","text":"<pre><code>list_(*, table_oid, database_id, **kwargs)\n</code></pre> <p>List information about columns for a table. Exposed as <code>list</code>.</p> <p>Parameters:</p> Name Type Description Default <code>table_oid</code> <code>int</code> <p>Identity of the table in the user\u2019s database.</p> required <code>database_id</code> <code>int</code> <p>The Django id of the database containing the table.</p> required <p>Returns:</p> Type Description <code>list[ColumnInfo]</code> <p>A list of column details.</p>"},{"location":"api/methods/#columns.add","title":"columns.add","text":"<pre><code>add(*, column_data_list, table_oid, database_id, **kwargs)\n</code></pre> <p>Add columns to a table.</p> <p>There are defaults for both the name and type of a column, and so passing <code>[{}]</code> for <code>column_data_list</code> would add a single column of type <code>CHARACTER VARYING</code>, with an auto-generated name.</p> <p>Parameters:</p> Name Type Description Default <code>column_data_list</code> <code>list[CreatableColumnInfo]</code> <p>A list describing desired columns to add.</p> required <code>table_oid</code> <code>int</code> <p>Identity of the table to which we\u2019ll add columns.</p> required <code>database_id</code> <code>int</code> <p>The Django id of the database containing the table.</p> required <p>Returns:</p> Type Description <code>list[int]</code> <p>An array of the attnums of the new columns.</p>"},{"location":"api/methods/#columns.add_primary_key_column","title":"columns.add_primary_key_column","text":"<pre><code>add_primary_key_column(\n    *,\n    pkey_type,\n    table_oid,\n    database_id,\n    drop_existing_pkey_column=False,\n    name=\"id\",\n    **kwargs\n)\n</code></pre> <p>Add a primary key column to a table of a predefined type.</p> <p>The column will be added, set as the primary key, and also filled for each preexisting row, using the default generating function or method associated with the given <code>pkey_type</code>.</p> <p>If there is a name collision for the new primary key column, we automatically generate a non-colliding name for the new primary key column, and leave the existing table column names as they are.</p> <p>Primary key types - \u2018UUIDv4\u2019: This results in a <code>uuid</code> primary key column, with     default values generated by the <code>get_random_uuid()</code> function     provided by PostgreSQL. This amounts to UUIDv4 uuid definitions. - \u2018IDENTITY\u2019: This results in an <code>integer</code> primary key column with     default values created via an identity sequence, i.e., using     <code>GENERATED BY DEFAULT AS IDENTITY</code>.</p> <p>Parameters:</p> Name Type Description Default <code>pkey_type</code> <code>Literal['IDENTITY', 'UUIDv4']</code> <p>Defines the type and default of the primary key.</p> required <code>table_oid</code> <code>int</code> <p>The OID of the table getting a primary key.</p> required <code>database_id</code> <code>int</code> <p>The Django id of the database containing the table.</p> required <code>drop_existing_pkey_column</code> <code>bool</code> <p>Whether to drop the old pkey column.</p> <code>False</code> <code>name</code> <code>str</code> <p>A custom name for the added primary key column.</p> <code>'id'</code>"},{"location":"api/methods/#columns.patch","title":"columns.patch","text":"<pre><code>patch(\n    *, column_data_list, table_oid, database_id, **kwargs\n)\n</code></pre> <p>Alter details of preexisting columns in a table.</p> <p>Does not support altering the type or type options of array columns.</p> <p>Parameters:</p> Name Type Description Default <code>column_data_list</code> <code>list[SettableColumnInfo]</code> <p>A list describing desired column alterations.</p> required <code>table_oid</code> <code>int</code> <p>Identity of the table whose columns we\u2019ll modify.</p> required <code>database_id</code> <code>int</code> <p>The Django id of the database containing the table.</p> required <p>Returns:</p> Type Description <code>int</code> <p>The number of columns altered.</p>"},{"location":"api/methods/#columns.delete","title":"columns.delete","text":"<pre><code>delete(*, column_attnums, table_oid, database_id, **kwargs)\n</code></pre> <p>Delete columns from a table.</p> <p>Parameters:</p> Name Type Description Default <code>column_attnums</code> <code>list[int]</code> <p>A list of attnums of columns to delete.</p> required <code>table_oid</code> <code>int</code> <p>Identity of the table in the user\u2019s database.</p> required <code>database_id</code> <code>int</code> <p>The Django id of the database containing the table.</p> required <p>Returns:</p> Type Description <code>int</code> <p>The number of columns dropped.</p>"},{"location":"api/methods/#columns.reset_mash","title":"columns.reset_mash","text":"<pre><code>reset_mash(\n    *, column_attnum, table_oid, database_id, **kwargs\n)\n</code></pre> <p>Resets the outdated \u201cmash\u201d for a given file column.</p> <p>Parameters:</p> Name Type Description Default <code>column_attnum</code> <code>int</code> <p>attnum of the file column whose mashes need to be reset.</p> required <code>table_oid</code> <code>int</code> <p>Identity of the table containing the file column.</p> required <code>database_id</code> <code>int</code> <p>The Django id of the database containing the table.</p> required"},{"location":"api/methods/#columns.list_with_metadata","title":"columns.list_with_metadata","text":"<pre><code>list_with_metadata(*, table_oid, database_id, **kwargs)\n</code></pre> <p>List information about columns for a table, along with the metadata associated with each column. Args:     table_oid: Identity of the table in the user\u2019s database.     database_id: The Django id of the database containing the table. Returns:     A list of column details.</p>"},{"location":"api/methods/#columns.ColumnInfo","title":"columns.ColumnInfo","text":"<p>               Bases: <code>TypedDict</code></p> <p>Information about a column. Extends the settable fields.</p> <p>Attributes:</p> Name Type Description <code>id</code> <code>int</code> <p>The <code>attnum</code> of the column in the table.</p> <code>name</code> <code>str</code> <p>The name of the column.</p> <code>type</code> <code>str</code> <p>The type of the column on the database.</p> <code>type_options</code> <code>TypeOptions</code> <p>The options applied to the column type.</p> <code>nullable</code> <code>bool</code> <p>Whether or not the column is nullable.</p> <code>primary_key</code> <code>bool</code> <p>Whether the column is in the primary key.</p> <code>default</code> <code>ColumnDefault</code> <p>The default value and whether it\u2019s dynamic.</p> <code>has_dependents</code> <code>bool</code> <p>Whether the column has dependent objects.</p> <code>description</code> <code>str</code> <p>The description of the column.</p> <code>current_role_priv</code> <code>list[Literal['SELECT', 'INSERT', 'UPDATE', 'REFERENCES']]</code> <p>The privileges available to the user for the column.</p>"},{"location":"api/methods/#columns.CreatablePkColumnInfo","title":"columns.CreatablePkColumnInfo","text":"<p>               Bases: <code>TypedDict</code></p> <p>Information needed to add a new PK column.</p> <p>No keys are required.</p> <p>Attributes:</p> Name Type Description <code>name</code> <code>Optional[str]</code> <p>The name of the column.</p> <code>type</code> <code>Optional[Literal['IDENTITY', 'UUIDv4']]</code> <p>The type of the pk column on the database.</p>"},{"location":"api/methods/#columns.CreatableColumnInfo","title":"columns.CreatableColumnInfo","text":"<p>               Bases: <code>TypedDict</code></p> <p>Information needed to add a new column.</p> <p>No keys are required.</p> <p>Attributes:</p> Name Type Description <code>name</code> <code>Optional[str]</code> <p>The name of the column.</p> <code>type</code> <code>Optional[str]</code> <p>The type of the column on the database.</p> <code>type_options</code> <code>Optional[TypeOptions]</code> <p>The options applied to the column type.</p> <code>nullable</code> <code>Optional[bool]</code> <p>Whether or not the column is nullable.</p> <code>default</code> <code>Optional[ColumnDefault]</code> <p>The default value.</p> <code>description</code> <code>Optional[str]</code> <p>The description of the column.</p>"},{"location":"api/methods/#columns.PreviewableColumnInfo","title":"columns.PreviewableColumnInfo","text":"<p>               Bases: <code>TypedDict</code></p> <p>Information needed to preview a column.</p> <p>Attributes:</p> Name Type Description <code>id</code> <code>int</code> <p>The <code>attnum</code> of the column in the table.</p> <code>type</code> <code>Optional[str]</code> <p>The new type to be applied to a column.</p> <code>type_options</code> <code>Optional[TypeOptions]</code> <p>The options to be applied to the column type.</p>"},{"location":"api/methods/#columns.SettableColumnInfo","title":"columns.SettableColumnInfo","text":"<p>               Bases: <code>TypedDict</code></p> <p>Information about a column, restricted to settable fields.</p> <p>When possible, Passing <code>null</code> for a key will clear the underlying setting. E.g.,</p> <ul> <li><code>default = null</code> clears the column default setting.</li> <li><code>type_options = null</code> clears the type options for the column.</li> <li><code>description = null</code> clears the column description.</li> </ul> <p>Setting any of <code>name</code>, <code>type</code>, or <code>nullable</code> is a noop.</p> <p>Only the <code>id</code> key is required.</p> <p>Attributes:</p> Name Type Description <code>id</code> <code>int</code> <p>The <code>attnum</code> of the column in the table.</p> <code>name</code> <code>Optional[str]</code> <p>The name of the column.</p> <code>type</code> <code>Optional[str]</code> <p>The type of the column on the database.</p> <code>type_options</code> <code>Optional[TypeOptions]</code> <p>The options applied to the column type.</p> <code>nullable</code> <code>Optional[bool]</code> <p>Whether or not the column is nullable.</p> <code>default</code> <code>Optional[ColumnDefault]</code> <p>The default value.</p> <code>description</code> <code>Optional[str]</code> <p>The description of the column.</p>"},{"location":"api/methods/#columns.TypeOptions","title":"columns.TypeOptions","text":"<p>               Bases: <code>TypedDict</code></p> <p>Options applied to a type. All attributes are optional.</p> <p>Take special care with the difference between numeric and date/time types w.r.t. precision. The attribute has a different meaning depending on the type to which it\u2019s being applied.</p> <p>Attributes:</p> Name Type Description <code>precision</code> <code>int</code> <p>For numeric types, the number of significant digits.        For date/time types, the number of fractional digits.</p> <code>scale</code> <code>int</code> <p>For numeric types, the number of fractional digits.</p> <code>fields</code> <code>str</code> <p>Which time fields are stored. See Postgres docs.</p> <code>length</code> <code>int</code> <p>The maximum length of a character-type field.</p> <code>item_type</code> <code>str</code> <p>The member type for arrays.</p>"},{"location":"api/methods/#columns.ColumnDefault","title":"columns.ColumnDefault","text":"<p>               Bases: <code>TypedDict</code></p> <p>A dictionary describing the default value for a column.</p> <p>Attributes:</p> Name Type Description <code>value</code> <code>str</code> <p>An SQL expression giving the default value.</p> <code>is_dynamic</code> <code>bool</code> <p>Whether the <code>value</code> is possibly dynamic.</p>"},{"location":"api/methods/#column-metadata","title":"Column Metadata","text":"<p>Classes and functions exposed to the RPC endpoint for managing column metadata.</p>"},{"location":"api/methods/#columns.metadata.list_","title":"columns.metadata.list_","text":"<pre><code>list_(*, table_oid, database_id, **kwargs)\n</code></pre> <p>List metadata associated with columns for a table. Exposed as <code>list</code>.</p> <p>Parameters:</p> Name Type Description Default <code>table_oid</code> <code>int</code> <p>Identity of the table in the user\u2019s database.</p> required <code>database_id</code> <code>int</code> <p>The Django id of the database containing the table.</p> required <p>Returns:</p> Type Description <code>list[ColumnMetaDataRecord]</code> <p>A list of column meta data objects.</p>"},{"location":"api/methods/#columns.metadata.set_","title":"columns.metadata.set_","text":"<pre><code>set_(\n    *,\n    column_meta_data_list,\n    table_oid,\n    database_id,\n    **kwargs\n)\n</code></pre> <p>Set metadata associated with columns of a table for a database. Exposed as <code>set</code>.</p> <p>Parameters:</p> Name Type Description Default <code>column_meta_data_list</code> <code>list[ColumnMetaDataBlob]</code> <p>A list describing desired metadata alterations.</p> required <code>table_oid</code> <code>int</code> <p>Identity of the table whose metadata we\u2019ll modify.</p> required <code>database_id</code> <code>int</code> <p>The Django id of the database containing the table.</p> required"},{"location":"api/methods/#columns.metadata.ColumnMetaDataRecord","title":"columns.metadata.ColumnMetaDataRecord","text":"<p>               Bases: <code>TypedDict</code></p> <p>Metadata for a column in a table.</p> <p>Only the <code>database</code>, <code>table_oid</code>, and <code>attnum</code> keys are required.</p> <p>Attributes:</p> Name Type Description <code>database_id</code> <code>int</code> <p>The Django id of the database containing the table.</p> <code>table_oid</code> <code>int</code> <p>The OID of the table containing the column.</p> <code>attnum</code> <code>int</code> <p>The attnum of the column in the table.</p> <code>bool_input</code> <code>Optional[Literal['dropdown', 'checkbox']]</code> <p>How the input for a boolean column should be shown.</p> <code>bool_true</code> <code>Optional[str]</code> <p>A string to display for <code>true</code> values.</p> <code>bool_false</code> <code>Optional[str]</code> <p>A string to display for <code>false</code> values.</p> <code>num_min_frac_digits</code> <code>Optional[int]</code> <p>Minimum digits shown after the decimal point.</p> <code>num_max_frac_digits</code> <code>Optional[int]</code> <p>Maximum digits shown after the decimal point.</p> <code>num_grouping</code> <code>Optional[str]</code> <p>Specifies how grouping separators are displayed for numeric values.</p> <code>num_format</code> <code>Optional[str]</code> <p>Specifies the locale-specific format for displaying numeric values.</p> <code>mon_currency_symbol</code> <code>Optional[str]</code> <p>The currency symbol shown for money value.</p> <code>mon_currency_location</code> <code>Optional[Literal['after-minus', 'end-with-space']]</code> <p>Where the currency symbol should be shown.</p> <code>time_format</code> <code>Optional[str]</code> <p>A string representing the format of time values.</p> <code>date_format</code> <code>Optional[str]</code> <p>A string representing the format of date values.</p> <code>duration_min</code> <code>Optional[str]</code> <p>The smallest unit for displaying durations.</p> <code>duration_max</code> <code>Optional[str]</code> <p>The largest unit for displaying durations.</p> <code>display_width</code> <code>Optional[int]</code> <p>The pixel width of the column</p> <code>file_backend</code> <code>Optional[int]</code> <p>The name of a backend for storing file attachments.</p>"},{"location":"api/methods/#columns.metadata.ColumnMetaDataBlob","title":"columns.metadata.ColumnMetaDataBlob","text":"<p>               Bases: <code>TypedDict</code></p> <p>The metadata fields which can be set for a column in a table.</p> <p>Attributes:</p> Name Type Description <code>attnum</code> <code>int</code> <p>The attnum of the column in the table.</p> <code>bool_input</code> <code>Optional[Literal['dropdown', 'checkbox']]</code> <p>How the input for a boolean column should be shown.</p> <code>bool_true</code> <code>Optional[str]</code> <p>A string to display for <code>true</code> values.</p> <code>bool_false</code> <code>Optional[str]</code> <p>A string to display for <code>false</code> values.</p> <code>num_min_frac_digits</code> <code>Optional[int]</code> <p>Minimum digits shown after the decimal point.</p> <code>num_max_frac_digits</code> <code>Optional[int]</code> <p>Maximum digits shown after the decimal point.</p> <code>num_grouping</code> <code>Optional[str]</code> <p>Specifies how grouping separators are displayed for numeric values.</p> <code>num_format</code> <code>Optional[str]</code> <p>Specifies the locale-specific format for displaying numeric values.</p> <code>mon_currency_symbol</code> <code>Optional[str]</code> <p>The currency symbol shown for money value.</p> <code>mon_currency_location</code> <code>Optional[Literal['after-minus', 'end-with-space']]</code> <p>Where the currency symbol should be shown.</p> <code>time_format</code> <code>Optional[str]</code> <p>A string representing the format of time values.</p> <code>date_format</code> <code>Optional[str]</code> <p>A string representing the format of date values.</p> <code>duration_min</code> <code>Optional[str]</code> <p>The smallest unit for displaying durations.</p> <code>duration_max</code> <code>Optional[str]</code> <p>The largest unit for displaying durations.</p> <code>display_width</code> <code>Optional[int]</code> <p>The pixel width of the column.</p> <code>file_backend</code> <code>Optional[int]</code> <p>The name of a backend for storing file attachments.</p>"},{"location":"api/methods/#configured-databases","title":"Configured Databases","text":""},{"location":"api/methods/#databases.configured.list_","title":"databases.configured.list_","text":"<pre><code>list_(*, server_id=None, **kwargs)\n</code></pre> <p>List information about databases for a server. Exposed as <code>list</code>.</p> <p>If called with no <code>server_id</code>, all databases for all servers are listed.</p> <p>Parameters:</p> Name Type Description Default <code>server_id</code> <code>int</code> <p>The Django id of the server containing the databases.</p> <code>None</code> <p>Returns:</p> Type Description <code>list[ConfiguredDatabaseInfo]</code> <p>A list of database details.</p>"},{"location":"api/methods/#databases.configured.patch","title":"databases.configured.patch","text":"<pre><code>patch(*, database_id, patch, **kwargs)\n</code></pre> <p>Patch a configured database, given its id.</p> <p>Parameters:</p> Name Type Description Default <code>database_id</code> <code>int</code> <p>The Django id of the database</p> required <code>patch</code> <code>ConfiguredDatabasePatch</code> <p>An object containing the fields to update.</p> required <p>Returns:</p> Type Description <code>ConfiguredDatabaseInfo</code> <p>An object describing the database.</p>"},{"location":"api/methods/#databases.configured.disconnect","title":"databases.configured.disconnect","text":"<pre><code>disconnect(\n    *,\n    database_id,\n    schemas_to_remove=[\"msar\", \"__msar\", \"mathesar_types\"],\n    strict=True,\n    role_name=None,\n    password=None,\n    disconnect_db_server=False\n)\n</code></pre> <p>Disconnect a configured database, after removing Mathesar SQL from it.</p> <p>If no <code>role_name</code> and <code>password</code> are submitted, we will determine the role which owns the <code>msar</code> schema on the database, then use that role for the SQL removal.</p> <p>All removals are performed safely, and without <code>CASCADE</code>. This is to make sure the user can\u2019t accidentally lose data calling this function.</p> <p>Parameters:</p> Name Type Description Default <code>database_id</code> <code>int</code> <p>The Django id of the database.</p> required <code>schemas_to_remove</code> <code>list[str]</code> <p>Mathesar schemas we should remove SQL from.</p> <code>['msar', '__msar', 'mathesar_types']</code> <code>strict</code> <code>bool</code> <p>If True, we throw an exception and roll back changes if we fail to remove any objects which we expected to remove.</p> <code>True</code> <code>role_name</code> <code>str</code> <p>the username of the role used for upgrading.</p> <code>None</code> <code>password</code> <code>str</code> <p>the password of the role used for upgrading.</p> <code>None</code> <code>disconnect_db_server</code> <code>bool</code> <p>If True, will delete the stored server metadata(host, port, role credentials) from Mathesar. This is intended for optional use while disconnecting the last database on the server.</p> <code>False</code>"},{"location":"api/methods/#databases.configured.ConfiguredDatabaseInfo","title":"databases.configured.ConfiguredDatabaseInfo","text":"<p>               Bases: <code>TypedDict</code></p> <p>Information about a database.</p> <p>Attributes:</p> Name Type Description <code>id</code> <code>int</code> <p>the Django ID of the database model instance.</p> <code>name</code> <code>str</code> <p>The name of the database on the server.</p> <code>server_id</code> <code>int</code> <p>the Django ID of the server model instance for the database.</p> <code>last_confirmed_sql_version</code> <code>str</code> <p>The last version of the SQL scripts which were confirmed to have been run on this database.</p> <code>needs_upgrade_attention</code> <code>bool</code> <p>This is <code>True</code> if the SQL version isn\u2019t the same as the service version.</p> <code>nickname</code> <code>Optional[str]</code> <p>A optional user-configurable name for the database.</p>"},{"location":"api/methods/#databases.configured.ConfiguredDatabasePatch","title":"databases.configured.ConfiguredDatabasePatch","text":"<p>               Bases: <code>TypedDict</code></p> <p>Information to be changed about a configured database</p> <p>Attributes:</p> Name Type Description <code>name</code> <code>Optional[str]</code> <p>The name of the database on the server.</p> <code>nickname</code> <code>Optional[str]</code> <p>A optional user-configurable name for the database.</p>"},{"location":"api/methods/#constraints","title":"Constraints","text":"<p>Classes and functions exposed to the RPC endpoint for managing table constraints.</p>"},{"location":"api/methods/#constraints.list_","title":"constraints.list_","text":"<pre><code>list_(*, table_oid, database_id, **kwargs)\n</code></pre> <p>List information about constraints in a table. Exposed as <code>list</code>.</p> <p>Parameters:</p> Name Type Description Default <code>table_oid</code> <code>int</code> <p>The oid of the table to list constraints for.</p> required <code>database_id</code> <code>int</code> <p>The Django id of the database containing the table.</p> required <p>Returns:</p> Type Description <code>list[ConstraintInfo]</code> <p>A list of constraint details.</p>"},{"location":"api/methods/#constraints.add","title":"constraints.add","text":"<pre><code>add(\n    *, table_oid, constraint_def_list, database_id, **kwargs\n)\n</code></pre> <p>Add constraint(s) on a table in bulk.</p> <p>Parameters:</p> Name Type Description Default <code>table_oid</code> <code>int</code> <p>Identity of the table to delete constraint for.</p> required <code>constraint_def_list</code> <code>CreatableConstraintInfo</code> <p>A list describing the constraints to add.</p> required <code>database_id</code> <code>int</code> <p>The Django id of the database containing the table.</p> required <p>Returns:</p> Type Description <code>list[int]</code> <p>The oid(s) of all the constraints on the table.</p>"},{"location":"api/methods/#constraints.delete","title":"constraints.delete","text":"<pre><code>delete(*, table_oid, constraint_oid, database_id, **kwargs)\n</code></pre> <p>Delete a constraint from a table.</p> <p>Parameters:</p> Name Type Description Default <code>table_oid</code> <code>int</code> <p>Identity of the table to delete constraint for.</p> required <code>constraint_oid</code> <code>int</code> <p>The OID of the constraint to delete.</p> required <code>database_id</code> <code>int</code> <p>The Django id of the database containing the table.</p> required <p>Returns:</p> Type Description <code>str</code> <p>The name of the dropped constraint.</p>"},{"location":"api/methods/#constraints.ForeignKeyConstraint","title":"constraints.ForeignKeyConstraint","text":"<p>               Bases: <code>TypedDict</code></p> <p>Information about a foreign key constraint.</p> <p>Attributes:</p> Name Type Description <code>type</code> <code>str</code> <p>The type of the constraint(<code>'f'</code> for foreign key constraint).</p> <code>columns</code> <code>list[int]</code> <p>List of columns to set a foreign key on.</p> <code>fkey_relation_id</code> <code>int</code> <p>The OID of the referent table.</p> <code>fkey_columns</code> <code>list[int]</code> <p>List of referent column(s).</p> <code>name</code> <code>Optional[str]</code> <p>The name of the constraint.</p> <code>deferrable</code> <code>Optional[bool]</code> <p>Whether to postpone constraint checking until the end of the transaction.</p> <code>fkey_update_action</code> <code>Optional[str]</code> <p>Specifies what action should be taken when the referenced key is updated. Valid options include <code>'a'(no action)</code>(default behavior), <code>'r'(restrict)</code>, <code>'c'(cascade)</code>, <code>'n'(set null)</code>, <code>'d'(set default)</code></p> <code>fkey_delete_action</code> <code>Optional[str]</code> <p>Specifies what action should be taken when the referenced key is deleted. Valid options include <code>'a'(no action)</code>(default behavior), <code>'r'(restrict)</code>, <code>'c'(cascade)</code>, <code>'n'(set null)</code>, <code>'d'(set default)</code></p> <code>fkey_match_type</code> <code>Optional[str]</code> <p>Specifies how the foreign key matching should be performed. Valid options include <code>'f'(full match)</code>, <code>'s'(simple match)</code>(default behavior).</p>"},{"location":"api/methods/#constraints.PrimaryKeyConstraint","title":"constraints.PrimaryKeyConstraint","text":"<p>               Bases: <code>TypedDict</code></p> <p>Information about a primary key constraint.</p> <p>Attributes:</p> Name Type Description <code>type</code> <code>str</code> <p>The type of the constraint(<code>'p'</code> for primary key constraint).</p> <code>columns</code> <code>list[int]</code> <p>List of columns to set a primary key on.</p> <code>name</code> <code>Optional[str]</code> <p>The name of the constraint.</p> <code>deferrable</code> <code>Optional[bool]</code> <p>Whether to postpone constraint checking until the end of the transaction.</p>"},{"location":"api/methods/#constraints.UniqueConstraint","title":"constraints.UniqueConstraint","text":"<p>               Bases: <code>TypedDict</code></p> <p>Information about a unique constraint.</p> <p>Attributes:</p> Name Type Description <code>type</code> <code>str</code> <p>The type of the constraint(<code>'u'</code> for unique constraint).</p> <code>columns</code> <code>list[int]</code> <p>List of columns to set a unique constraint on.</p> <code>name</code> <code>Optional[str]</code> <p>The name of the constraint.</p> <code>deferrable</code> <code>Optional[bool]</code> <p>Whether to postpone constraint checking until the end of the transaction.</p>"},{"location":"api/methods/#constraints.CreatableConstraintInfo","title":"constraints.CreatableConstraintInfo  <code>module-attribute</code>","text":"<pre><code>CreatableConstraintInfo = list[\n    Union[\n        ForeignKeyConstraint,\n        PrimaryKeyConstraint,\n        UniqueConstraint,\n    ]\n]\n</code></pre> <p>Type alias for a list of creatable constraints which can be unique, primary key, or foreign key constraints.</p>"},{"location":"api/methods/#data-modeling","title":"Data Modeling","text":"<p>Classes and functions exposed to the RPC endpoint for managing data models.</p>"},{"location":"api/methods/#data_modeling.add_foreign_key_column","title":"data_modeling.add_foreign_key_column","text":"<pre><code>add_foreign_key_column(\n    *,\n    column_name,\n    referrer_table_oid,\n    referent_table_oid,\n    database_id,\n    **kwargs\n)\n</code></pre> <p>Add a foreign key column to a table.</p> <p>The foreign key column will be newly created, and will reference the <code>id</code> column of the referent table.</p> <p>Parameters:</p> Name Type Description Default <code>column_name</code> <code>str</code> <p>The name of the column to create.</p> required <code>referrer_table_oid</code> <code>int</code> <p>The OID of the table getting the new column.</p> required <code>referent_table_oid</code> <code>int</code> <p>The OID of the table being referenced.</p> required"},{"location":"api/methods/#data_modeling.add_mapping_table","title":"data_modeling.add_mapping_table","text":"<pre><code>add_mapping_table(\n    *,\n    table_name,\n    mapping_columns,\n    schema_oid,\n    database_id,\n    **kwargs\n)\n</code></pre> <p>Add a mapping table to give a many-to-many link between referents.</p> <p>The foreign key columns in the mapping table will reference the <code>id</code> column of the referent tables.</p> <p>Parameters:</p> Name Type Description Default <code>table_name</code> <code>str</code> <p>The name for the new mapping table.</p> required <code>schema_oid</code> <code>int</code> <p>The OID of the schema for the mapping table.</p> required <code>mapping_columns</code> <code>list[MappingColumn]</code> <p>The foreign key columns to create in the mapping table.</p> required"},{"location":"api/methods/#data_modeling.suggest_types","title":"data_modeling.suggest_types","text":"<pre><code>suggest_types(*, table_oid, database_id, **kwargs)\n</code></pre> <p>Infer the best type for each column in the table.</p> <p>Currently we only suggest different types for columns which originate as type <code>text</code>.</p> <p>Parameters:</p> Name Type Description Default <code>table_oid</code> <code>int</code> <p>The OID of the table whose columns we\u2019re inferring types for.</p> required <code>database_id</code> <code>int</code> <p>The Django id of the database containing the table.</p> required <p>The response JSON will have attnum keys, and values will be the result of <code>format_type</code> for the inferred type of each column, i.e., the canonical string referring to the type.</p>"},{"location":"api/methods/#data_modeling.split_table","title":"data_modeling.split_table","text":"<pre><code>split_table(\n    *,\n    table_oid,\n    column_attnums,\n    extracted_table_name,\n    database_id,\n    relationship_fk_column_name=None,\n    **kwargs\n)\n</code></pre> <p>Extract columns from a table to create a new table, linked by a foreign key.</p> <p>Parameters:</p> Name Type Description Default <code>table_oid</code> <code>int</code> <p>The OID of the table whose columns we\u2019ll extract.</p> required <code>column_attnums</code> <code>list</code> <p>A list of the attnums of the columns to extract.</p> required <code>extracted_table_name</code> <code>str</code> <p>The name of the new table to be made from the extracted columns.</p> required <code>database_id</code> <code>int</code> <p>The Django id of the database containing the table.</p> required <code>relationship_fk_column_name</code> <code>str</code> <p>The name to give the new foreign key column in the remainder table (optional)</p> <code>None</code> <p>Returns:</p> Type Description <code>SplitTableInfo</code> <p>The SplitTableInfo object describing the details for the created table as a result of column extraction.</p>"},{"location":"api/methods/#data_modeling.move_columns","title":"data_modeling.move_columns","text":"<pre><code>move_columns(\n    *,\n    source_table_oid,\n    target_table_oid,\n    move_column_attnums,\n    database_id,\n    **kwargs\n)\n</code></pre> <p>Extract columns from a table to a referent table, linked by a foreign key.</p> <p>Parameters:</p> Name Type Description Default <code>source_table_oid</code> <code>int</code> <p>The OID of the source table whose column(s) we\u2019ll extract.</p> required <code>target_table_oid</code> <code>int</code> <p>The OID of the target table where the extracted column(s) will be added.</p> required <code>move_column_attnums</code> <code>list[int]</code> <p>The list of attnum(s) to move from source table to the target table.</p> required <code>database_id</code> <code>int</code> <p>The Django id of the database containing the table.</p> required"},{"location":"api/methods/#data_modeling.MappingColumn","title":"data_modeling.MappingColumn","text":"<p>               Bases: <code>TypedDict</code></p> <p>An object defining a foreign key column in a mapping table.</p> <p>Attributes:</p> Name Type Description <code>column_name</code> <code>str</code> <p>The name of the foreign key column.</p> <code>referent_table_oid</code> <code>int</code> <p>The OID of the table the column references.</p>"},{"location":"api/methods/#data_modeling.SplitTableInfo","title":"data_modeling.SplitTableInfo","text":"<p>               Bases: <code>TypedDict</code></p> <p>Information about a table, created from column extraction.</p> <p>Attributes:</p> Name Type Description <code>extracted_table_oid</code> <code>int</code> <p>The OID of the table that is created from column extraction.</p> <code>new_fkey_attnum</code> <code>int</code> <p>The attnum of the newly created foreign key column              referring the extracted_table on the original table.</p>"},{"location":"api/methods/#databases","title":"Databases","text":""},{"location":"api/methods/#databases.get","title":"databases.get","text":"<pre><code>get(*, database_id, **kwargs)\n</code></pre> <p>Get information about a database.</p> <p>Parameters:</p> Name Type Description Default <code>database_id</code> <code>int</code> <p>The Django id of the database.</p> required <p>Returns:</p> Type Description <code>DatabaseInfo</code> <p>Information about the database, and the current user privileges.</p>"},{"location":"api/methods/#databases.delete","title":"databases.delete","text":"<pre><code>delete(*, database_oid, database_id, **kwargs)\n</code></pre> <p>Drop a database from the server.</p> <p>Parameters:</p> Name Type Description Default <code>database_oid</code> <code>int</code> <p>The OID of the database to delete on the database.</p> required <code>database_id</code> <code>int</code> <p>The Django id of the database to connect to.</p> required"},{"location":"api/methods/#databases.upgrade_sql","title":"databases.upgrade_sql","text":"<pre><code>upgrade_sql(*, database_id, username=None, password=None)\n</code></pre> <p>Install, Upgrade, or Reinstall the Mathesar SQL on a database.</p> <p>If no <code>username</code> and <code>password</code> are submitted, we will determine the role which owns the <code>msar</code> schema on the database, then use that role for the upgrade.</p> <p>Parameters:</p> Name Type Description Default <code>database_id</code> <code>int</code> <p>The Django id of the database.</p> required <code>username</code> <code>str</code> <p>The username of the role used for upgrading.</p> <code>None</code> <code>password</code> <code>str</code> <p>The password of the role used for upgrading.</p> <code>None</code>"},{"location":"api/methods/#databases.DatabaseInfo","title":"databases.DatabaseInfo","text":"<p>               Bases: <code>TypedDict</code></p> <p>Information about a database current user privileges on it.</p> <p>Attributes:</p> Name Type Description <code>oid</code> <code>int</code> <p>The <code>oid</code> of the database on the server.</p> <code>name</code> <code>str</code> <p>The name of the database on the server.</p> <code>owner_oid</code> <code>int</code> <p>The <code>oid</code> of the owner of the database.</p> <code>current_role_priv</code> <code>list[Literal['CONNECT', 'CREATE', 'TEMPORARY']]</code> <p>A list of privileges available to the user.</p> <code>current_role_owns</code> <code>bool</code> <p>Whether the user is an owner of the database.</p>"},{"location":"api/methods/#database-privileges","title":"Database Privileges","text":""},{"location":"api/methods/#databases.privileges.list_direct","title":"databases.privileges.list_direct","text":"<pre><code>list_direct(*, database_id, **kwargs)\n</code></pre> <p>List database privileges for non-inherited roles.</p> <p>Parameters:</p> Name Type Description Default <code>database_id</code> <code>int</code> <p>The Django id of the database.</p> required <p>Returns:</p> Type Description <code>list[DBPrivileges]</code> <p>A list of database privileges.</p>"},{"location":"api/methods/#databases.privileges.replace_for_roles","title":"databases.privileges.replace_for_roles","text":"<pre><code>replace_for_roles(*, privileges, database_id, **kwargs)\n</code></pre> <p>Replace direct database privileges for roles.</p> <p>Possible privileges are <code>CONNECT</code>, <code>CREATE</code>, and <code>TEMPORARY</code>.</p> <p>Only roles which are included in a passed <code>DBPrivileges</code> object are affected.</p> <p>WARNING: Any privilege included in the <code>direct</code> list for a role is GRANTed, and any privilege not included is REVOKEd.</p> <p>Attributes:</p> Name Type Description <code>privileges</code> <p>The new privilege sets for roles.</p> <code>database_id</code> <p>The Django id of the database.</p> <p>Returns:</p> Type Description <code>list[DBPrivileges]</code> <p>A list of all non-default privileges on the database after the</p> <code>list[DBPrivileges]</code> <p>operation.</p>"},{"location":"api/methods/#databases.privileges.transfer_ownership","title":"databases.privileges.transfer_ownership","text":"<pre><code>transfer_ownership(*, new_owner_oid, database_id, **kwargs)\n</code></pre> <p>Transfers ownership of the current database to a new owner.</p> <p>Attributes:</p> Name Type Description <code>new_owner_oid</code> <p>The OID of the role whom we want to be the new owner of the current database.</p> <code>database_id</code> <p>The Django id of the database whose ownership is to be transferred.</p> To successfully transfer ownership of a database to a new owner the current user must: <ul> <li>Be a Superuser/Owner of the current database.</li> <li>Be a <code>MEMBER</code> of the new owning role. i.e. The current role should be able to <code>SET ROLE</code>   to the new owning role.</li> <li>Have <code>CREATEDB</code> privilege.</li> </ul> <p>Returns:</p> Type Description <code>DatabaseInfo</code> <p>Information about the database, and the current user privileges.</p>"},{"location":"api/methods/#databases.privileges.DBPrivileges","title":"databases.privileges.DBPrivileges","text":"<p>               Bases: <code>TypedDict</code></p> <p>Information about database privileges.</p> <p>Attributes:</p> Name Type Description <code>role_oid</code> <code>int</code> <p>The <code>oid</code> of the role on the database server.</p> <code>direct</code> <code>list[Literal['CONNECT', 'CREATE', 'TEMPORARY']]</code> <p>A list of database privileges for the aforementioned role_oid.</p>"},{"location":"api/methods/#database-setup","title":"Database Setup","text":"<p>RPC functions for setting up database connections.</p>"},{"location":"api/methods/#databases.setup.create_new","title":"databases.setup.create_new","text":"<pre><code>create_new(\n    *, database, sample_data=[], nickname=None, **kwargs\n)\n</code></pre> <p>Set up a new database on the internal server.</p> <p>The calling user will get access to that database using the default role stored in Django settings.</p> <p>Parameters:</p> Name Type Description Default <code>database</code> <code>str</code> <p>The name of the new database.</p> required <code>sample_data</code> <code>list[str]</code> <p>A list of strings requesting that some example data sets be installed on the underlying database. Valid list members are: - \u2018bike_shop\u2019 - \u2018hardware_store\u2019 - \u2018ice_cream_employees\u2019 - \u2018library_management\u2019 - \u2018library_makerspace\u2019 - \u2018museum_exhibits\u2019 - \u2018nonprofit_grants\u2019</p> <code>[]</code> <code>nickname</code> <code>Optional[str]</code> <p>An optional nickname for the database.</p> <code>None</code>"},{"location":"api/methods/#databases.setup.connect_existing","title":"databases.setup.connect_existing","text":"<pre><code>connect_existing(\n    *,\n    host,\n    port=None,\n    database,\n    role,\n    password,\n    sample_data=[],\n    nickname=None,\n    **kwargs\n)\n</code></pre> <p>Connect Mathesar to an existing database on a server.</p> <p>The calling user will get access to that database using the credentials passed to this function.</p> <p>Parameters:</p> Name Type Description Default <code>host</code> <code>str</code> <p>The host of the database server.</p> required <code>port</code> <code>Optional[int]</code> <p>The port of the database server.</p> <code>None</code> <code>database</code> <code>str</code> <p>The name of the database on the server.</p> required <code>role</code> <code>str</code> <p>The role on the server to use for the connection.</p> required <code>password</code> <code>str</code> <p>A password valid for the role.</p> required <code>sample_data</code> <code>list[str]</code> <p>A list of strings requesting that some example data sets be installed on the underlying database. Valid list members are: - \u2018bike_shop\u2019 - \u2018hardware_store\u2019 - \u2018ice_cream_employees\u2019 - \u2018library_management\u2019 - \u2018library_makerspace\u2019 - \u2018museum_exhibits\u2019 - \u2018nonprofit_grants\u2019</p> <code>[]</code> <code>nickname</code> <code>Optional[str]</code> <p>An optional nickname for the database.</p> <code>None</code>"},{"location":"api/methods/#databases.setup.DatabaseConnectionResult","title":"databases.setup.DatabaseConnectionResult","text":"<p>               Bases: <code>TypedDict</code></p> <p>Info about the objects resulting from calling the setup functions.</p> <p>These functions will get or create an instance of the Server, Database, and ConfiguredRole models, as well as a UserDatabaseRoleMap entry.</p> <p>Attributes:</p> Name Type Description <code>server</code> <code>ConfiguredServerInfo</code> <p>Information on the Server model instance.</p> <code>database</code> <code>ConfiguredDatabaseInfo</code> <p>Information on the Database model instance.</p> <code>configured_role</code> <code>ConfiguredRoleInfo</code> <p>Information on the ConfiguredRole model instance.</p>"},{"location":"api/methods/#explorations","title":"Explorations","text":"<p>Classes and functions exposed to the RPC endpoint for managing explorations.</p>"},{"location":"api/methods/#explorations.list_","title":"explorations.list_","text":"<pre><code>list_(*, database_id, schema_oid=None, **kwargs)\n</code></pre> <p>List information about explorations for a database. Exposed as <code>list</code>.</p> <p>Parameters:</p> Name Type Description Default <code>database_id</code> <code>int</code> <p>The Django id of the database containing the explorations.</p> required <code>schema_oid</code> <code>int</code> <p>The OID of the schema containing the base table(s) of the exploration(s).(optional)</p> <code>None</code> <p>Returns:</p> Type Description <code>list[ExplorationInfo]</code> <p>A list of exploration details.</p>"},{"location":"api/methods/#explorations.get","title":"explorations.get","text":"<pre><code>get(*, exploration_id, **kwargs)\n</code></pre> <p>List information about an exploration.</p> <p>Parameters:</p> Name Type Description Default <code>exploration_id</code> <code>int</code> <p>The Django id of the exploration.</p> required <p>Returns:</p> Type Description <code>ExplorationInfo</code> <p>Exploration details for a given exploration_id.</p>"},{"location":"api/methods/#explorations.add","title":"explorations.add","text":"<pre><code>add(*, exploration_def)\n</code></pre> <p>Add a new exploration.</p> <p>Parameters:</p> Name Type Description Default <code>exploration_def</code> <code>ExplorationDef</code> <p>A dict describing the exploration to create.</p> required <p>Returns:</p> Type Description <code>ExplorationInfo</code> <p>The exploration details for the newly created exploration.</p>"},{"location":"api/methods/#explorations.delete","title":"explorations.delete","text":"<pre><code>delete(*, exploration_id, **kwargs)\n</code></pre> <p>Delete an exploration.</p> <p>Parameters:</p> Name Type Description Default <code>exploration_id</code> <code>int</code> <p>The Django id of the exploration to delete.</p> required"},{"location":"api/methods/#explorations.replace","title":"explorations.replace","text":"<pre><code>replace(*, new_exploration)\n</code></pre> <p>Replace a saved exploration.</p> <p>Parameters:</p> Name Type Description Default <code>new_exploration</code> <code>ExplorationInfo</code> <p>A dict describing the exploration to replace, including the updated fields.</p> required <p>Returns:</p> Type Description <code>ExplorationInfo</code> <p>The exploration details for the replaced exploration.</p>"},{"location":"api/methods/#explorations.run","title":"explorations.run","text":"<pre><code>run(*, exploration_def, limit=100, offset=0, **kwargs)\n</code></pre> <p>Run an exploration.</p> <p>Parameters:</p> Name Type Description Default <code>exploration_def</code> <code>ExplorationDef</code> <p>A dict describing an exploration to run.</p> required <code>limit</code> <code>int</code> <p>The max number of rows to return.(default 100)</p> <code>100</code> <code>offset</code> <code>int</code> <p>The number of rows to skip.(default 0)</p> <code>0</code> <p>Returns:</p> Type Description <code>ExplorationResult</code> <p>The result of the exploration run.</p>"},{"location":"api/methods/#explorations.run_saved","title":"explorations.run_saved","text":"<pre><code>run_saved(*, exploration_id, limit=100, offset=0, **kwargs)\n</code></pre> <p>Run a saved exploration.</p> <p>Parameters:</p> Name Type Description Default <code>exploration_id</code> <code>int</code> <p>The Django id of the exploration to run.</p> required <code>limit</code> <code>int</code> <p>The max number of rows to return.(default 100)</p> <code>100</code> <code>offset</code> <code>int</code> <p>The number of rows to skip.(default 0)</p> <code>0</code> <p>Returns:</p> Type Description <code>ExplorationResult</code> <p>The result of the exploration run.</p>"},{"location":"api/methods/#explorations.ExplorationInfo","title":"explorations.ExplorationInfo","text":"<p>               Bases: <code>TypedDict</code></p> <p>Information about an exploration.</p> <p>Attributes:</p> Name Type Description <code>id</code> <code>int</code> <p>The Django id of an exploration.</p> <code>database_id</code> <code>int</code> <p>The Django id of the database containing the exploration.</p> <code>name</code> <code>str</code> <p>The name of the exploration.</p> <code>base_table_oid</code> <code>int</code> <p>The OID of the base table of the exploration on the database.</p> <code>schema_oid</code> <code>int</code> <p>The OID of the schema containing the base table of the exploration.</p> <code>initial_columns</code> <code>list</code> <p>A list describing the columns to be included in the exploration.</p> <code>transformations</code> <code>Optional[list]</code> <p>A list describing the transformations to be made on the included columns.</p> <code>display_options</code> <code>Optional[list]</code> <p>A list describing metadata for the columns in the explorations.</p> <code>display_names</code> <code>Optional[dict]</code> <p>A map between the actual column names on the database and the alias to be displayed(if any).</p> <code>description</code> <code>Optional[str]</code> <p>The description of the exploration.</p>"},{"location":"api/methods/#explorations.ExplorationDef","title":"explorations.ExplorationDef","text":"<p>               Bases: <code>TypedDict</code></p> <p>Definition about a runnable exploration.</p> <p>Attributes:</p> Name Type Description <code>database_id</code> <code>int</code> <p>The Django id of the database containing the exploration.</p> <code>name</code> <code>str</code> <p>The name of the exploration.</p> <code>base_table_oid</code> <code>int</code> <p>The OID of the base table of the exploration on the database.</p> <code>schema_oid</code> <code>int</code> <p>The OID of the schema containing the base table of the exploration.</p> <code>initial_columns</code> <code>list</code> <p>A list describing the columns to be included in the exploration.</p> <code>transformations</code> <code>Optional[list]</code> <p>A list describing the transformations to be made on the included columns.</p> <code>display_options</code> <code>Optional[list]</code> <p>A list describing metadata for the columns in the explorations.</p> <code>display_names</code> <code>Optional[dict]</code> <p>A map between the actual column names on the database and the alias to be displayed(if any).</p> <code>description</code> <code>Optional[str]</code> <p>The description of the exploration.</p>"},{"location":"api/methods/#explorations.ExplorationResult","title":"explorations.ExplorationResult","text":"<p>               Bases: <code>TypedDict</code></p> <p>Result of an exploration run.</p> <p>Attributes:</p> Name Type Description <code>query</code> <code>dict</code> <p>A dict describing the exploration that ran.</p> <code>records</code> <code>dict</code> <p>A dict describing the total count of records along with the contents of those records.</p> <code>output_columns</code> <code>tuple</code> <p>A tuple describing the names of the columns included in the exploration.</p> <code>column_metadata</code> <code>dict</code> <p>A dict describing the metadata applied to included columns.</p> <code>limit</code> <code>Optional[int]</code> <p>Specifies the max number of rows returned.(default 100)</p> <code>offset</code> <code>Optional[int]</code> <p>Specifies the number of rows skipped.(default 0)</p>"},{"location":"api/methods/#forms","title":"Forms","text":"<p>Classes and functions exposed to the RPC endpoint for managing forms.</p>"},{"location":"api/methods/#forms.list_","title":"forms.list_","text":"<pre><code>list_(*, database_id, schema_oid, **kwargs)\n</code></pre> <p>List information about forms for a database. Exposed as <code>list</code>.</p> <p>Parameters:</p> Name Type Description Default <code>database_id</code> <code>int</code> <p>The Django id of the database containing the form.</p> required <code>schema_oid</code> <code>int</code> <p>The OID of the schema containing the base table(s) of the forms(s).</p> required <p>Returns:</p> Type Description <code>FormInfo</code> <p>A list of form info.</p>"},{"location":"api/methods/#forms.get","title":"forms.get","text":"<pre><code>get(*, form_token, **kwargs)\n</code></pre> <p>List information about a form.</p> <p>Parameters:</p> Name Type Description Default <code>form_token</code> <code>str</code> <p>The unique token of the form.</p> required <p>Returns:</p> Type Description <code>FormInfo</code> <p>Form details for a given form_token.</p>"},{"location":"api/methods/#forms.add","title":"forms.add","text":"<pre><code>add(*, form_def, **kwargs)\n</code></pre> <p>Add a new form.</p> <p>Parameters:</p> Name Type Description Default <code>form_def</code> <code>AddFormDef</code> <p>A dict describing the form to create.</p> required <p>Returns:</p> Type Description <code>FormInfo</code> <p>The details for the newly created form.</p>"},{"location":"api/methods/#forms.delete","title":"forms.delete","text":"<pre><code>delete(*, form_id, **kwargs)\n</code></pre> <p>Delete a form.</p> <p>Parameters:</p> Name Type Description Default <code>form_id</code> <code>int</code> <p>The Django id of the form to delete.</p> required"},{"location":"api/methods/#forms.regenerate_token","title":"forms.regenerate_token","text":"<pre><code>regenerate_token(*, form_id, **kwargs)\n</code></pre> <p>Regenerate the unique token for a form.</p> <p>Parameters:</p> Name Type Description Default <code>form_id</code> <code>int</code> <p>The Django id of the form.</p> required <p>Returns:</p> Type Description <code>str</code> <p>The new token for the form.</p>"},{"location":"api/methods/#forms.patch","title":"forms.patch","text":"<pre><code>patch(*, update_form_def, **kwargs)\n</code></pre> <p>Update a form.</p> <p>Parameters:</p> Name Type Description Default <code>update_form_def</code> <code>SettableFormDef</code> <p>A dict describing the form to update, including the updated fields.</p> required <p>Returns:</p> Type Description <code>FormInfo</code> <p>The form info for the updated form.</p>"},{"location":"api/methods/#forms.set_publish_public","title":"forms.set_publish_public","text":"<pre><code>set_publish_public(*, form_id, publish_public, **kwargs)\n</code></pre> <p>Set/Unset the form to be publicly shareable.</p> <p>Parameters:</p> Name Type Description Default <code>form_id</code> <code>int</code> <p>The Django id of the form.</p> required <code>publish_public</code> <code>bool</code> <p>Specify whether to share the form publicly.</p> required <p>Returns:</p> Type Description <code>bool</code> <p>The updated state of public sharing for the form.</p>"},{"location":"api/methods/#forms.submit","title":"forms.submit","text":"<pre><code>submit(*, form_token, values, **kwargs)\n</code></pre> <p>Submit a form.</p> <p>Parameters:</p> Name Type Description Default <code>form_token</code> <code>str</code> <p>The unique token of the form.</p> required <code>values</code> <code>dict</code> <p>A dict describing the values to insert.</p> required"},{"location":"api/methods/#forms.list_related_records","title":"forms.list_related_records","text":"<pre><code>list_related_records(\n    *,\n    form_token,\n    field_key,\n    limit=None,\n    offset=None,\n    search=None,\n    **kwargs\n)\n</code></pre> <p>List records for selection via the row seeker</p> <p>Parameters:</p> Name Type Description Default <code>form_token</code> <code>str</code> <p>The unique token of the form.</p> required <code>field_key</code> <code>str</code> <p>The key of the foreign key field for which to list related records.</p> required <code>limit</code> <code>Optional[int]</code> <p>Optional limit on the number of records to return.</p> <code>None</code> <code>offset</code> <code>Optional[int]</code> <p>Optional offset for pagination.</p> <code>None</code> <code>search</code> <code>Optional[str]</code> <p>Optional search term to filter records.</p> <code>None</code> <p>Returns:</p> Type Description <code>RecordSummaryList</code> <p>The requested records, along with some metadata.</p>"},{"location":"api/methods/#forms.FormInfo","title":"forms.FormInfo","text":"<p>               Bases: <code>TypedDict</code></p> <p>Information about a form.</p> <p>Attributes:</p> Name Type Description <code>id</code> <code>int</code> <p>The Django id of the Form on the database.</p> <code>created_at</code> <code>str</code> <p>The time at which the form model got created.</p> <code>updated_at</code> <code>str</code> <p>The time at which the form model was last updated.</p> <code>token</code> <code>str</code> <p>A UUIDv4 object used to identify a form uniquely.</p> <code>name</code> <code>str</code> <p>The name of the form.</p> <code>description</code> <code>Optional[str]</code> <p>The description of the form.</p> <code>version</code> <code>int</code> <p>The version of the form for reconciliation of json fields.</p> <code>database_id</code> <code>int</code> <p>The Django id of the database containing the Form.</p> <code>schema_oid</code> <code>int</code> <p>The OID of the schema where within which form exists.</p> <code>base_table_oid</code> <code>int</code> <p>The table OID based on which a form will be created.</p> <code>associated_role_id</code> <code>Optional[int]</code> <p>The Django id of the configured role to be used while submitting a form.</p> <code>header_title</code> <code>dict</code> <p>The title of the rendered form.</p> <code>header_subtitle</code> <code>Optional[dict]</code> <p>The subtitle of the rendered form.</p> <code>publish_public</code> <code>bool</code> <p>Specifies whether the form is publicly accessible.</p> <code>submit_message</code> <code>Optional[dict]</code> <p>Message to be displayed upon submission.</p> <code>submit_redirect_url</code> <code>Optional[str]</code> <p>Redirect path after submission.</p> <code>submit_button_label</code> <code>Optional[str]</code> <p>Text to be displayed on the submit button.</p> <code>fields</code> <code>list[FieldInfo]</code> <p>Definition of Fields within the form.</p>"},{"location":"api/methods/#forms.FieldInfo","title":"forms.FieldInfo","text":"<p>               Bases: <code>TypedDict</code></p> <p>Information about a form field.</p> <p>Attributes:</p> Name Type Description <code>id</code> <code>int</code> <p>The Django id of the Field on the database.</p> <code>key</code> <code>str</code> <p>A unique string identifier for the field within a form.</p> <code>form_id</code> <code>int</code> <p>The Django id of the Form on the database.</p> <code>index</code> <code>int</code> <p>The order in which the field should be displayed.</p> <code>label</code> <code>Optional[str]</code> <p>The text to be displayed for the field input.</p> <code>help</code> <code>Optional[str]</code> <p>The help text to be displayed for the field input.</p> <code>kind</code> <code>Literal['scalar_column', 'foreign_key']</code> <p>Type of the selected column (scalar_column, foreign_key).</p> <code>column_attnum</code> <code>Optional[int]</code> <p>The attnum of column to be selected as a field. Applicable for scalar_column and foreign_key fields.</p> <code>related_table_oid</code> <code>Optional[int]</code> <p>The oid of the related table. Applicable for foreign_key fields.</p> <code>fk_interaction_rule</code> <code>Literal['must_pick', 'can_pick_or_create', 'must_create']</code> <p>Determines user interaction with a foreign_key field\u2019s related record (must_pick, can_pick_or_create, must_create).</p> <code>parent_field_id</code> <code>Literal['must_pick', 'can_pick_or_create', 'must_create']</code> <p>The Django id of the Field set as parent for related fields.</p> <code>styling</code> <code>Optional[dict]</code> <p>Information about the visual appearance of the field.</p> <code>is_required</code> <code>bool</code> <p>Specifies whether a value for the field is mandatory.</p> <code>child_fields</code> <code>Optional[list[FieldInfo]]</code> <p>List of definitions of child fields. Applicable for foreign_key fields.</p>"},{"location":"api/methods/#forms.AddFormDef","title":"forms.AddFormDef","text":"<p>               Bases: <code>TypedDict</code></p> <p>Definition needed to add a form.</p> <p>Attributes:</p> Name Type Description <code>name</code> <code>str</code> <p>The name of the form.</p> <code>description</code> <code>Optional[str]</code> <p>The description of the form.</p> <code>version</code> <code>int</code> <p>The version of the form for reconciliation of json fields.</p> <code>database_id</code> <code>int</code> <p>The Django id of the database containing the Form.</p> <code>schema_oid</code> <code>int</code> <p>The OID of the schema where within which form exists.</p> <code>base_table_oid</code> <code>int</code> <p>The table OID based on which a form will be created.</p> <code>associated_role_id</code> <code>Optional[int]</code> <p>The Django id of the configured role to be used while submitting a form.</p> <code>header_title</code> <code>dict</code> <p>The title of the rendered form.</p> <code>header_subtitle</code> <code>Optional[dict]</code> <p>The subtitle of the rendered form.</p> <code>submit_message</code> <code>Optional[dict]</code> <p>Message to be displayed upon submission.</p> <code>submit_redirect_url</code> <code>Optional[str]</code> <p>Redirect path after submission.</p> <code>submit_button_label</code> <code>Optional[str]</code> <p>Text to be displayed on the submit button.</p> <code>fields</code> <code>list[AddOrReplaceFieldDef]</code> <p>Definition of Fields within the form.</p>"},{"location":"api/methods/#forms.AddOrReplaceFieldDef","title":"forms.AddOrReplaceFieldDef","text":"<p>               Bases: <code>TypedDict</code></p> <p>FormField definition needed while adding or replacing a form.</p> <p>Attributes:</p> Name Type Description <code>key</code> <code>str</code> <p>A unique string identifier for the field within a form.</p> <code>index</code> <code>int</code> <p>The order in which the field should be displayed.</p> <code>label</code> <code>Optional[str]</code> <p>The text to be displayed for the field input.</p> <code>help</code> <code>Optional[str]</code> <p>The help text to be displayed for the field input.</p> <code>kind</code> <code>Literal['scalar_column', 'foreign_key']</code> <p>Type of the selected column (scalar_column, foreign_key).</p> <code>column_attnum</code> <code>Optional[int]</code> <p>The attnum of column to be selected as a field. Applicable for scalar_column and foreign_key fields.</p> <code>related_table_oid</code> <code>Optional[int]</code> <p>The oid of the related table. Applicable for foreign_key fields.</p> <code>fk_interaction_rule</code> <code>Literal['must_pick', 'can_pick_or_create', 'must_create']</code> <p>Determines user interaction with a foreign_key field\u2019s related record (must_pick, can_pick_or_create, must_create).</p> <code>styling</code> <code>Optional[dict]</code> <p>Information about the visual appearance of the field.</p> <code>is_required</code> <code>Optional[bool]</code> <p>Specifies whether a value for the field is mandatory.</p> <code>child_fields</code> <code>Optional[list[AddOrReplaceFieldDef]]</code> <p>List of definitions of child fields. Applicable for foreign_key fields.</p>"},{"location":"api/methods/#forms.SettableFormDef","title":"forms.SettableFormDef","text":"<p>               Bases: <code>AddFormDef</code></p> <p>Definition needed to update a form.</p> <p>Attributes:</p> Name Type Description <code>id</code> <code>int</code> <p>The Django id of the Form on the database.</p> <code>name</code> <code>str</code> <p>The name of the form.</p> <code>description</code> <code>Optional[str]</code> <p>The description of the form.</p> <code>version</code> <code>int</code> <p>The version of the form.</p> <code>associated_role_id</code> <code>Optional[int]</code> <p>The Django id of the configured role to be used while submitting a form.</p> <code>header_title</code> <code>dict</code> <p>The title of the rendered form.</p> <code>header_subtitle</code> <code>Optional[dict]</code> <p>The subtitle of the rendered form.</p> <code>submit_message</code> <code>Optional[dict]</code> <p>Message to be displayed upon submission.</p> <code>submit_redirect_url</code> <code>Optional[str]</code> <p>Redirect path after submission.</p> <code>submit_button_label</code> <code>Optional[str]</code> <p>Text to be displayed on the submit button.</p> <code>fields</code> <code>list[AddOrReplaceFieldDef]</code> <p>Definition of Fields within the form.</p>"},{"location":"api/methods/#records","title":"Records","text":"<p>Classes and functions exposed to the RPC endpoint for managing table records.</p>"},{"location":"api/methods/#records.list_","title":"records.list_","text":"<pre><code>list_(\n    *,\n    table_oid,\n    database_id,\n    limit=None,\n    offset=None,\n    order=None,\n    filter=None,\n    grouping=None,\n    return_record_summaries=False,\n    **kwargs\n)\n</code></pre> <p>List records from a table, and its row count. Exposed as <code>list</code>.</p> <p>Parameters:</p> Name Type Description Default <code>table_oid</code> <code>int</code> <p>Identity of the table in the user\u2019s database.</p> required <code>database_id</code> <code>int</code> <p>The Django id of the database containing the table.</p> required <code>limit</code> <code>int</code> <p>The maximum number of rows we\u2019ll return.</p> <code>None</code> <code>offset</code> <code>int</code> <p>The number of rows to skip before returning records from following rows.</p> <code>None</code> <code>order</code> <code>list[OrderBy]</code> <p>An array of ordering definition objects.</p> <code>None</code> <code>filter</code> <code>Filter</code> <p>An array of filter definition objects.</p> <code>None</code> <code>grouping</code> <code>Grouping</code> <p>An array of group definition objects.</p> <code>None</code> <code>return_record_summaries</code> <code>bool</code> <p>Whether to return summaries of retrieved records.</p> <code>False</code> <p>Returns:</p> Type Description <code>RecordList</code> <p>The requested records, along with some metadata.</p>"},{"location":"api/methods/#records.get","title":"records.get","text":"<pre><code>get(\n    *,\n    record_id,\n    table_oid,\n    database_id,\n    return_record_summaries=False,\n    table_record_summary_templates=None,\n    **kwargs\n)\n</code></pre> <p>Get single record from a table by its primary key.</p> <p>Parameters:</p> Name Type Description Default <code>record_id</code> <code>Any</code> <p>The primary key value of the record to be gotten.</p> required <code>table_oid</code> <code>int</code> <p>Identity of the table in the user\u2019s database.</p> required <code>database_id</code> <code>int</code> <p>The Django id of the database containing the table.</p> required <code>return_record_summaries</code> <code>bool</code> <p>Whether to return summaries of the retrieved record.</p> <code>False</code> <code>table_record_summary_templates</code> <code>dict[str, Any]</code> <p>A dict of record summary templates. If none are provided, then the templates will be take from the Django metadata. Any templates provided will take precedence on a per-table basis over the stored metadata templates. The purpose of this function parameter is to allow clients to generate record summary previews without persisting any metadata.</p> <code>None</code> <p>Returns:     The requested record, along with some metadata.</p>"},{"location":"api/methods/#records.add","title":"records.add","text":"<pre><code>add(\n    *,\n    record_def,\n    table_oid,\n    database_id,\n    return_record_summaries=False,\n    **kwargs\n)\n</code></pre> <p>Add a single record to a table.</p> <p>The form of the <code>record_def</code> is determined by the underlying table. Keys should be attnums, and values should be the desired value for that column in the created record. Missing keys will use default values (if set on the DB), and explicit <code>null</code> values will set null for that value regardless of default (with obvious exceptions where that would violate some constraint)</p> <p>Parameters:</p> Name Type Description Default <code>record_def</code> <code>dict</code> <p>An object representing the record to be added.</p> required <code>table_oid</code> <code>int</code> <p>Identity of the table in the user\u2019s database.</p> required <code>database_id</code> <code>int</code> <p>The Django id of the database containing the table.</p> required <code>return_record_summaries</code> <code>bool</code> <p>Whether to return summaries of the added record.</p> <code>False</code> <p>Returns:</p> Type Description <code>RecordAdded</code> <p>The created record, along with some metadata.</p>"},{"location":"api/methods/#records.patch","title":"records.patch","text":"<pre><code>patch(\n    *,\n    record_def,\n    record_id,\n    table_oid,\n    database_id,\n    return_record_summaries=False,\n    **kwargs\n)\n</code></pre> <p>Modify a record in a table.</p> <p>The form of the <code>record_def</code> is determined by the underlying table. Keys should be attnums, and values should be the desired value for that column in the modified record. Explicit <code>null</code> values will set null for that value (with obvious exceptions where that would violate some constraint).</p> <p>Parameters:</p> Name Type Description Default <code>record_def</code> <code>dict</code> <p>An object representing the record to be added.</p> required <code>record_id</code> <code>Any</code> <p>The primary key value of the record to modify.</p> required <code>table_oid</code> <code>int</code> <p>Identity of the table in the user\u2019s database.</p> required <code>database_id</code> <code>int</code> <p>The Django id of the database containing the table.</p> required <code>return_record_summaries</code> <code>bool</code> <p>Whether to return summaries of the modified record.</p> <code>False</code> <p>Returns:</p> Type Description <code>RecordAdded</code> <p>The modified record, along with some metadata.</p>"},{"location":"api/methods/#records.delete","title":"records.delete","text":"<pre><code>delete(*, record_ids, table_oid, database_id, **kwargs)\n</code></pre> <p>Delete records from a table by primary key.</p> <p>Parameters:</p> Name Type Description Default <code>record_ids</code> <code>list[Any]</code> <p>The primary key values of the records to be deleted.</p> required <code>table_oid</code> <code>int</code> <p>The identity of the table in the user\u2019s database.</p> required <code>database_id</code> <code>int</code> <p>The Django id of the database containing the table.</p> required <p>Returns:</p> Type Description <code>Optional[int]</code> <p>The number of records deleted.</p>"},{"location":"api/methods/#records.search","title":"records.search","text":"<pre><code>search(\n    *,\n    table_oid,\n    database_id,\n    search_params=[],\n    limit=10,\n    offset=0,\n    return_record_summaries=False,\n    **kwargs\n)\n</code></pre> <p>List records from a table according to <code>search_params</code>.</p> <p>Literals will be searched for in a basic way in string-like columns, but will have to match exactly in non-string-like columns.</p> <p>Records are assigned a score based on how many matches, and of what quality, they have with the passed search parameters.</p> <p>Parameters:</p> Name Type Description Default <code>table_oid</code> <code>int</code> <p>Identity of the table in the user\u2019s database.</p> required <code>database_id</code> <code>int</code> <p>The Django id of the database containing the table.</p> required <code>search_params</code> <code>list[SearchParam]</code> <p>Results are ranked and filtered according to the            objects passed here.</p> <code>[]</code> <code>limit</code> <code>int</code> <p>The maximum number of rows we\u2019ll return.</p> <code>10</code> <code>offset</code> <code>int</code> <p>The number of rows to skip before returning records from following rows.</p> <code>0</code> <code>return_record_summaries</code> <code>bool</code> <p>Whether to return summaries of retrieved records.</p> <code>False</code> <p>Returns:</p> Type Description <code>RecordList</code> <p>The requested records, along with some metadata.</p>"},{"location":"api/methods/#records.list_summaries","title":"records.list_summaries","text":"<pre><code>list_summaries(\n    *,\n    table_oid,\n    database_id,\n    limit=None,\n    offset=None,\n    search=None,\n    **kwargs\n)\n</code></pre> <p>List record summaries and keys for each record. Primarily used for selection via the Row seeker.</p> <p>Parameters:</p> Name Type Description Default <code>table_oid</code> <code>int</code> <p>Identity of the table in the user\u2019s database.</p> required <code>database_id</code> <code>int</code> <p>The Django id of the database containing the table.</p> required <code>limit</code> <code>Optional[int]</code> <p>Optional limit on the number of records to return.</p> <code>None</code> <code>offset</code> <code>Optional[int]</code> <p>Optional offset for pagination.</p> <code>None</code> <code>search</code> <code>Optional[str]</code> <p>Optional search term to filter records.</p> <code>None</code> <p>Returns:</p> Type Description <code>RecordSummaryList</code> <p>A list of objects, each containing a record summary and key pertaining to a record.</p>"},{"location":"api/methods/#records.RecordList","title":"records.RecordList","text":"<p>               Bases: <code>TypedDict</code></p> <p>Records from a table, along with some meta data</p> <p>The form of the objects in the <code>results</code> array is determined by the underlying records being listed. The keys of each object are the attnums of the retrieved columns. The values are the value for the given row, for the given column.</p> <p>Attributes:</p> Name Type Description <code>count</code> <code>int</code> <p>The total number of records in the table.</p> <code>results</code> <code>list[dict]</code> <p>An array of record objects.</p> <code>grouping</code> <code>GroupingResponse</code> <p>Information for displaying grouped records.</p> <code>linked_record_smmaries</code> <code>GroupingResponse</code> <p>Information for previewing foreign key values, provides a map of foreign key to a text summary.</p> <code>record_summaries</code> <code>dict[str, str]</code> <p>Information for previewing returned records.</p> <code>download_links</code> <code>Optional[dict]</code> <p>Information for viewing or downloading file attachments.</p>"},{"location":"api/methods/#records.RecordAdded","title":"records.RecordAdded","text":"<p>               Bases: <code>TypedDict</code></p> <p>Record from a table, along with some meta data</p> <p>The form of the object in the <code>results</code> array is determined by the underlying records being listed. The keys of each object are the attnums of the retrieved columns. The values are the value for the given row, for the given column.</p> <p>Attributes:</p> Name Type Description <code>results</code> <code>list[dict]</code> <p>An array of a single record objects (the one added).</p> <code>linked_record_summaries</code> <code>dict[str, dict[str, str]]</code> <p>Information for previewing foreign key values, provides a map of foreign key to a text summary.</p> <code>record_summaries</code> <code>dict[str, str]</code> <p>Information for previewing an added record.</p>"},{"location":"api/methods/#records.OrderBy","title":"records.OrderBy","text":"<p>               Bases: <code>TypedDict</code></p> <p>An object defining an <code>ORDER BY</code> clause.</p> <p>Attributes:</p> Name Type Description <code>attnum</code> <code>int</code> <p>The attnum of the column to order by.</p> <code>direction</code> <code>Literal['asc', 'desc']</code> <p>The direction to order by.</p>"},{"location":"api/methods/#records.Filter","title":"records.Filter","text":"<p>               Bases: <code>TypedDict</code></p> <p>An object defining a filter to be used in a <code>WHERE</code> clause.</p> <p>For valid <code>type</code> values, see the <code>msar.filter_templates</code> table defined in <code>mathesar/db/sql/05_msar.sql</code>.</p> <p>Attributes:</p> Name Type Description <code>type</code> <code>str</code> <p>a function or operator to be used in filtering.</p> <code>args</code> <code>list[Union[Filter, FilterAttnum, FilterLiteral]]</code> <p>The ordered arguments for the function or operator.</p>"},{"location":"api/methods/#records.FilterAttnum","title":"records.FilterAttnum","text":"<p>               Bases: <code>TypedDict</code></p> <p>An object choosing a column for a filter.</p> <p>Attributes:</p> Name Type Description <code>type</code> <code>Literal['attnum']</code> <p>Must be <code>\"attnum\"</code></p> <code>value</code> <code>int</code> <p>The attnum of the column to filter by</p>"},{"location":"api/methods/#records.FilterLiteral","title":"records.FilterLiteral","text":"<p>               Bases: <code>TypedDict</code></p> <p>An object defining a literal for an argument to a filter.</p> <p>Attributes:</p> Name Type Description <code>type</code> <code>Literal['literal']</code> <p>must be <code>\"literal\"</code>.</p> <code>value</code> <code>Any</code> <p>The value of the literal.</p>"},{"location":"api/methods/#records.Grouping","title":"records.Grouping","text":"<p>               Bases: <code>TypedDict</code></p> <p>Grouping definition.</p> <p>The table involved must have a single column primary key.</p> <p>Attributes:</p> Name Type Description <code>columns</code> <code>list[int]</code> <p>The columns to be grouped by.</p> <code>preproc</code> <code>list[str]</code> <p>The preprocessing functions to apply (if any).</p>"},{"location":"api/methods/#records.Group","title":"records.Group","text":"<p>               Bases: <code>TypedDict</code></p> <p>Group definition.</p> <p>Note that the <code>count</code> is over all rows in the group, whether returned or not. However, <code>result_indices</code> is restricted to only the rows returned. This is to avoid potential problems if there are many rows in the group (e.g., the whole table), but we only return a few.</p> <p>Attributes:</p> Name Type Description <code>id</code> <code>int</code> <p>The id of the group. Consistent for same input.</p> <code>count</code> <code>int</code> <p>The number of items in the group.</p> <code>results_eq</code> <code>list[dict]</code> <p>The value the results of the group equal.</p> <code>result_indices</code> <code>list[int]</code> <p>The 0-indexed positions of group members in the results array.</p>"},{"location":"api/methods/#records.GroupingResponse","title":"records.GroupingResponse","text":"<p>               Bases: <code>TypedDict</code></p> <p>Grouping response object. Extends Grouping with actual groups.</p> <p>Attributes:</p> Name Type Description <code>columns</code> <code>list[int]</code> <p>The columns to be grouped by.</p> <code>preproc</code> <code>list[str]</code> <p>The preprocessing functions to apply (if any).</p> <code>groups</code> <code>list[Group]</code> <p>The groups applicable to the records being returned.</p>"},{"location":"api/methods/#records.SearchParam","title":"records.SearchParam","text":"<p>               Bases: <code>TypedDict</code></p> <p>Search definition for a single column.</p> <p>Attributes:</p> Name Type Description <code>attnum</code> <code>int</code> <p>The attnum of the column in the table.</p> <code>literal</code> <code>Any</code> <p>The literal to search for in the column.</p>"},{"location":"api/methods/#records.RecordSummaryList","title":"records.RecordSummaryList","text":"<p>               Bases: <code>TypedDict</code></p> <p>Response for listing record summaries.</p> <p>Attributes:</p> Name Type Description <code>count</code> <code>int</code> <p>The total number of records matching the criteria.</p> <code>results</code> <code>list[SummarizedRecordReference]</code> <p>A list of summarized record references, each containing a key and a summary.</p>"},{"location":"api/methods/#records.SummarizedRecordReference","title":"records.SummarizedRecordReference","text":"<p>               Bases: <code>TypedDict</code></p> <p>A summarized reference to a record, typically used in foreign key fields.</p> <p>Attributes:</p> Name Type Description <code>key</code> <code>Any</code> <p>A unique identifier for the record.</p> <code>summary</code> <code>str</code> <p>The record summary</p>"},{"location":"api/methods/#roles","title":"Roles","text":""},{"location":"api/methods/#roles.list_","title":"roles.list_","text":"<pre><code>list_(*, database_id, **kwargs)\n</code></pre> <p>List information about roles for a database server. Exposed as <code>list</code>. Requires a database id inorder to connect to the server.</p> <p>Parameters:</p> Name Type Description Default <code>database_id</code> <code>int</code> <p>The Django id of the database.</p> required <p>Returns:</p> Type Description <code>list[RoleInfo]</code> <p>A list of roles present on the database server.</p>"},{"location":"api/methods/#roles.add","title":"roles.add","text":"<pre><code>add(\n    *,\n    rolename,\n    database_id,\n    password=None,\n    login=None,\n    **kwargs\n)\n</code></pre> <p>Add a new login/non-login role on a database server.</p> <p>Parameters:</p> Name Type Description Default <code>rolename</code> <code>str</code> <p>The name of the role to be created.</p> required <code>database_id</code> <code>int</code> <p>The Django id of the database.</p> required <code>password</code> <code>str</code> <p>The password for the rolename to set.</p> <code>None</code> <code>login</code> <code>bool</code> <p>Whether the role to be created could login.</p> <code>None</code> <p>Returns:</p> Type Description <code>RoleInfo</code> <p>A dict describing the created role.</p>"},{"location":"api/methods/#roles.delete","title":"roles.delete","text":"<pre><code>delete(*, role_oid, database_id, **kwargs)\n</code></pre> <p>Drop a role on a database server.</p> <p>Parameters:</p> Name Type Description Default <code>role_oid</code> <code>int</code> <p>The OID of the role to drop on the database.</p> required <code>database_id</code> <code>int</code> <p>The Django id of the database.</p> required"},{"location":"api/methods/#roles.get_current_role","title":"roles.get_current_role","text":"<pre><code>get_current_role(*, database_id, **kwargs)\n</code></pre> <p>Get information about the current role and all the parent role(s) whose privileges are immediately available to current role without doing SET ROLE.</p> <p>Parameters:</p> Name Type Description Default <code>database_id</code> <code>int</code> <p>The Django id of the database.</p> required <p>Returns:</p> Type Description <code>dict</code> <p>A dict describing the current role.</p>"},{"location":"api/methods/#roles.set_members","title":"roles.set_members","text":"<pre><code>set_members(\n    *, parent_role_oid, members, database_id, **kwargs\n)\n</code></pre> <p>Grant/Revoke direct membership to/from roles.</p> <p>Parameters:</p> Name Type Description Default <code>parent_role_oid</code> <code>int</code> <p>The OID of role whose membership will be granted/revoked to/from other roles.</p> required <code>members</code> <code>list</code> <p>An array of role OID(s) whom we want to grant direct membership of the parent role.        Only the OID(s) present in the array will be granted membership of parent role,        Membership will be revoked for existing members not present in this array.</p> required <p>Returns:</p> Type Description <code>RoleInfo</code> <p>A dict describing the updated information of the parent role.</p>"},{"location":"api/methods/#roles.RoleInfo","title":"roles.RoleInfo","text":"<p>               Bases: <code>TypedDict</code></p> <p>Information about a role.</p> <p>Attributes:</p> Name Type Description <code>oid</code> <code>int</code> <p>The OID of the role.</p> <code>name</code> <code>str</code> <p>Name of the role.</p> <code>super</code> <code>bool</code> <p>Whether the role has SUPERUSER status.</p> <code>inherits</code> <code>bool</code> <p>Whether the role has INHERIT attribute.</p> <code>create_role</code> <code>bool</code> <p>Whether the role has CREATEROLE attribute.</p> <code>create_db</code> <code>bool</code> <p>Whether the role has CREATEDB attribute.</p> <code>login</code> <code>bool</code> <p>Whether the role has LOGIN attribute.</p> <code>description</code> <code>Optional[str]</code> <p>A description of the role</p> <code>members</code> <code>Optional[list[RoleMember]]</code> <p>The member roles that directly inherit the role.</p> Refer PostgreSQL documentation on <ul> <li>pg_roles table.</li> <li>Role attributes</li> <li>Role membership</li> </ul>"},{"location":"api/methods/#roles.RoleMember","title":"roles.RoleMember","text":"<p>               Bases: <code>TypedDict</code></p> <p>Information about a member role of a directly inherited role.</p> <p>Attributes:</p> Name Type Description <code>oid</code> <code>int</code> <p>The OID of the member role.</p> <code>admin</code> <code>bool</code> <p>Whether the member role has ADMIN option on the inherited role.</p>"},{"location":"api/methods/#roles-configured","title":"Roles Configured","text":""},{"location":"api/methods/#roles.configured.list_","title":"roles.configured.list_","text":"<pre><code>list_(*, server_id, **kwargs)\n</code></pre> <p>List information about roles configured in Mathesar. Exposed as <code>list</code>.</p> <p>Parameters:</p> Name Type Description Default <code>server_id</code> <code>int</code> <p>The Django id of the Server containing the configured roles.</p> required <p>Returns:</p> Type Description <code>list[ConfiguredRoleInfo]</code> <p>A list of configured roles.</p>"},{"location":"api/methods/#roles.configured.add","title":"roles.configured.add","text":"<pre><code>add(*, server_id, name, password, **kwargs)\n</code></pre> <p>Configure a role in Mathesar for a database server.</p> <p>Parameters:</p> Name Type Description Default <code>server_id</code> <code>int</code> <p>The Django id of the Server to contain the configured role.</p> required <code>name</code> <code>str</code> <p>The name of the role.</p> required <code>password</code> <code>str</code> <p>The password for the role.</p> required <p>Returns:</p> Type Description <code>ConfiguredRoleInfo</code> <p>The newly configured role.</p>"},{"location":"api/methods/#roles.configured.delete","title":"roles.configured.delete","text":"<pre><code>delete(*, configured_role_id, **kwargs)\n</code></pre> <p>Delete a configured role for a server.</p> <p>Parameters:</p> Name Type Description Default <code>configured_role_id</code> <code>int</code> <p>The Django id of the ConfiguredRole model instance.</p> required"},{"location":"api/methods/#roles.configured.set_password","title":"roles.configured.set_password","text":"<pre><code>set_password(*, configured_role_id, password, **kwargs)\n</code></pre> <p>Set the password of a configured role for a server.</p> <p>Parameters:</p> Name Type Description Default <code>configured_role_id</code> <code>int</code> <p>The Django id of the ConfiguredRole model instance.</p> required <code>password</code> <code>str</code> <p>The password for the role.</p> required"},{"location":"api/methods/#roles.configured.ConfiguredRoleInfo","title":"roles.configured.ConfiguredRoleInfo","text":"<p>               Bases: <code>TypedDict</code></p> <p>Information about a role configured in Mathesar.</p> <p>Attributes:</p> Name Type Description <code>id</code> <code>int</code> <p>the Django ID of the ConfiguredRole model instance.</p> <code>name</code> <code>str</code> <p>The name of the role.</p> <code>server_id</code> <code>int</code> <p>The Django ID of the Server model instance for the role.</p>"},{"location":"api/methods/#schemas","title":"Schemas","text":""},{"location":"api/methods/#schemas.list_","title":"schemas.list_","text":"<pre><code>list_(*, database_id, **kwargs)\n</code></pre> <p>List information about schemas in a database. Exposed as <code>list</code>.</p> <p>Parameters:</p> Name Type Description Default <code>database_id</code> <code>int</code> <p>The Django id of the database containing the table.</p> required <p>Returns:</p> Type Description <code>list[SchemaInfo]</code> <p>A list of SchemaInfo objects</p>"},{"location":"api/methods/#schemas.get","title":"schemas.get","text":"<pre><code>get(*, schema_oid, database_id, **kwargs)\n</code></pre> <p>Get information about a schema in a database.</p> <p>Parameters:</p> Name Type Description Default <code>schema_oid</code> <code>int</code> <p>The OID of the schema to get.</p> required <code>database_id</code> <code>int</code> <p>The Django id of the database containing the table.</p> required <p>Returns:</p> Type Description <code>SchemaInfo</code> <p>The SchemaInfo describing the user-defined schema in the database.</p>"},{"location":"api/methods/#schemas.add","title":"schemas.add","text":"<pre><code>add(\n    *,\n    name,\n    database_id,\n    owner_oid=None,\n    description=None,\n    **kwargs\n)\n</code></pre> <p>Add a schema</p> <p>Parameters:</p> Name Type Description Default <code>name</code> <code>str</code> <p>The name of the schema to add.</p> required <code>database_id</code> <code>int</code> <p>The Django id of the database containing the schema.</p> required <code>owner_oid</code> <code>int</code> <p>The OID of the role who will own the new schema. If owner_oid is None, the current role will be the owner of the new schema.</p> <code>None</code> <code>description</code> <code>Optional[str]</code> <p>A description of the schema</p> <code>None</code> <p>Returns:</p> Type Description <code>SchemaInfo</code> <p>The SchemaInfo describing the user-defined schema in the database.</p>"},{"location":"api/methods/#schemas.delete","title":"schemas.delete","text":"<pre><code>delete(*, schema_oids, database_id, **kwargs)\n</code></pre> <p>Safely drop all objects in each schema, then the schemas themselves.</p> <p>Does not work on the internal <code>msar</code> schema.</p> <p>If any passed schema doesn\u2019t exist, an exception will be raised. If any object exists in a schema which isn\u2019t passed, but which depends on an object in a passed schema, an exception will be raised.</p> <p>Parameters:</p> Name Type Description Default <code>schema_oids</code> <code>list[int]</code> <p>The OIDs of the schemas to delete.</p> required <code>database_id</code> <code>int</code> <p>The Django id of the database containing the schema.</p> required"},{"location":"api/methods/#schemas.patch","title":"schemas.patch","text":"<pre><code>patch(*, schema_oid, database_id, patch, **kwargs)\n</code></pre> <p>Patch a schema, given its OID.</p> <p>Parameters:</p> Name Type Description Default <code>schema_oid</code> <code>int</code> <p>The OID of the schema to delete.</p> required <code>database_id</code> <code>int</code> <p>The Django id of the database containing the schema.</p> required <code>patch</code> <code>SchemaPatch</code> <p>A SchemaPatch object containing the fields to update.</p> required <p>Returns:</p> Type Description <code>SchemaInfo</code> <p>The SchemaInfo describing the user-defined schema in the database.</p>"},{"location":"api/methods/#schemas.SchemaInfo","title":"schemas.SchemaInfo","text":"<p>               Bases: <code>TypedDict</code></p> <p>Information about a schema</p> <p>Attributes:</p> Name Type Description <code>oid</code> <code>int</code> <p>The OID of the schema</p> <code>name</code> <code>str</code> <p>The name of the schema</p> <code>description</code> <code>Optional[str]</code> <p>A description of the schema</p> <code>owner_oid</code> <code>int</code> <p>The OID of the owner of the schema</p> <code>current_role_priv</code> <code>list[Literal['USAGE', 'CREATE']]</code> <p>All privileges available to the calling role on the schema.</p> <code>current_role_owns</code> <code>bool</code> <p>Whether the current role is the owner of the schema (even indirectly).</p> <code>table_count</code> <code>int</code> <p>The number of tables in the schema</p>"},{"location":"api/methods/#schemas.SchemaPatch","title":"schemas.SchemaPatch","text":"<p>               Bases: <code>TypedDict</code></p> <p>Attributes:</p> Name Type Description <code>name</code> <code>Optional[str]</code> <p>The name of the schema</p> <code>description</code> <code>Optional[str]</code> <p>A description of the schema</p>"},{"location":"api/methods/#schema-privileges","title":"Schema Privileges","text":""},{"location":"api/methods/#schemas.privileges.list_direct","title":"schemas.privileges.list_direct","text":"<pre><code>list_direct(*, schema_oid, database_id, **kwargs)\n</code></pre> <p>List direct schema privileges for roles.</p> <p>Parameters:</p> Name Type Description Default <code>schema_oid</code> <code>int</code> <p>The OID of the schema whose privileges we\u2019ll list.</p> required <code>database_id</code> <code>int</code> <p>The Django id of the database containing the schema.</p> required <p>Returns:</p> Type Description <code>list[SchemaPrivileges]</code> <p>A list of schema privileges.</p>"},{"location":"api/methods/#schemas.privileges.replace_for_roles","title":"schemas.privileges.replace_for_roles","text":"<pre><code>replace_for_roles(\n    *, privileges, schema_oid, database_id, **kwargs\n)\n</code></pre> <p>Replace direct schema privileges for roles.</p> <p>Possible privileges are <code>USAGE</code> and <code>CREATE</code>.</p> <p>Only roles which are included in a passed <code>SchemaPrivileges</code> object are affected.</p> <p>WARNING: Any privilege included in the <code>direct</code> list for a role is GRANTed, and any privilege not included is REVOKEd.</p> <p>Parameters:</p> Name Type Description Default <code>privileges</code> <code>list[SchemaPrivileges]</code> <p>The new privilege sets for roles.</p> required <code>schema_oid</code> <code>int</code> <p>The OID of the affected schema.</p> required <code>database_id</code> <code>int</code> <p>The Django id of the database containing the schema.</p> required <p>Returns:</p> Type Description <code>list[SchemaPrivileges]</code> <p>A list of all non-default privileges on the schema after the</p> <code>list[SchemaPrivileges]</code> <p>operation.</p>"},{"location":"api/methods/#schemas.privileges.transfer_ownership","title":"schemas.privileges.transfer_ownership","text":"<pre><code>transfer_ownership(\n    *, schema_oid, new_owner_oid, database_id, **kwargs\n)\n</code></pre> <p>Transfers ownership of a given schema to a new owner.</p> <p>Attributes:</p> Name Type Description <code>schema_oid</code> <p>The OID of the schema to transfer.</p> <code>new_owner_oid</code> <p>The OID of the role whom we want to be the new owner of the schema.</p> To successfully transfer ownership of a schema to a new owner the current user must: <ul> <li>Be a Superuser/Owner of the schema.</li> <li>Be a <code>MEMBER</code> of the new owning role. i.e. The current role should be able to <code>SET ROLE</code>   to the new owning role.</li> <li>Have <code>CREATE</code> privilege for the database.</li> </ul> <p>Returns:</p> Type Description <code>SchemaInfo</code> <p>Information about the schema, and the current user privileges.</p>"},{"location":"api/methods/#schemas.privileges.SchemaPrivileges","title":"schemas.privileges.SchemaPrivileges","text":"<p>               Bases: <code>TypedDict</code></p> <p>Information about schema privileges for a role.</p> <p>Attributes:</p> Name Type Description <code>role_oid</code> <code>int</code> <p>The <code>oid</code> of the role.</p> <code>direct</code> <code>list[Literal['USAGE', 'CREATE']]</code> <p>A list of schema privileges for the aforementioned role_oid.</p>"},{"location":"api/methods/#servers","title":"Servers","text":""},{"location":"api/methods/#tables","title":"Tables","text":""},{"location":"api/methods/#tables.list_","title":"tables.list_","text":"<pre><code>list_(*, schema_oid, database_id, **kwargs)\n</code></pre> <p>List information about tables for a schema. Exposed as <code>list</code>.</p> <p>Parameters:</p> Name Type Description Default <code>schema_oid</code> <code>int</code> <p>Identity of the schema in the user\u2019s database.</p> required <code>database_id</code> <code>int</code> <p>The Django id of the database containing the table.</p> required <p>Returns:</p> Type Description <code>list[TableInfo]</code> <p>A list of table details.</p>"},{"location":"api/methods/#tables.get","title":"tables.get","text":"<pre><code>get(*, table_oid, database_id, **kwargs)\n</code></pre> <p>List information about a table for a schema.</p> <p>Parameters:</p> Name Type Description Default <code>table_oid</code> <code>int</code> <p>Identity of the table in the user\u2019s database.</p> required <code>database_id</code> <code>int</code> <p>The Django id of the database containing the table.</p> required <p>Returns:</p> Type Description <code>TableInfo</code> <p>Table details for a given table oid.</p>"},{"location":"api/methods/#tables.add","title":"tables.add","text":"<pre><code>add(\n    *,\n    schema_oid,\n    database_id,\n    table_name=None,\n    pkey_column_info={},\n    column_data_list=[],\n    constraint_data_list=[],\n    owner_oid=None,\n    comment=None,\n    **kwargs\n)\n</code></pre> <p>Add a table with a default id column.</p> <p>Parameters:</p> Name Type Description Default <code>schema_oid</code> <code>int</code> <p>Identity of the schema in the user\u2019s database.</p> required <code>database_id</code> <code>int</code> <p>The Django id of the database containing the table.</p> required <code>table_name</code> <code>str</code> <p>Name of the table to be created.</p> <code>None</code> <code>pkey_column_info</code> <code>CreatablePkColumnInfo</code> <p>A dict describing the primary key column to be created for the new table.</p> <code>{}</code> <code>column_data_list</code> <code>list[CreatableColumnInfo]</code> <p>A list describing columns to be created for the new table, in order.</p> <code>[]</code> <code>constraint_data_list</code> <code>list[CreatableConstraintInfo]</code> <p>A list describing constraints to be created for the new table.</p> <code>[]</code> <code>owner_oid</code> <code>int</code> <p>The OID of the role who will own the new table. If owner_oid is None, the current role will be the owner of the new table.</p> <code>None</code> <code>comment</code> <code>str</code> <p>The comment for the new table.</p> <code>None</code> <p>Returns:</p> Type Description <code>int</code> <p>The <code>oid</code>, <code>name</code>, and <code>renamed_columns</code> of the created table.</p>"},{"location":"api/methods/#tables.delete","title":"tables.delete","text":"<pre><code>delete(*, table_oid, database_id, cascade=False, **kwargs)\n</code></pre> <p>Delete a table from a schema.</p> <p>Parameters:</p> Name Type Description Default <code>table_oid</code> <code>int</code> <p>Identity of the table in the user\u2019s database.</p> required <code>database_id</code> <code>int</code> <p>The Django id of the database containing the table.</p> required <code>cascade</code> <code>bool</code> <p>Whether to drop the dependent objects.</p> <code>False</code> <p>Returns:</p> Type Description <code>str</code> <p>The name of the dropped table.</p>"},{"location":"api/methods/#tables.patch","title":"tables.patch","text":"<pre><code>patch(*, table_oid, table_data_dict, database_id, **kwargs)\n</code></pre> <p>Alter details of a preexisting table in a database.</p> <p>Parameters:</p> Name Type Description Default <code>table_oid</code> <code>str</code> <p>Identity of the table whose name, description or columns we\u2019ll modify.</p> required <code>table_data_dict</code> <code>SettableTableInfo</code> <p>A list describing desired table alterations.</p> required <code>database_id</code> <code>int</code> <p>The Django id of the database containing the table.</p> required <p>Returns:</p> Type Description <code>str</code> <p>The name of the altered table.</p>"},{"location":"api/methods/#tables.import_","title":"tables.import_","text":"<pre><code>import_(\n    *,\n    data_file_id,\n    schema_oid,\n    database_id,\n    table_name=None,\n    comment=None,\n    **kwargs\n)\n</code></pre> <p>Import a CSV/TSV into a table.</p> <p>Parameters:</p> Name Type Description Default <code>data_file_id</code> <code>int</code> <p>The Django id of the DataFile containing desired CSV/TSV.</p> required <code>schema_oid</code> <code>int</code> <p>Identity of the schema in the user\u2019s database.</p> required <code>database_id</code> <code>int</code> <p>The Django id of the database containing the table.</p> required <code>table_name</code> <code>Optional[str]</code> <p>Name of the table to be imported.</p> <code>None</code> <code>comment</code> <code>Optional[str]</code> <p>The comment for the new table.</p> <code>None</code> <p>Returns:</p> Type Description <code>AddedTableInfo</code> <p>The <code>oid</code>, <code>name</code>, and <code>renamed_columns</code> of the created table.</p>"},{"location":"api/methods/#tables.get_import_preview","title":"tables.get_import_preview","text":"<pre><code>get_import_preview(\n    *, table_oid, columns, database_id, limit=20, **kwargs\n)\n</code></pre> <p>Preview an imported table.</p> <p>Parameters:</p> Name Type Description Default <code>table_oid</code> <code>int</code> <p>Identity of the imported table in the user\u2019s database.</p> required <code>columns</code> <code>list[PreviewableColumnInfo]</code> <p>List of settings describing the casts to be applied to the columns.</p> required <code>database_id</code> <code>int</code> <p>The Django id of the database containing the table.</p> required <code>limit</code> <code>int</code> <p>The upper limit for the number of records to return.</p> <code>20</code> <p>Returns:</p> Type Description <code>list[dict]</code> <p>The records from the specified columns of the table.</p>"},{"location":"api/methods/#tables.list_joinable","title":"tables.list_joinable","text":"<pre><code>list_joinable(\n    *, table_oid, database_id, max_depth=3, **kwargs\n)\n</code></pre> <p>List details for joinable tables.</p> <p>Parameters:</p> Name Type Description Default <code>table_oid</code> <code>int</code> <p>Identity of the table to get joinable tables for.</p> required <code>database_id</code> <code>int</code> <p>The Django id of the database containing the table.</p> required <code>max_depth</code> <code>int</code> <p>Specifies how far to search for joinable tables.</p> <code>3</code> <p>Returns:</p> Type Description <code>JoinableTableInfo</code> <p>Joinable table details for a given table.</p>"},{"location":"api/methods/#tables.list_with_metadata","title":"tables.list_with_metadata","text":"<pre><code>list_with_metadata(*, schema_oid, database_id, **kwargs)\n</code></pre> <p>List tables in a schema, along with the metadata associated with each table</p> <p>Parameters:</p> Name Type Description Default <code>schema_oid</code> <code>int</code> <p>PostgreSQL OID of the schema containing the tables.</p> required <code>database_id</code> <code>int</code> <p>The Django id of the database containing the table.</p> required <p>Returns:</p> Type Description <code>list</code> <p>A list of table details along with metadata.</p>"},{"location":"api/methods/#tables.get_with_metadata","title":"tables.get_with_metadata","text":"<pre><code>get_with_metadata(*, table_oid, database_id, **kwargs)\n</code></pre> <p>Get information about a table in a schema, along with the associated table metadata.</p> <p>Parameters:</p> Name Type Description Default <code>table_oid</code> <code>int</code> <p>The OID of the table in the user\u2019s database.</p> required <code>database_id</code> <code>int</code> <p>The Django id of the database containing the table.</p> required <p>Returns:</p> Type Description <code>dict</code> <p>A dict describing table details along with its metadata.</p>"},{"location":"api/methods/#tables.TableInfo","title":"tables.TableInfo","text":"<p>               Bases: <code>TypedDict</code></p> <p>Information about a table.</p> <p>Attributes:</p> Name Type Description <code>oid</code> <code>int</code> <p>The <code>oid</code> of the table in the schema.</p> <code>name</code> <code>str</code> <p>The name of the table.</p> <code>schema</code> <code>int</code> <p>The <code>oid</code> of the schema where the table lives.</p> <code>description</code> <code>Optional[str]</code> <p>The description of the table.</p> <code>owner_oid</code> <code>int</code> <p>The OID of the direct owner of the table.</p> <code>current_role_priv</code> <code>list[Literal['SELECT', 'INSERT', 'UPDATE', 'DELETE', 'TRUNCATE', 'REFERENCES', 'TRIGGER']]</code> <p>The privileges available to the user on the table.</p> <code>current_role_owns</code> <code>bool</code> <p>Whether the current role owns the table.</p>"},{"location":"api/methods/#tables.AddedTableInfo","title":"tables.AddedTableInfo","text":"<p>               Bases: <code>TypedDict</code></p> <p>Information about a newly created table.</p> <p>Attributes:</p> Name Type Description <code>oid</code> <code>int</code> <p>The <code>oid</code> of the table in the schema.</p> <code>name</code> <code>str</code> <p>The name of the table.</p> <code>renamed_columns</code> <code>Optional[dict]</code> <p>A dictionary giving the names of columns which were renamed due to collisions.</p>"},{"location":"api/methods/#tables.SettableTableInfo","title":"tables.SettableTableInfo","text":"<p>               Bases: <code>TypedDict</code></p> <p>Information about a table, restricted to settable fields.</p> <p>When possible, Passing <code>null</code> for a key will clear the underlying setting. E.g.,</p> <ul> <li><code>description = null</code> clears the table description.</li> </ul> <p>Setting any of <code>name</code>, <code>columns</code> to <code>null</code> is a noop.</p> <p>Attributes:</p> Name Type Description <code>name</code> <code>Optional[str]</code> <p>The new name of the table.</p> <code>description</code> <code>Optional[str]</code> <p>The description of the table.</p> <code>columns</code> <code>Optional[list[SettableColumnInfo]]</code> <p>A list describing desired column alterations.</p>"},{"location":"api/methods/#tables.JoinableTableRecord","title":"tables.JoinableTableRecord","text":"<p>               Bases: <code>TypedDict</code></p> <p>Information about a singular joinable table.</p> <p>Attributes:</p> Name Type Description <code>base</code> <code>int</code> <p>The OID of the table from which the paths start</p> <code>target</code> <code>int</code> <p>The OID of the table where the paths end.</p> <code>join_path</code> <code>list</code> <p>A list describing joinable paths in the following form: [   [[L_oid0, L_attnum0], [R_oid0, R_attnum0]],   [[L_oid1, L_attnum1], [R_oid1, R_attnum1]],   [[L_oid2, L_attnum2], [R_oid2, R_attnum2]],   \u2026 ]</p> <p>Here, [L_oidN, L_attnumN] represents the left column of a join, and [R_oidN, R_attnumN] the right.</p> <code>fkey_path</code> <code>list</code> <p>Same as <code>join_path</code> expressed in terms of foreign key constraints in the following form: [     [constraint_id0, reversed],     [constraint_id1, reversed], ]</p> <p>In this form, <code>constraint_idN</code> is a foreign key constraint, and <code>reversed</code> is a boolean giving whether to travel from referrer to referent (when False) or from referent to referrer (when True).</p> <code>depth</code> <code>int</code> <p>Specifies how far to search for joinable tables.</p> <code>multiple_results</code> <code>bool</code> <p>Specifies whether the path included is reversed.</p>"},{"location":"api/methods/#tables.JoinableTableInfo","title":"tables.JoinableTableInfo","text":"<p>               Bases: <code>TypedDict</code></p> <p>Information about joinable table(s).</p> <p>Attributes:</p> Name Type Description <code>joinable_tables</code> <code>list[JoinableTableRecord]</code> <p>List of reachable joinable table(s) from a base table.</p> <code>target_table_info</code> <code>list</code> <p>Additional info about target table(s) and its column(s).</p>"},{"location":"api/methods/#table-metadata","title":"Table Metadata","text":"<p>Classes and functions exposed to the RPC endpoint for managing table metadata.</p>"},{"location":"api/methods/#tables.metadata.list_","title":"tables.metadata.list_","text":"<pre><code>list_(*, database_id, **kwargs)\n</code></pre> <p>List metadata associated with tables for a database.</p> <p>Parameters:</p> Name Type Description Default <code>database_id</code> <code>int</code> <p>The Django id of the database containing the table.</p> required <p>Returns:</p> Type Description <code>list[TableMetaDataRecord]</code> <p>Metadata object for a given table oid.</p>"},{"location":"api/methods/#tables.metadata.set_","title":"tables.metadata.set_","text":"<pre><code>set_(*, table_oid, metadata, database_id, **kwargs)\n</code></pre> <p>Set metadata for a table.</p> <p>Parameters:</p> Name Type Description Default <code>table_oid</code> <code>int</code> <p>The PostgreSQL OID of the table.</p> required <code>metadata</code> <code>TableMetaDataBlob</code> <p>A TableMetaDataBlob object describing desired table metadata to set.</p> required <code>database_id</code> <code>int</code> <p>The Django id of the database containing the table.</p> required"},{"location":"api/methods/#tables.metadata.TableMetaDataBlob","title":"tables.metadata.TableMetaDataBlob","text":"<p>               Bases: <code>TypedDict</code></p> <p>The metadata fields which can be set on a table</p> <p>Attributes:</p> Name Type Description <code>data_file_id</code> <code>Optional[int]</code> <p>Specifies the DataFile model id used for the import.</p> <code>import_verified</code> <code>Optional[bool]</code> <p>Specifies whether a file has been successfully imported into a table.</p> <code>column_order</code> <code>Optional[list[int]]</code> <p>The order in which columns of a table are displayed.</p> <code>record_summary_template</code> <code>Optional[dict[str, Union[str, list[int]]]]</code> <p>The record summary template</p> <code>mathesar_added_pkey_attnum</code> <code>Optional[int]</code> <p>The attnum of the most recently-set pkey column.</p>"},{"location":"api/methods/#tables.metadata.TableMetaDataRecord","title":"tables.metadata.TableMetaDataRecord","text":"<p>               Bases: <code>TypedDict</code></p> <p>Metadata for a table in a database.</p> <p>Only the <code>database</code> and <code>table_oid</code> keys are required.</p> <p>Attributes:</p> Name Type Description <code>id</code> <code>int</code> <p>The Django id of the TableMetaData object.</p> <code>database_id</code> <code>int</code> <p>The Django id of the database containing the table.</p> <code>table_oid</code> <code>int</code> <p>The OID of the table in the database.</p> <code>data_file_id</code> <code>Optional[int]</code> <p>Specifies the DataFile model id used for the import.</p> <code>import_verified</code> <code>Optional[bool]</code> <p>Specifies whether a file has been successfully imported into a table.</p> <code>column_order</code> <code>Optional[list[int]]</code> <p>The order in which columns of a table are displayed.</p> <code>record_summary_template</code> <code>Optional[dict[str, Union[str, list[int]]]]</code> <p>The record summary template.</p> <code>mathesar_added_pkey_attnum</code> <code>Optional[int]</code> <p>The attnum of the most recently-set pkey column.</p>"},{"location":"api/methods/#table-privileges","title":"Table Privileges","text":""},{"location":"api/methods/#tables.privileges.list_direct","title":"tables.privileges.list_direct","text":"<pre><code>list_direct(*, table_oid, database_id, **kwargs)\n</code></pre> <p>List direct table privileges for roles. Args:     table_oid: The OID of the table whose privileges we\u2019ll list.     database_id: The Django id of the database containing the table. Returns:     A list of table privileges.</p>"},{"location":"api/methods/#tables.privileges.replace_for_roles","title":"tables.privileges.replace_for_roles","text":"<pre><code>replace_for_roles(\n    *, privileges, table_oid, database_id, **kwargs\n)\n</code></pre> <p>Replace direct table privileges for roles.</p> <p>Possible privileges are <code>INSERT</code>, <code>SELECT</code>, <code>UPDATE</code>, <code>DELETE</code>, <code>TRUNCATE</code>, <code>REFERENCES</code> and <code>TRIGGER</code>.</p> <p>Only roles which are included in a passed <code>TablePrivileges</code> object are affected.</p> <p>WARNING: Any privilege included in the <code>direct</code> list for a role is GRANTed, and any privilege not included is REVOKEd.</p> <p>Parameters:</p> Name Type Description Default <code>privileges</code> <code>list[TablePrivileges]</code> <p>The new privilege sets for roles.</p> required <code>table_oid</code> <code>int</code> <p>The OID of the affected table.</p> required <code>database_id</code> <code>int</code> <p>The Django id of the database containing the table.</p> required <p>Returns:</p> Type Description <code>list[TablePrivileges]</code> <p>A list of all non-default privileges on the table after the</p> <code>list[TablePrivileges]</code> <p>operation.</p>"},{"location":"api/methods/#tables.privileges.transfer_ownership","title":"tables.privileges.transfer_ownership","text":"<pre><code>transfer_ownership(\n    *, table_oid, new_owner_oid, database_id, **kwargs\n)\n</code></pre> <p>Transfers ownership of a given table to a new owner.</p> <p>Attributes:</p> Name Type Description <code>table_oid</code> <p>The OID of the table to transfer.</p> <code>new_owner_oid</code> <p>The OID of the role whom we want to be the new owner of the table.</p> To successfully transfer ownership of a table to a new owner the current user must: <ul> <li>Be a Superuser/Owner of the table.</li> <li>Be a <code>MEMBER</code> of the new owning role. i.e. The current role should be able to <code>SET ROLE</code>   to the new owning role.</li> <li>Have <code>CREATE</code> privilege on the table\u2019s schema.</li> </ul> <p>Returns:</p> Type Description <code>TableInfo</code> <p>Information about the table, and the current user privileges.</p>"},{"location":"api/methods/#tables.privileges.TablePrivileges","title":"tables.privileges.TablePrivileges","text":"<p>               Bases: <code>TypedDict</code></p> <p>Information about table privileges for a role. Attributes:     role_oid: The <code>oid</code> of the role.     direct: A list of table privileges for the aforementioned role_oid.</p>"},{"location":"api/methods/#users","title":"Users","text":"<p>Classes and functions exposed to the RPC endpoint for managing mathesar users.</p>"},{"location":"api/methods/#users.list_","title":"users.list_","text":"<pre><code>list_()\n</code></pre> <p>List information about all mathesar users. Exposed as <code>list</code>.</p> <p>Returns:</p> Type Description <code>list[UserInfo]</code> <p>A list of information about mathesar users.</p>"},{"location":"api/methods/#users.get","title":"users.get","text":"<pre><code>get(*, user_id)\n</code></pre> <p>List information about a mathesar user.</p> <p>Parameters:</p> Name Type Description Default <code>user_id</code> <code>int</code> <p>The Django id of the user.</p> required <p>Returns:</p> Type Description <code>UserInfo</code> <p>User information for a given user_id.</p>"},{"location":"api/methods/#users.add","title":"users.add","text":"<pre><code>add(*, user_def)\n</code></pre> <p>Add a new mathesar user.</p> <p>Parameters:</p> Name Type Description Default <code>user_def</code> <code>UserDef</code> <p>A dict describing the user to create.</p> required Privileges <p>This endpoint requires the caller to be a superuser.</p> <p>Returns:</p> Type Description <code>UserInfo</code> <p>The information of the created user.</p>"},{"location":"api/methods/#users.delete","title":"users.delete","text":"<pre><code>delete(*, user_id)\n</code></pre> <p>Delete a mathesar user.</p> <p>Parameters:</p> Name Type Description Default <code>user_id</code> <code>int</code> <p>The Django id of the user to delete.</p> required Privileges <p>This endpoint requires the caller to be a superuser.</p>"},{"location":"api/methods/#users.patch_self","title":"users.patch_self","text":"<pre><code>patch_self(\n    *,\n    username,\n    email,\n    full_name,\n    display_language,\n    **kwargs\n)\n</code></pre> <p>Alter details of currently logged in mathesar user.</p> <p>Parameters:</p> Name Type Description Default <code>username</code> <code>str</code> <p>The username of the user.</p> required <code>email</code> <code>str</code> <p>The email of the user.</p> required <code>full_name</code> <code>str</code> <p>The full name of the user.</p> required <code>display_language</code> <code>str</code> <p>Specifies the display language for the user, can be set to either <code>en</code> or <code>ja</code>.</p> required <p>Returns:</p> Type Description <code>UserInfo</code> <p>Updated user information of the caller.</p>"},{"location":"api/methods/#users.patch_other","title":"users.patch_other","text":"<pre><code>patch_other(\n    *,\n    user_id,\n    username,\n    is_superuser,\n    email,\n    full_name,\n    display_language\n)\n</code></pre> <p>Alter details of a mathesar user, given its user_id.</p> <p>Parameters:</p> Name Type Description Default <code>user_id</code> <code>int</code> <p>The Django id of the user.</p> required <code>username</code> <code>str</code> <p>The username of the user.</p> required <code>email</code> <code>str</code> <p>The email of the user.</p> required <code>is_superuser</code> <code>bool</code> <p>Specifies whether to set the user as a superuser.</p> required <code>full_name</code> <code>str</code> <p>The full name of the user.</p> required <code>display_language</code> <code>str</code> <p>Specifies the display language for the user, can be set to either <code>en</code> or <code>ja</code>.</p> required Privileges <p>This endpoint requires the caller to be a superuser.</p> <p>Returns:</p> Type Description <code>UserInfo</code> <p>Updated user information for a given user_id.</p>"},{"location":"api/methods/#users.replace_own","title":"users.replace_own","text":"<pre><code>replace_own(*, old_password, new_password, **kwargs)\n</code></pre> <p>Alter password of currently logged in mathesar user.</p> <p>Parameters:</p> Name Type Description Default <code>old_password</code> <code>str</code> <p>Old password of the currently logged in user.</p> required <code>new_password</code> <code>str</code> <p>New password of the user to set.</p> required"},{"location":"api/methods/#users.revoke","title":"users.revoke","text":"<pre><code>revoke(*, user_id, new_password)\n</code></pre> <p>Alter password of a mathesar user, given its user_id.</p> <p>Parameters:</p> Name Type Description Default <code>user_id</code> <code>int</code> <p>The Django id of the user.</p> required <code>new_password</code> <code>str</code> <p>New password of the user to set.</p> required Privileges <p>This endpoint requires the caller to be a superuser.</p>"},{"location":"api/methods/#users.UserInfo","title":"users.UserInfo","text":"<p>               Bases: <code>TypedDict</code></p> <p>Information about a mathesar user.</p> <p>Attributes:</p> Name Type Description <code>id</code> <code>int</code> <p>The Django id of the user.</p> <code>username</code> <code>str</code> <p>The username of the user.</p> <code>is_superuser</code> <code>bool</code> <p>Specifies whether the user is a superuser.</p> <code>email</code> <code>str</code> <p>The email of the user.</p> <code>full_name</code> <code>str</code> <p>The full name of the user.</p> <code>display_language</code> <code>str</code> <p>Specifies the display language for the user, can be either <code>en</code> or <code>ja</code>.</p>"},{"location":"api/methods/#users.UserDef","title":"users.UserDef","text":"<p>               Bases: <code>TypedDict</code></p> <p>Definition for creating a mathesar user.</p> <p>Attributes:</p> Name Type Description <code>username</code> <code>str</code> <p>The username of the user.</p> <code>password</code> <code>str</code> <p>The password of the user.</p> <code>is_superuser</code> <code>bool</code> <p>Whether the user is a superuser.</p> <code>email</code> <code>Optional[str]</code> <p>The email of the user.</p> <code>full_name</code> <code>Optional[str]</code> <p>The full name of the user.</p> <code>display_language</code> <code>Optional[str]</code> <p>Specifies the display language for the user, can be set to either <code>en</code> or <code>ja</code>.</p>"},{"location":"releases/","title":"Release notes","text":"<p>This is developer documentation to help with release notes. It is not published in our docs guide.</p>"},{"location":"releases/#requirements","title":"Requirements","text":"<ul> <li>Install DuckDB. <ul> <li>On Macs, the easiest way to do this is via Homebrew: <code>brew install duckdb</code>.</li> </ul> </li> <li>Install the GitHub CLI.<ul> <li>On Macs, the easiest way to do this is via Homebrew: <code>brew install gh</code>.</li> </ul> </li> </ul>"},{"location":"releases/#how-to-generate-release-notes","title":"How to generate release notes","text":"<ol> <li> <p>Run the <code>find_missing_prs.sh</code> script, passing the release version number as the only argument.</p> <pre><code>./find_missing_prs.sh 1.2.3\n</code></pre> <ul> <li>You can run this any time during the development cycle. If there is not yet a release branch, the script will compare <code>develop</code> to the previous release.</li> <li>If you haven\u2019t yet created a release notes file for this release, it will create one for you.</li> <li>The script will find PRs which have been merged but not yet included in the release notes file.</li> </ul> </li> <li> <p>Open the release notes file and find a new section at the end titled (TO CATEGORIZE). Incorporate PRs listed within this section into the release notes as you see fit. Rewrite the title text that appears directly in the markdown. Leave the titles as-written within the quotes (these will appear within hover text). Save the release notes and commit them.</p> </li> <li> <p>Edit <code>mkdocs.yml</code>, adding the newly-generated release notes file to the nav menu.</p> </li> <li> <p>Re-run the script as needed.</p> </li> </ol>"},{"location":"releases/0.1.0/","title":"Mathesar 0.1.0 (alpha release)","text":"<p>Mathesar\u2019s first alpha release! Features:</p> <ul> <li>Built on Postgres: Connect to an existing Postgres database or set one up from scratch.</li> <li>Set up your data models: Easily create and update Postgres schemas and tables.</li> <li>Data entry: Use our spreadsheet-like interface to view, create, update, and delete table records.</li> <li>Filter, sort, and group: Quickly slice your data in different ways.</li> <li>Query builder: Use our Data Explorer to build queries without knowing anything about SQL or joins.</li> <li>Schema migrations: Transfer columns between tables in two clicks.</li> <li>Uses Postgres features: Mathesar uses and manipulates Postgres schemas, primary keys, foreign keys, constraints and data types. e.g. \u201cLinks\u201d in the UI are foreign keys in the database.</li> <li>Custom data types: Custom data types for emails and URLs (more coming soon), validated at the database level.</li> <li>Basic access control: Users can have Viewer (read-only), Editor (can only edit data, but not data structure), or Manager (can edit both data and its structure) roles.</li> <li>Basic documentation: Users can install Mathesar using Docker Compose, and tricky product features are documented.</li> </ul> <p>Full Changelog</p>"},{"location":"releases/0.1.1/","title":"Mathesar 0.1.1 (alpha release)","text":"<p>This is a minor release focused on addressing bugs and improving user experience.</p>"},{"location":"releases/0.1.1/#bug-fixes","title":"Bug fixes","text":"<ul> <li>The UI now supports non-ASCII characters in column names and column settings.</li> <li>The record page works when the primary key is not an integer.</li> <li>Mathesar can now support primary keys that are UUIDs.</li> <li>Access level permissions presented on the UI are now consistent with the API access levels.</li> <li>Deleting newly created records immediately no longer results in getting stuck in a loading screen.</li> <li>Empty columns are now inferred as text instead of boolean during import.</li> <li>The UI now displays an appropriate failure message when failing to delete rows.</li> <li>Mathesar no longer crashes when attempting to order rows by non-orderable columns.</li> <li>Row selection gets cleared correctly when a placeholder cell is selected.</li> </ul>"},{"location":"releases/0.1.1/#improvements","title":"Improvements","text":"<ul> <li>The UI cancels edits when users press the Esc key in table cells.</li> <li>Group headers with record summaries now have links to allow users to navigate to the associated record.</li> <li>Dropdown positioning is improved across the app, so that they do not overflow the browser window.</li> <li>A bunch of smaller visual and UX improvements made by our Google Summer of Code (GSoC) applicants.</li> </ul> <p>Full Changelog</p>"},{"location":"releases/0.1.2/","title":"Mathesar 0.1.2 (alpha release)","text":"<p>This release focuses on documenting additional options for installing Mathesar, some improvements to the user experience, and some bug fixes. We\u2019ve also added support for switching between multiple databases in the UI.</p>"},{"location":"releases/0.1.2/#improvements-to-the-ui","title":"Improvements to the UI","text":"<ul> <li>Mathesar now supports switching between multiple databases using the UI. (#2847)</li> <li>You can now copy data from the Mathesar UI to paste into other applications. (#2773)</li> <li>The first non-primary key column is now highlighted when a new record is created. (#2515)</li> <li>Form inputs are disabled when the form is being submitted. (#2762)</li> <li>Action pane sidebars are now resizable. (#2808)</li> <li>Table deletion now requires you to enter the table\u2019s name (to prevent accidental deletion). (#2858)</li> <li>Long table names are now truncated and the full name is shown on hover. (#2825)</li> <li>We\u2019ve disabled setting columns to JSON List and Map types using the UI until we have a better editing experience for cells of those types. (#2772)</li> <li>Filter conditions can now be added and removed via the column header menu (#2782)</li> <li>Cell level context menus now also show menu items related to the row and column. (#2803)</li> </ul>"},{"location":"releases/0.1.2/#improvements-to-installation","title":"Improvements to installation","text":"<ul> <li>We have documented additional installation options for Mathesar. Visit the Mathesar docs site to explore these options. (#2809 #2826 #2824)</li> <li>A reference for Mathesar configuration options has been added to our documentation. (#2824)</li> <li>We have documented connecting to databases running on <code>localhost</code> outside of Docker. (#2819)</li> <li>The Mathesar Docker image is now standalone and can be started using the <code>docker run</code> command. (#2848)</li> <li>Superuser and database passwords are now validated when using the guided install script. (#2625)</li> </ul>"},{"location":"releases/0.1.2/#bug-fixes","title":"Bug fixes","text":"<ul> <li>Mathesar no longer crashes when importing tables with long column names. (#2725)</li> <li>Static default values can no longer be assigned to a dynamic default column. (#2780)</li> <li>Column names no longer overlap when the browser window is resized. (#2856)</li> <li>Databases removed from the configuration environment file won\u2019t show up in the UI anymore. (#2891)</li> <li>Fixed inconsistencies with the foreign key column icon. (#2768)</li> </ul>"},{"location":"releases/0.1.2/#api-changes","title":"API changes","text":"<ul> <li>The URL for the database page has been moved from <code>/&lt;db_name&gt;/</code> to <code>/db/&lt;db_name&gt;/</code> to avoid conflicts with other Mathesar URLs. (#2791)</li> </ul>"},{"location":"releases/0.1.2/#maintenance","title":"Maintenance","text":"<ul> <li>A \u201csponsors\u201d section has been added to the README. (#2710)</li> </ul> <p>Full Changelog</p>"},{"location":"releases/0.1.3/","title":"Mathesar 0.1.3 (alpha release)","text":"<p>This release:</p> <ul> <li>makes improvements to the installation process,</li> <li>adds support for sharing tables and explorations publicly,</li> <li>begins a framework for internationalization and translation of UI elements,</li> <li>moves DDL (SQL) logic to DB-layer functions to increase performance and reduce complexity,</li> <li>Improves summarization behavior in the data explorer,</li> <li>Adds support for importing JSON and Excel files,</li> <li>fixes user-reported issues,</li> <li>improves developer experience,</li> <li>fixes numerous small backend issues,</li> <li>fixes numerous small frontend issues,</li> <li>improves the user documentation, and</li> <li>improves the API documentation.</li> </ul>"},{"location":"releases/0.1.3/#whats-changed","title":"What\u2019s Changed","text":""},{"location":"releases/0.1.3/#installation-improvements","title":"Installation improvements","text":"<ul> <li>Add superuser creation page (#3088)</li> <li>Create superuser page\u2019s stylings (#3131)</li> <li>Remove the documented steps for creating a superuser from the command line (#3134)</li> </ul>"},{"location":"releases/0.1.3/#sharing-tables-and-explorations","title":"Sharing tables and explorations","text":"<ul> <li>Shareable links backend - Models, APIs, bypass auth for table requests (#3092)</li> <li>Shareable links frontend - shared table consumer view (#3093)</li> <li>Shared queries - Auth handling for query requests, frontend consumer view, API tests (#3113)</li> <li>UI for creating &amp; managing shares for tables and explorations (#3127)</li> <li>Shares - regenerate link, general fixes (#3133)</li> </ul>"},{"location":"releases/0.1.3/#internationalization","title":"Internationalization","text":"<ul> <li>Install typesafe-i18n &amp; translates one component (#3099)</li> <li>RichText component  (#3100)</li> <li>Django templates translatable (#3101)</li> </ul>"},{"location":"releases/0.1.3/#rsqla1-move-ddl-operations-to-sql-functions","title":"RSQLA1: Move DDL Operations to SQL functions","text":"<ul> <li>Sql test setup (#2903)</li> <li>Add SQL for column adding (#2923)</li> <li>Move constraint creation to SQL (#2952)</li> <li>Cleaner consolidated logic for adding constraints (#2976)</li> <li>Column creation and duplication DDL 2 (#2978)</li> <li>SQL for links creation  (#2986)</li> <li>Table create ddl (#3016)</li> <li>Add DDL functions for altering columns (#3097)</li> <li>SQL tests for schema ddl (#3098)</li> <li>Remove <code>pglast</code>, use SQL function instead (#3107)</li> <li>Move table splitting logic to SQL (#3119)</li> <li>Tests for links &amp; constraints ddl (#3120)</li> <li>Properly detect identity columns (#3125)</li> <li>Wiring sql functions for links and tables (#3130)</li> <li>Tests for alter table (#3139)</li> <li>Add constraint copying to column extraction logic (#3168)</li> </ul>"},{"location":"releases/0.1.3/#summarization-improvements","title":"Summarization improvements","text":"<ul> <li>Fix SQL Syntax error while summarizing <code>Money, URI, Email</code> column (#2911)</li> <li>Add <code>Sum</code> aggregation function  (#2893)</li> <li>Add <code>max</code> aggregation function (#2912)</li> <li>Add <code>min</code> aggregation function (#2914)</li> <li>Add <code>mean</code> aggregation function (#2916)</li> <li>Add <code>median</code> aggregation function (#2932)</li> <li>Add <code>Mode</code> aggregation function (#2940)</li> <li>Add <code>Percentage True</code> aggregation function  (#2945)</li> <li>Add <code>Peak Time</code> aggregation function. (#2981)</li> <li>Add <code>Peak Day of Week</code> aggregation function. (#3004)</li> <li>Add <code>Peak Month</code> aggregation function. (#3006)</li> <li>Fix <code>NaN:NaN</code> error while aggregating duration column (#3136)</li> </ul>"},{"location":"releases/0.1.3/#json-and-excel-file-improvements","title":"JSON and Excel file improvements","text":"<ul> <li>Updated datafile model to store file type (#2890)</li> <li>Added methods to import a perfect JSON (#2906)</li> <li>Removed code duplication while importing datafiles (#2926)</li> <li>Added tests to check importing json feature (#2933)</li> <li>Added pandas and JSON normalization code (#2968)</li> <li>Added api tests for importing JSON feature (#2977)</li> <li>Added documentation for importing data into tables (#2992)</li> <li>Extended import via copy-paste for JSON and updated UI (#3008)</li> <li>Updated documentation navigation to show importing data doc (#3023)</li> <li>Added <code>max_level</code> param for JSON import feature in the backend (#3039)</li> <li>Added functionality to import perfect Excel (#3059)</li> </ul>"},{"location":"releases/0.1.3/#fixes-for-user-reported-issues","title":"Fixes for user-reported issues","text":"<ul> <li>Help text: \u201cits linked tables\u201d (possessive adjective) (#3086)</li> </ul>"},{"location":"releases/0.1.3/#dx-improvements","title":"DX improvements","text":"<ul> <li>Remove <code>.env</code> from developer guide. (#2925)</li> <li>Add SQL files to the pytest workflow (#3082)</li> <li>New linting rule (#3116)</li> <li>Repeat failed tests (#3118)</li> <li>Add pldebugger to dev db (#3126)</li> </ul>"},{"location":"releases/0.1.3/#backend-fixes-and-improvements","title":"Backend fixes and improvements","text":"<ul> <li>Fix migrations (#2899)</li> <li>Remove lazydict dependency (#2993)</li> <li>Add API tests for multi-column primary key constraints (#3025)</li> <li>Support unknown types (backend) (#3040)</li> <li>Allow usage of local.py for untracked settings (#3064)</li> <li>Fix the error when <code>list aggregation</code> on mathesar custom array (#3106)</li> <li>Merge db list demo mode commits into release 0.1.3 (#3171)</li> </ul>"},{"location":"releases/0.1.3/#frontend-fixes-and-improvements","title":"Frontend fixes and improvements","text":"<ul> <li>Schema updates in database page without reloading. Fixes #2736 (#2745)</li> <li>Make columns re-orderable (#2831)</li> <li>Fix caret out of view when using Input on Chrome (#2836)</li> <li>Improve TSV serialization when copying cells (#2867)</li> <li>Add <code>max_split=1</code> to retrieve the column name (#2956)</li> <li>Fix default value input stealing focus (#2957)</li> <li>Auto-focus input when editing number/money cells (#2975)</li> <li>Updated frontend to send a single bulk delete request instead of one request for each record (#2985)</li> <li>Added margin between breadcrumb selector and bottom of the veiwport (#3014)</li> <li>Date Input closes now on tab (#3038)</li> <li>Scroll sheet all the way down when clicking the New Record button (#3045)</li> <li>Use Truncate component in Record Selector table cells (#3077)</li> <li>Copy formatted cell values to clipboard instead of raw values (#3094)</li> <li>Fix regression: Move UserProfile to the App level context from Route level context (#3175)</li> </ul>"},{"location":"releases/0.1.3/#documentation","title":"Documentation","text":"<ul> <li>Update README.md with troubleshooting instructions (#2751)</li> <li>Update documentation styles for active and hover (#2937)</li> <li>Added the command that generates the API documentation schema file to\u2026 (#2970)</li> <li>Added the command to copy the .env file, to the DEVELOPER GUIDE (#2972)</li> <li>Update demo\u2019s documentation (#2996)</li> <li>Fix typo error in DEVELOPER_GUIDE.md (#2999)</li> <li>Update build from source documentation (#3029)</li> <li>Clean up import docs (#3042)</li> </ul>"},{"location":"releases/0.1.3/#api-documentation","title":"API documentation","text":"<ul> <li>Integrated drf-spectacular library (#2939)</li> <li>Improved the operationIds by implementing a post hook function (#3021)</li> <li>Added OpenAPI spec for datafiles endpoint (#3044)</li> <li>Added OpenAPI specification for databases endpoint (#3047)</li> <li>Added OpenAPI specification for /schemas/ endpoint  (#3074)</li> </ul> <p>Full Changelog</p>"},{"location":"releases/0.1.4/","title":"Mathesar 0.1.4","text":""},{"location":"releases/0.1.4/#summary","title":"Summary","text":"<p>Mathesar 0.1.4 focuses on improving the installation and setup experience.</p> <p>See the upgrading section below for instructions on how to upgrade to this version.</p> <p>This page provides a comprehensive list of all changes in the release.</p>"},{"location":"releases/0.1.4/#new-features","title":"New Features","text":""},{"location":"releases/0.1.4/#ui-for-configuring-database-connections","title":"UI for configuring database connections","text":"<p>Now you can add, edit, and delete connections to multiple databases from within Mathesar\u2019s UI. Previously this was only possible via editing text-based configuration.</p> <p></p> <p></p> <p>#3170 #3223 #3299 #3309 #3319 #3326 #3341 #3348 #3349 #3352 #3354 #3356 #3368 #3377 #3387</p>"},{"location":"releases/0.1.4/#sample-data-loader","title":"Sample data loader","text":"<p>When adding a new database connection, you can choose to load sample data into that database. Sample data will be contained within specific schemas and may be useful to help new users play with Mathesar\u2019s features.</p> <p></p> <p>#3368</p>"},{"location":"releases/0.1.4/#postgresql-column-comments","title":"PostgreSQL column COMMENTs","text":"<p>PostgreSQL <code>COMMENT</code> values on columns are now exposed via a read/write \u201cdescription\u201d field within Mathesar. This feature was previously available for schemas and tables and is now available for columns too.</p> <p></p> <p>#3186 #3219</p>"},{"location":"releases/0.1.4/#text-only-imports","title":"Text-only imports","text":"<p>When importing CSV data, Mathesar now gives you the option to use <code>TEXT</code> as the database type for all columns. This choice speeds up the import for larger data sets by skipping the process of guessing column types.</p> <p></p> <p>#3050</p> <p>We are still considering additional ways to improve performance when importing \u2014 especially for data sets with lots of columns.</p>"},{"location":"releases/0.1.4/#reduced-database-privilege-installations","title":"Reduced database privilege installations","text":"<p>Mathesar can now be installed as long as the database role used during the installation has at least <code>CONNECT</code> and <code>CREATE</code> privileges on the database targeted by the installation. If you want to create a new database for Mathesar\u2019s use, the installation will (naturally) require a role with the <code>CREATEDB</code> privilege.</p> <p>#3117</p>"},{"location":"releases/0.1.4/#unified-mathesar-docker-image","title":"Unified Mathesar Docker image","text":"<p>The published Mathesar Docker image now contains a PostgreSQL server. This is used to provide a database backend in cases where Mathesar is started via Docker without being configured to connect to any other database.</p> <p>#3121 #3212</p>"},{"location":"releases/0.1.4/#metadata-storage-within-sqlite","title":"Metadata storage within SQLite","text":"<p>We\u2019ve added experimental SQLite support for the storage of Mathesar metadata. This will allow brave (or foolish) users to run Mathesar with this lighter-weight DB when installing from scratch on Linux.</p> <p>#3203 #3225 #2778</p>"},{"location":"releases/0.1.4/#improved-postgresql-compatibility","title":"Improved PostgreSQL compatibility","text":"<p>Mathesar now officially supports, and is tested against, Postgres versions 13, 14, and 15. It\u2019s also possible (but not yet recommended) to run Mathesar using Postgres 16.</p> <p>#3206</p>"},{"location":"releases/0.1.4/#easier-modification-of-sorting-precedence","title":"Easier modification of sorting precedence","text":"<p>When you have multiple sorting conditions applied to a table, you can now rearrange them via drag and drop to adjust the precedence of the sorting conditions.</p> <p></p> <p>#3316</p>"},{"location":"releases/0.1.4/#cell-values-displayed-within-sidebar","title":"Cell values displayed within sidebar","text":"<p>The table sidebar features a new \u201cCell\u201d tab to show the content of cells, simplifying the process of viewing large text cells.</p> <p></p>"},{"location":"releases/0.1.4/#groundwork","title":"Groundwork","text":"<ul> <li> <p>We made significant progress towards internationalizing Mathesar\u2019s user interface. We expect to our next release to offer users the ability to toggle between English and Japanese. Subsequent releases will continue to add additional languages.</p> <p>#3102 #3103 #3104 #3302 #3321 #3337 #3340 #3350 #3389</p> </li> <li> <p>We began some work that will help us eventually distribute Mathesar via a Debian <code>.deb</code> package. Some additional work remains but we hope to introduce this installation method in a future version.</p> <p>#3189 #3225</p> </li> <li> <p>We implemented the backend side of a new feature to import Excel and JSON files through Mathesar\u2019s import UI. More work still remains to implement the frontend side of this feature.</p> <p>#3083 #3195 #3132</p> </li> <li> <p>We took some baby steps towards building a system to automatically generate human-readable documentation for all our API endpoints. Significant work still remains.</p> <p>#3271 #3146</p> </li> </ul>"},{"location":"releases/0.1.4/#documentation","title":"Documentation","text":"<ul> <li>We improved and updated our documentation for installing and updating Mathesar. (#3227)</li> </ul>"},{"location":"releases/0.1.4/#bug-fixes","title":"Bug fixes","text":"<ul> <li>Tables having <code>CHECK</code> constraints are now usable within Mathesar. (#3243)</li> <li>Records can now be inserted into tables without primary keys. (#3252)</li> <li>We fixed inconsistent state when selecting a different column while editing a column\u2019s name. (#3219)</li> <li>URL cells now retain their focus after a contained hyperlink is clicked. (#3012)</li> <li>Searching for a record via a partially-entered date string no longer gives an error. (#3343)</li> <li>The Database Page now shows loading and error indicators. (#3351)</li> <li>The Schema Page now displays more detailed information about errors encountered when loading tables and explorations. (#3323)</li> <li>Exclusion constraint violations now produce more helpful error messages. (#3200)</li> <li>Files with missing or duplicate <code>id</code> values can now be imported without error. (#3155)</li> <li>The record selector can now be closed by clicking on the overlay outside its modal. (#3220)</li> <li>Help text for foreign key column data types is now more accurate. (#3260)</li> <li>Users of Mathesar\u2019s public demo site will no longer see database connections listed for other demo users. (#3129)</li> <li>More UI elements have visually distinctive focus states. (#3313)</li> <li>Date formatting is applied to arrays of date values. (#3325)</li> <li>On the record page, values within foreign key columns can now be set to <code>NULL</code> more intuitively. (#3310)</li> <li>A visual layout overflow bug on the record page is fixed. (#3303)</li> <li>Foreign keys referencing non-primary-key columns now display properly. (#3239)</li> </ul>"},{"location":"releases/0.1.4/#maintenance","title":"Maintenance","text":"<ul> <li>We made our CI pipeline more robust. (#3254)</li> <li>We made some updates to our workflows and developer documentation to support improvements to our issue labeling scheme. (#3338 #3298 #3280 #3336)</li> <li>We made some routine upgrades to dependencies and small adjustments to development tooling. (#3214 #3353 #3334 #3201 #3295 #3156 #3234 #3229 #3317)</li> <li>We addressed regressions from work during this release. (#3197)</li> <li>We improved error handling by preventing storing non-positive IDs for certain objects.(#3177)</li> <li>We clarified the API behavior by specifying JSON-only requests (#3090)</li> <li>We improved testing against DB objects with long names (#3140)</li> <li>We updated our org name to reflect a change from \u201cCenter of Complex Interventions\u201d to \u201cMathesar Foundation\u201d. (#3312)</li> <li>We made some improvements to our developer documentation. (#3300 #3210 #3279)</li> <li>We improved our process for generating release notes. (#3427)</li> <li>We resolved some merge conflicts after finalizing our previous release. (#3190)</li> </ul>"},{"location":"releases/0.1.4/#upgrading","title":"Upgrading to 0.1.4","text":"<p>The 0.1.4 release requires more upgrade steps than we hope to have for future releases! If you run into any trouble, we encourage you to open an issue or contact us for help.</p>"},{"location":"releases/0.1.4/#docker-compose","title":"For installations using Docker Compose","text":"<p>If you followed our Docker Compose installation instructions, then use these steps to upgrade your installation to 0.1.4.</p> <p>Note</p> <p>Depending on your setup, you may need to run some commands with <code>sudo</code>.</p> <ol> <li> <p>Find needed parts</p> <ol> <li> <p>Find your <code>.env</code> and <code>docker-compose.yml</code> files. Run</p> <pre><code>docker inspect mathesar_service \n</code></pre> <p>and look for the value of the <code>\"com.docker.compose.project.config_files\"</code> key in the resulting JSON to find the path to the <code>docker-compose.yml</code> file. The <code>.env</code> file should be in the same directory. If you have <code>jq</code> installed, you can run</p> <pre><code>docker inspect mathesar_service \\\n  | jq '.[0].Config.Labels.\"com.docker.compose.project.config_files\"'\n</code></pre> <p>and get the path directly. The <code>.env</code> file should be in the same directory.</p> </li> <li> <p>Copy the path of the directory containing <code>docker-compose.yml</code> and <code>.env</code> into the box below. Do not include a trailing slash.</p> <p></p> <p>Then press Enter to customize this guide with the configuration directory.</p> </li> <li> <p>If you are using a Docker container for your PostgreSQL database, Run</p> <pre><code>docker volume inspect mathesar_postgresql_data\n</code></pre> <p>and look for the <code>\"Mountpoint\"</code> in the resulting JSON.</p> </li> <li> <p>Copy the path of the directory into the box below. Do not include a trailing slash.</p> <p></p> <p>Then press Enter to customize this guide with the PostgreSQL data directory.</p> </li> </ol> </li> <li> <p>Stop Mathesar, remove old images</p> <pre><code>docker compose -f xMATHESAR_INSTALLATION_DIRx/docker-compose.yml down --rmi all\n</code></pre> </li> <li> <p>Set up new configuration</p> <p>Warning</p> <p><code>MATHESAR_DATABASES</code> has been deprecated as of v0.1.4 and will be removed entirely in future releases of Mathesar. If you end up deleting the variable from your <code>.env</code> file before starting up Mathesar after the upgrade, you can still add the connections manually through Mathesar\u2019s UI.</p> <ol> <li> <p>Back up the old configuration files:</p> <pre><code>mv xMATHESAR_INSTALLATION_DIRx/docker-compose.yml xMATHESAR_INSTALLATION_DIRx/docker-compose.yml.backup\ncp xMATHESAR_INSTALLATION_DIRx/.env xMATHESAR_INSTALLATION_DIRx/env.backup\n</code></pre> <p>(We\u2019ll modify the old file, so we copy instead of moving it.)</p> </li> <li> <p>Download the new docker compose file:</p> <pre><code>curl -sfL -o xMATHESAR_INSTALLATION_DIRx/docker-compose.yml https://raw.githubusercontent.com/mathesar-foundation/mathesar/0.1.4/docker-compose.yml\n</code></pre> </li> <li> <p>Edit the <code>xMATHESAR_INSTALLATION_DIRx/.env</code> file to break the <code>DJANGO_DATABASE_URL</code> variable into its parts.</p> <p>This variable should have the form:</p> <pre><code>DJANGO_DATABASE_URL=postgres://&lt;username&gt;:&lt;password&gt;@&lt;host&gt;:&lt;port&gt;/&lt;database&gt;\n</code></pre> <p>You should edit the <code>.env</code> file to have the variables:</p> <pre><code>POSTGRES_USER=&lt;username&gt;\nPOSTGRES_PASSWORD=&lt;password&gt;\nPOSTGRES_HOST=&lt;host&gt;\nPOSTGRES_PORT=&lt;port&gt;\nPOSTGRES_DB=&lt;database&gt;\n</code></pre> <p>If you don\u2019t want to set those environment variables (e.g., if they\u2019re otherwise used), you can instead edit the <code>docker-compose.yml</code> file directly to add those variables.</p> </li> <li> <p>Double-check the rest of the configuration:</p> <ul> <li>You should have your <code>SECRET_KEY</code> variable defined.</li> <li>If hosting on the internet, you should have a <code>DOMAIN_NAME</code> variable defined.</li> </ul> </li> </ol> </li> <li> <p>Initialize new Mathesar installation</p> <pre><code>docker compose -f xMATHESAR_INSTALLATION_DIRx/docker-compose.yml up -d\n</code></pre> <p>This will pull new images, and start the Mathesar containers. Wait a few minutes, then run <code>docker ps</code> to verify that you have <code>mathesar_service</code>, <code>mathesar-caddy-reverse-proxy-1</code>, and <code>mathesar_db</code> running and that the service is healthy. The services should not be reporting errors. If you were not using Docker volumes for your Mathesar PostgreSQL data, you\u2019re done, and you can login to Mathesar via your usual method. If you\u2019re not sure, try to login to Mathesar. If you\u2019re presented with a screen instructing you to create an Admin user, you likely need to proceed to the next step.</p> </li> <li> <p>Move your PostgreSQL directory</p> <ol> <li> <p>Bring down the services:</p> <pre><code>docker compose -f xMATHESAR_INSTALLATION_DIRx/docker-compose.yml down\n</code></pre> </li> <li> <p>Remove scaffold database data, copy your old PostgreSQL volume to the new location:</p> <pre><code>rm -r xMATHESAR_INSTALLATION_DIRx/msar/pgdata\ncp -r xMATHESAR_PG_DIRx xMATHESAR_INSTALLATION_DIRx/msar/pgdata\n</code></pre> </li> <li> <p>Bring the services back up:</p> <pre><code>docker compose -f xMATHESAR_INSTALLATION_DIRx/docker-compose.yml up -d\n</code></pre> </li> </ol> </li> <li> <p>If things look good, then you can try to login at the usual address using your normal username and password, and you should see your data.</p> </li> </ol>"},{"location":"releases/0.1.4/#guided","title":"For installations done via our guided script","text":"<p>If you installed Mathesar with our (now deprecated) guided script, then you have a Docker Compose installation. See the Docker Compose upgrade steps.</p>"},{"location":"releases/0.1.4/#scratch","title":"For installations done from scratch","text":"<p>If you installed Mathesar from scratch, then use these steps to upgrade your installation to 0.1.4.</p> <p>Warning</p> <p>These steps have not yet been tested extensively. If you run into any trouble, we encourage you to open an issue or submit a PR proposing changes to this file.</p> <ol> <li> <p>Go to your Mathesar installation directory.</p> <pre><code>cd xMATHESAR_INSTALLATION_DIRx\n</code></pre> <p>Note</p> <p>Your installation directory may be different from above if you used a different directory when installing Mathesar.</p> </li> <li> <p>Pull version 0.1.4 from the repository</p> <pre><code>git pull https://github.com/mathesar-foundation/mathesar.git\ngit checkout 0.1.4\n</code></pre> </li> <li> <p>Update Python dependencies</p> <pre><code>pip install -r requirements.txt\n</code></pre> </li> <li> <p>Next we will activate our virtual environment:</p> <pre><code>source ./mathesar-venv/bin/activate\n</code></pre> </li> <li> <p>Update your environment variables according to the the new configuration specification. In particular, you must put the connection info for the internal DB into new <code>POSTGRES_*</code> variables. The <code>DJANGO_DATABASE_URL</code> variable is no longer supported.</p> </li> <li> <p>Add the environment variables to the shell before running Django commands</p> <pre><code>export $(sudo cat .env)\n</code></pre> </li> <li> <p>Run the latest Django migrations</p> <pre><code>python manage.py migrate\n</code></pre> </li> <li> <p>Install the frontend dependencies</p> <pre><code>npm ci --prefix mathesar_ui\n</code></pre> </li> <li> <p>Build the Mathesar frontend app</p> <pre><code>npm run --prefix mathesar_ui build --max_old_space_size=4096\n</code></pre> </li> <li> <p>Update Mathesar functions on the database:</p> <pre><code>python mathesar/install.py --skip-confirm &gt;&gt; /tmp/install.py.log\n</code></pre> </li> <li> <p>Restart the gunicorn server</p> <pre><code>systemctl restart gunicorn\n</code></pre> </li> </ol>"},{"location":"releases/0.1.5/","title":"Mathesar 0.1.5","text":""},{"location":"releases/0.1.5/#summary","title":"Summary","text":"<p>Mathesar 0.1.5 is a small, bug fix release.</p> <p>See the upgrading section below for instructions on how to upgrade to this version.</p> <p>This page provides a comprehensive list of all changes in the release.</p>"},{"location":"releases/0.1.5/#improvements","title":"Improvements","text":"<ul> <li>Improve performance of loading sample data when adding a new connection #3448</li> <li>Constrain the width of the connections page #3439</li> </ul>"},{"location":"releases/0.1.5/#bug-fixes","title":"Bug fixes","text":"<ul> <li>Fix \u201cPage not found\u201d error when viewing a shared exploration #3456</li> <li>Fix bugs preventing Mathesar from running in demo mode #3459</li> <li>Fix timeout when setting up a new database with sample data in installations with higher network latency #3448</li> <li>Restore display of column type icons within shared tables #3456</li> <li>Temporarily hide link to missing docs page #3451</li> <li>Fix active cell displaying above row header cell #3382</li> </ul>"},{"location":"releases/0.1.5/#documentation","title":"Documentation","text":"<ul> <li>Improve docs on using an external PostgreSQL server for Mathesar\u2019s internal database #3457</li> <li>Add embedded video walkthrough within installation steps #3437 #3443</li> <li>0.1.5 release notes #3449</li> </ul>"},{"location":"releases/0.1.5/#maintenance","title":"Maintenance","text":"<ul> <li>Improve our release notes helper script #3435</li> <li>Post-release cleanup #3432</li> </ul>"},{"location":"releases/0.1.5/#upgrading","title":"Upgrading to Mathesar 0.1.5","text":""},{"location":"releases/0.1.5/#for-installations-using-docker-compose","title":"For installations using Docker Compose","text":"<p>If you have a Docker compose installation (including one from the guided script), run the command below:</p> <pre><code>docker compose -f /etc/mathesar/docker-compose.yml up --pull always -d\n</code></pre> <p>Your installation directory may be different</p> <p>You may need to change <code>/etc/mathesar/</code> in the command above if you chose to install Mathesar to a different directory.</p>"},{"location":"releases/0.1.5/#for-installations-done-from-scratch","title":"For installations done from scratch","text":"<p>If you installed from scratch, the upgrade instructions are the same as for 0.1.4, except that you\u2019ll need to specify version 0.1.5 when pulling code from the repository in Step 2. You should also skip Step 5 \u2013 you do not need to change the environment variables.</p>"},{"location":"releases/0.1.6/","title":"Mathesar 0.1.6","text":""},{"location":"releases/0.1.6/#summary","title":"Summary","text":"<p>Mathesar 0.1.6 introduces Japanese localization of the UI and adds better support for working with long text in individual record pages. Improvements for administrators include compatibility with Python 3.10 and 3.11, support for databases running PostgreSQL 16, and the removal of <code>npm</code> and <code>nodejs</code> as dependencies when installing from scratch. </p> <p>See the upgrading section below for instructions on how to upgrade to this version.</p> <p>This page provides a comprehensive list of all changes in the release.</p>"},{"location":"releases/0.1.6/#improvements","title":"Improvements","text":""},{"location":"releases/0.1.6/#you-can-now-configure-mathesars-ui-to-display-in-japanese","title":"You can now configure Mathesar\u2019s UI to display in Japanese","text":"<p>The language setting is stored per-user and can be modified when logging in or when editing a user. This changes the text displayed on buttons and other UI elements within Mathesar. It does not change the display of data within your database (e.g. table names, column names, and cell values). We are hoping to support more languages beyond English and Japanese eventually. Please reach out to us if your are interested in helping to add more translations! </p> <p></p> <p>#3486, #3484, #3483, #3472, #3501</p>"},{"location":"releases/0.1.6/#text-fields-now-auto-expands-on-the-record-page-to-accommodate-longer-texts","title":"Text fields now auto-expands on the record page to accommodate longer texts","text":"<p>Before</p> <p>All text inputs on the record page had the same height, regardless of their content.</p> <p></p> <p>After</p> <p>All text inputs in record page dynamically adjust to accommodate the content seamlessly.</p> <p></p> <p>#3470, #3488, #3495</p>"},{"location":"releases/0.1.6/#mathesar-is-now-compatible-with-python-versions-310-and-311-along-with-39","title":"Mathesar is now compatible with Python versions: 3.10 and 3.11 along with 3.9","text":"<p>Mathesar now officially supports Python versions 3.10 and 3.11, in addition to the existing 3.9 compatibility. This will provide great flexibility while building Mathesar from source on an OS that natively ships with relatively newer versions of Python.</p> <p>#3478, #3499, #3503, #3504</p>"},{"location":"releases/0.1.6/#mathesar-is-now-compatible-with-postgresql-16","title":"Mathesar is now compatible with PostgreSQL 16","text":"<p>Mathesar now officially supports, and is tested against, Postgres versions 13, 14, 15 and 16.</p> <p>#3480</p>"},{"location":"releases/0.1.6/#nodejs-is-no-longer-a-requirement-for-building-mathesar-from-source","title":"NodeJS is no longer a requirement for building Mathesar from source","text":"<p>We removed NodeJS as a dependency in favour of providing users with pre-built static assest for building Mathesar from source.</p> <p>#3489 </p>"},{"location":"releases/0.1.6/#bug-fix","title":"Bug fix","text":"<ul> <li>Fixed connection creation failures due to schema name collisions while adding provided sample schema(s) in the database #3490</li> </ul>"},{"location":"releases/0.1.6/#documentation","title":"Documentation","text":"<ul> <li>Documented upgrade instructions for v0.1.6 #3507</li> <li>0.1.6 release notes #3506</li> <li>Documented mathesar-debug image for Docker based installations #3513</li> <li>Fixed upgrade instructions for v0.1.5 #3469</li> <li>Updated Mathesar\u2019s version number in docs #3476</li> <li>Added MkDocs edit URI #3482</li> <li>Removed stale code coverage badge #3491</li> </ul>"},{"location":"releases/0.1.6/#maintenance","title":"Maintenance","text":"<ul> <li>Added a health check endpoint for Mathesar #3479</li> <li>Bumped Django from 4.2.8 to 4.2.10 #3492</li> <li>Removed NodeJS from Docker production image #3474 </li> <li>Post release cleanup #3463</li> </ul>"},{"location":"releases/0.1.6/#upgrading","title":"Upgrading to Mathesar 0.1.6","text":""},{"location":"releases/0.1.6/#for-installations-using-docker-compose","title":"For installations using Docker Compose","text":"<p>If you have a Docker compose installation (including one from the guided script), run the command below:</p> <pre><code>docker compose -f /etc/mathesar/docker-compose.yml up --pull always -d\n</code></pre> <p>Your installation directory may be different</p> <p>You may need to change <code>/etc/mathesar/</code> in the command above if you chose to install Mathesar to a different directory.</p>"},{"location":"releases/0.1.6/#for-installations-done-from-scratch","title":"For installations done from scratch","text":"<p>If you installed Mathesar from scratch, then use these steps to upgrade your installation to 0.1.6.</p> <ol> <li> <p>Go to your Mathesar installation directory</p> <pre><code>cd xMATHESAR_INSTALLATION_DIRx\n</code></pre> <p>Note</p> <p>Your installation directory may be different from above if you used a different directory when installing Mathesar.</p> </li> <li> <p>Pull version 0.1.6 from the repository</p> <pre><code>git pull https://github.com/mathesar-foundation/mathesar.git\ngit checkout 0.1.6\n</code></pre> </li> <li> <p>Update Python dependencies</p> <pre><code>pip install -r requirements-prod.txt\n</code></pre> </li> <li> <p>Activate our virtual environment</p> <pre><code>source ./mathesar-venv/bin/activate\n</code></pre> </li> <li> <p>You can skip the following if you\u2019re upgrading from versions 0.1.4 and above.</p> <ul> <li>If you\u2019re upgrading from versions &lt;= 0.1.3, update your environment variables according to the the new configuration specification.</li> <li>In particular, you must put the connection info for the internal DB into new <code>POSTGRES_*</code> variables. The <code>DJANGO_DATABASE_URL</code> variable is no longer supported.</li> </ul> </li> <li> <p>Add the environment variables to the shell before running Django commands</p> <pre><code>export $(sudo cat .env)\n</code></pre> </li> <li> <p>Run Django migrations</p> <pre><code>python manage.py migrate\n</code></pre> </li> <li> <p>Download and extract frontend assets</p> <pre><code>wget https://github.com/mathesar-foundation/mathesar/releases/download/0.1.6/static_files.zip\nunzip static_files.zip &amp;&amp; mv static_files mathesar/static/mathesar &amp;&amp; rm static_files.zip\n</code></pre> </li> <li> <p>Compile Mathesar translation files</p> <pre><code>python manage.py compilemessages\n</code></pre> </li> <li> <p>Update Mathesar functions on the database:</p> <pre><code>python -m mathesar.install --skip-confirm | tee /tmp/install.py.log\n</code></pre> </li> <li> <p>Restart the gunicorn server</p> <pre><code>systemctl restart gunicorn\n</code></pre> </li> </ol>"},{"location":"releases/0.1.7/","title":"Mathesar 0.1.7","text":""},{"location":"releases/0.1.7/#summary","title":"Summary","text":"<p>Mathesar 0.1.7 introduces linked table navigation from the data cell context menu. This release also fixes the regeneration of exploration share URLs and removes the \u2018group\u2019 suffix in the Data Explorer column names.</p> <p>See the upgrading section below for instructions on how to upgrade to this version.</p> <p>This page provides a comprehensive list of all changes in the release.</p>"},{"location":"releases/0.1.7/#improvements","title":"Improvements","text":""},{"location":"releases/0.1.7/#linked-table-navigation-from-cell-context-menu","title":"Linked Table Navigation from Cell Context Menu","text":"<p>Users can now navigate to linked tables from the cell context menu, providing a more seamless experience when working with linked data.</p> <p></p> <p>#3526</p>"},{"location":"releases/0.1.7/#bug-fixes","title":"Bug fixes","text":""},{"location":"releases/0.1.7/#fixed-regeneration-of-exploration-share-url","title":"Fixed Regeneration of Exploration Share URL","text":"<p>Fixed an issue where clicking \u201cRegenerate Link\u201d for a shared exploration failed to create a new URL and resulted in a 404 API request. Now, users will see a successful API call with a new, regenerated share URL.</p> <p>#3521</p>"},{"location":"releases/0.1.7/#remove-group-suffix-in-data-explorer","title":"Remove \u2018group\u2019 Suffix in Data Explorer","text":"<p>Resolved an issue in the Data Explorer where the grouping column name was incorrectly suffixed with \u2018group\u2019. Now, the original column names are preserved when summarizing data.</p> <p>#3357</p>"},{"location":"releases/0.1.7/#documentation","title":"Documentation","text":"<ul> <li>Upgrade Instructions for 0.1.7 #3534</li> </ul>"},{"location":"releases/0.1.7/#maintenance","title":"Maintenance","text":"<ul> <li>Bump Django from 4.2.10 to 4.2.11 #3496</li> <li>Made Release Notes Script Portable #3529</li> <li>Removed Stray Changes Post Script Update #3530</li> <li>Integrated Changes from Previous Release Preparation #3517</li> <li>Added Demo Target in Dockerfile for Future Deployments #3523</li> <li>New RPC Endpoint Implementation for Superuser Functions #3524</li> </ul>"},{"location":"releases/0.1.7/#upgrading","title":"Upgrading to Mathesar 0.1.7","text":""},{"location":"releases/0.1.7/#for-installations-using-docker-compose","title":"For installations using Docker Compose","text":"<p>If you have a Docker compose installation (including one from the guided script), run the command below:</p> <pre><code>docker compose -f /etc/mathesar/docker-compose.yml up --pull always -d\n</code></pre> <p>Your installation directory may be different</p> <p>You may need to change <code>/etc/mathesar/</code> in the command above if you chose to install Mathesar to a different directory.</p>"},{"location":"releases/0.1.7/#for-installations-done-from-scratch","title":"For installations done from scratch","text":"<p>If you installed Mathesar from scratch, then use these steps to upgrade your installation to 0.1.7.</p> <ol> <li> <p>Go to your Mathesar installation directory</p> <pre><code>cd xMATHESAR_INSTALLATION_DIRx\n</code></pre> <p>Note</p> <p>Your installation directory may be different from above if you used a different directory when installing Mathesar.</p> </li> <li> <p>Pull version 0.1.7 from the repository</p> <pre><code>git pull https://github.com/mathesar-foundation/mathesar.git\ngit checkout 0.1.7\n</code></pre> </li> <li> <p>Update Python dependencies</p> <pre><code>pip install -r requirements-prod.txt\n</code></pre> </li> <li> <p>Activate our virtual environment</p> <pre><code>source ./mathesar-venv/bin/activate\n</code></pre> </li> <li> <p>You can skip the following if you\u2019re upgrading from versions 0.1.4 and above.</p> <ul> <li>If you\u2019re upgrading from versions &lt;= 0.1.3, update your environment variables according to the the new configuration specification.</li> <li>In particular, you must put the connection info for the internal DB into new <code>POSTGRES_*</code> variables. The <code>DJANGO_DATABASE_URL</code> variable is no longer supported.</li> </ul> </li> <li> <p>Add the environment variables to the shell before running Django commands</p> <pre><code>export $(sudo cat .env)\n</code></pre> </li> <li> <p>Run Django migrations</p> <pre><code>python manage.py migrate\n</code></pre> </li> <li> <p>Download and extract frontend assets</p> <pre><code>wget https://github.com/mathesar-foundation/mathesar/releases/download/0.1.7/static_files.zip\nunzip static_files.zip &amp;&amp; mv static_files mathesar/static/mathesar &amp;&amp; rm static_files.zip\n</code></pre> </li> <li> <p>Compile Mathesar translation files</p> <pre><code>python manage.py compilemessages\n</code></pre> </li> <li> <p>Update Mathesar functions on the database:</p> <pre><code>python -m mathesar.install --skip-confirm | tee /tmp/install.py.log\n</code></pre> </li> <li> <p>Restart the gunicorn server</p> <pre><code>systemctl restart gunicorn\n</code></pre> </li> </ol>"},{"location":"releases/0.2.0/","title":"Mathesar 0.2.0 (beta)","text":""},{"location":"releases/0.2.0/#summary","title":"Summary","text":"<p>Version 0.2.0 is Mathesar\u2019s first beta release and features a brand new access control system, massive performance improvements, and an important security fix.</p> <p>Warning</p> <p>Upgrading directly from previous versions to <code>0.2.0</code> is not supported. Don\u2019t worry\u2014your databases can still be migrated to <code>0.2.0</code> using the instructions provided below.</p> <p>This page provides a comprehensive list of all changes since Mathesar 0.1.7.</p>"},{"location":"releases/0.2.0/#security-fixes","title":"Security Fixes","text":""},{"location":"releases/0.2.0/#data-files","title":"Fix unauthorized access to cached import data","text":"<ul> <li>Risk: Information disclosure</li> <li>Severity: Low-medium</li> <li>Affected versions: 0.1.0 - 0.1.7</li> <li> <p>Description:</p> <p>Mathesar has a feature to import data into a new table via uploading a CSV file. During the import process, the uploaded CSV file is cached within Mathesar and never actually deleted.</p> <p>Prior to version 0.2.0, all authenticated users were able to use Mathesar\u2019s API to read the cached data for all imports which had ever been performed by any user. This could allow one authenticated user to maliciously read another user\u2019s uploaded data. (Anonymous users are not affected \u2014 they have never been able to read any cached import data.)</p> <p>From version 0.2.0 onwards, Mathesar only allows each user to read their own cached import data.</p> <p>If any of your users might have imported CSV data through Mathesar which they would like to keep private from other users within the same Mathesar installation, then we recommend moving your Mathesar installation to 0.2.0.</p> </li> <li> <p>Fixed via: #4157</p> </li> <li> <p>Work-around:</p> <p>To mitigate an older version of Mathesar against this vulnerability without upgrading, you can delete all the cached import data files with the following steps.</p> How to delete your cached import data files <ol> <li>Run <code>docker ps</code> to identify the name of your running Mathesar container. This is commonly named <code>mathesar_service</code> but might vary depending on how you have installed Mathesar</li> <li>Run <code>docker exec -it mathesar_service bash</code> to open a shell within your running Mathesar service container. (Replace \u201cmathesar_service\u201d with the name of your container determined above, if needed.)</li> <li> <p>From within the shell, run the following command to list your cached import data files.</p> <pre><code>ls -la /code/.media/*\n</code></pre> </li> <li> <p>Run the following command to remove all your cached import data files:</p> <pre><code>rm -rf /code/.media/*\n</code></pre> </li> </ol> <p>Note that after performing this work-around, subsequent imports will still be vulnerable to this bug until you upgrade to Mathesar 0.2.0.</p> </li> </ul>"},{"location":"releases/0.2.0/#improvements","title":"Improvements","text":""},{"location":"releases/0.2.0/#permissions","title":"New access control system based on PostgreSQL roles and privileges","text":"<p>We\u2019ve completely redesigned Mathesar\u2019s access controls to leverage PostgreSQL\u2019s powerful system of roles and privileges. Each Mathesar user will now be assigned to a specific PostgreSQL role so that all their operations on the underlying database will be performed using that role.</p> <p></p> <p>The new system gives Mathesar several new capabilities. You can use Mathesar to configure roles and privileges in PostgreSQL and to set granular access control at the individual schema and table level. Plus Mathesar will respect all these configurations when performed directly in PostgreSQL by database administrators outside of Mathesar. Mathesar also no longer needs a database superuser for day-to-day operations.</p> <p></p> <p></p> <p>#3626 #3663 #3665 #3667 #3684 #3685 #3689 #3710 #3711 #3750 #3760 #3762 #3769 #3781 #3786 #3789 #3795 #3810 #3833 #3836 #3838 #3840 #3858 #3859 #3861 #3869 #3881 #3895 #3922 #3931 #3958 #3966 #3982 #4011 #4024 #4082 #4104 #4132 #4075</p>"},{"location":"releases/0.2.0/#performance","title":"Substantial performance improvements","text":"<p>Mathesar is now much faster! Most pages load about 5x faster, and large imports run about 50x faster.</p> <p>Also, you\u2019ll no longer need to manually \u201csync database schema changes\u201d to Mathesar. Now, any DDL changes will be reflected in Mathesar automatically!</p> <p>To achieve these gains, we\u2019ve significantly overhauled Mathesar\u2019s backend architecture, moving a large chunk of the application code into the database itself, and migrating to a new API.</p> <p>#3543 #3547 #3556 #3586 #3588 #3589 #3597 #3598 #3599 #3608 #3610 #3612 #3614 #3615 #3616 #3618 #3620 #3623 #3628 #3632 #3633 #3635 #3637 #3641 #3646 #3648 #3649 #3650 #3651 #3653 #3664 #3666 #3669 #3672 #3676 #3691 #3694 #3696 #3698 #3699 #3700 #3702 #3703 #3704 #3708 #3709 #3717 #3718 #3721 #3723 #3725 #3728 #3731 #3740 #3741 #3745 #3746 #3748 #3749 #3751 #3754 #3755 #3759 #3761 #3767 #3771 #3782 #3783 #3791 #3796 #3799 #3800 #3802 #3803 #3804 #3807 #3808 #3809 #3811 #3813 #3814 #3819 #3821 #3823 #3824 #3825 #3831 #3832 #3837 #3843 #3845 #3847 #3850 #3852 #3853 #3855 #3856 #3857 #3866 #3873 #3879 #3884 #3885 #3892 #3893 #3894 #3897 #3909 #3940 #3948 #3974 #3976 #3978 #3979 #3983 #3984 #3987 #3996 #4015 #4016 #4021 #4026 #4035 #4040 #4116 #4123 #4046 #4065 #4073 #4105</p>"},{"location":"releases/0.2.0/#table-exports","title":"Table exports","text":"<p>You can now use Mathesar to export a table to a CSV file. Any filters and sorting that you\u2019ve applied to the table will be reflected in the exported data. And all relevant records will be included in the export, even if they are not shown on the current page within Mathesar.</p> <p></p> <p>#4090</p>"},{"location":"releases/0.2.0/#more-options-when-disconnecting-a-database","title":"More options when disconnecting a database","text":"<p>When disconnecting a database from Mathesar, you can now choose to remove the Mathesar schemas from the database.</p> <p></p> <p>#4122 #4136 #4124</p>"},{"location":"releases/0.2.0/#small-usability-improvements","title":"Small usability improvements","text":"<ul> <li>Persist visibility of table inspector sections #3997</li> <li>Default to case-insensitive comparison when filtering records #4131</li> <li>Prevent <code>Enter</code> key from mistakenly altering filter value #4078</li> <li>Make the top navigation header behave more consistently #4072 #4101</li> <li>Improve alignment of numeric fields on record page #4077</li> <li>Highlight newly-created items #4089 #4109</li> <li>Add entity type names to database and schema pages #4107</li> <li>Simplify the schema page #4112</li> <li>Improve the data explorer layout #4115</li> <li>Show a loading spinner for tale pages #3602</li> <li>Improve visual style and aesthetics #3860 #3962 #3970 #3998 #4047</li> </ul>"},{"location":"releases/0.2.0/#more-sample-data","title":"More sample data","text":"<p>Mathesar now gives you the option to load several new sample data sets when connecting a database.</p> <p>#4142</p>"},{"location":"releases/0.2.0/#optional-anonymous-usage-reporting","title":"Optional (anonymous) usage reporting","text":"<p>To help us better understand the ways in which people are using Mathesar, we\u2019ve added a new feature which periodically reports anonymous usage data about each Mathesar installation to the maintainers team. Upon installing (or upgrading to) Mathesar 0.2.0, Mathesar will give you an opportunity to opt out of usage data collection if you so choose. You can access this setting later by visiting the \u201cAdministration\u201d &gt; \u201cPrivacy\u201d page within Mathesar.</p> <p>This usage data will help us make Mathesar better! And it will help us demonstrate Mathesar\u2019s traction and impact to potential donors \u2014 so we encourage you to enable it.</p> <p></p> <p>We do not collect any personal or sensitive data!</p> <p>Here is a sample of the anonymous usage data we collect:</p> <pre><code>{\n    \"installation_id\": \"5f0126e9-02b0-451f-8797-6e2574b69814\",\n    \"mathesar_version\": \"0.2.0\",\n    \"user_count\": 12,\n    \"active_user_count\": 8,\n    \"configured_role_count\": 2,\n    \"connected_database_count\": 6,\n    \"connected_database_schema_count\": 35,\n    \"connected_database_table_count\": 169,\n    \"connected_database_record_count\": 1164525,\n    \"exploration_count\": 0\n}\n</code></pre> <p>#4049 #4111 #4126 #4140 #4141</p>"},{"location":"releases/0.2.0/#bug-fixes","title":"Bug fixes","text":"<ul> <li>Fix error when trying to reset password of other user #3536</li> <li>Handle negative numbers correctly when copying cells #3582</li> <li>Fix several subtle bugs related to selecting cells in a sheet #3037 #3968 #3973</li> <li>Fix timeout when installing Mathesar on a remote DB #3917</li> <li>Sort list of schemas #4050</li> <li>Allow users to hover over record-level error messages #4087</li> <li>Allow scrolling on \u201cCreate Superuser\u201d page #4093</li> <li>Fix alignment of numbers in cells for some font families #4097</li> <li>Fix 404 error from server side navigation to New User page #4106</li> <li>Fix Save &amp; Discard buttons always shown when viewing user #3971</li> <li>Improve error handling when attempting to import unsupported file types #4028</li> <li>Keep record selector open when double-clicking on linked record cell #4043</li> <li>Fix redundant schema name in page titles #4074</li> </ul>"},{"location":"releases/0.2.0/#documentation","title":"Documentation","text":""},{"location":"releases/0.2.0/#new-user-guide","title":"New User Guide","text":"<p>We\u2019ve overhauled our User Guide to document all new features and more thoroughly explain the inner-workings of Mathesar. You might even learn a thing or two about PostgreSQL by reading it!</p> <p>#3910 #3945 #4031</p>"},{"location":"releases/0.2.0/#more-in-app-help","title":"More in-app help","text":"<p>You\u2019ll also find more help within the application itself. Look for small gray help bubbles to explain concepts and provides links to more detailed information within the User Guide.</p> <p>#4108 #4135 #4144 #4121 #4098</p>"},{"location":"releases/0.2.0/#multi-versioned-documentation","title":"Multi-versioned documentation","text":"<p>Our documentation site https://docs.mathesar.org/ now features documentation for multiple Mathesar versions. See the version-switcher within the top navigation bar to read documentation for older versions of Mathesar.</p> <p>#3920 #3967</p>"},{"location":"releases/0.2.0/#features-removed","title":"Features removed","text":""},{"location":"releases/0.2.0/#sharable-tables-and-explorations-are-no-longer-available","title":"Sharable tables and explorations are no longer available","text":"<p>Back in version 0.1.3, we added support for \u201csharing\u201d tables and explorations via a link that would allow anonymous users to view data. In Mathesar 0.2.0, we\u2019ve removed this feature in order to speed up the development of our new PostgreSQL-based access control system. If you were relying on this feature, we\u2019d like to hear from you! Please open an issue to let us know.</p>"},{"location":"releases/0.2.0/#mathesars-internal-database-may-no-longer-be-sqlite","title":"Mathesar\u2019s internal database may no longer be SQLite","text":"<p>Version 0.2.0 removes support for SQLite as an internal database. If you were relying on this feature, we\u2019d like to hear from you! Please open an issue to let us know.</p> <p>#4023</p>"},{"location":"releases/0.2.0/#mathesars-live-demo-is-no-longer-active","title":"Mathesar\u2019s live demo is no longer active","text":"<p>We have removed the code and infrastructure which supported Mathesar\u2019s live demo.</p> <p>#3538 #3551 #3577 #3579 #3580 #3581</p>"},{"location":"releases/0.2.0/#maintenance","title":"Maintenance","text":"<p>The following PRs represent work done to reduce technical debt, update dependencies, improve developer documentation, and maintain our workflows.</p> <p>#3360 #3535 #3541 #3544 #3546 #3552 #3558 #3559 #3564 #3567 #3568 #3569 #3587 #3604 #3643 #3678 #3695 #3763 #3918 #3920 #3938 #3939 #3943 #3947 #3949 #3950 #3959 #3961 #3964 #3972 #3975 #3981 #3985 #3988 #3989 #3990 #3991 #3994 #3999 #4025 #4032 #4039 #4045 #4060 #4064 #4076 #4125 #4133 #4145 #3980 #4158 #4159 #4165 #4152 #4170</p>"},{"location":"releases/0.2.0/#migrate","title":"Migrating to 0.2.0 from previous versions","text":"<p>Mathesar 0.2.0 is our first beta release. As such, direct upgrades from our alpha versions are not supported.</p> <p>However, you can migrate the databases created in older versions to work with 0.2.0 by following the steps below.</p>"},{"location":"releases/0.2.0/#migration-overview","title":"Migration Overview","text":"<ul> <li>What you can migrate: the databases you\u2019ve created/connected and the data within them.</li> <li>What you cannot migrate: user accounts, passwords, explorations, and metadata.</li> <li>Here\u2019s what we\u2019ll do:<ul> <li>Take note of the databases you\u2019ve created or connected in your current Mathesar setup.</li> <li>Install Mathesar <code>0.2.0</code>.</li> <li>Reconnect the databases you had before.</li> </ul> </li> </ul> <p>When should I perform these steps?</p> <ul> <li>If any of your connected databases reside inside Mathesar\u2019s internal database server (inside Docker containers), then you will need to perform these steps.</li> <li>If all of your connected databases reside in PostgreSQL servers outside the Mathesar\u2019s Docker containers, then you could install 0.2.0 and reconnect your databases.</li> </ul>"},{"location":"releases/0.2.0/#for-installations-using-docker-compose","title":"For installations using Docker Compose","text":"<p>These instructions are for if you have a Docker compose installation (including one from the guided script).</p> <p>These steps assume that you\u2019re using our provided <code>docker-compose.yml</code> file, and the installation directory is <code>/etc/mathesar</code>.</p> <p>If you have installed Mathesar in a different location or heavily modified the <code>docker-compose.yml</code>, you may need to change some details of the provided commands.</p> <ol> <li> <p>With your old version of Mathesar still running, log into your internal database server:</p> <pre><code>docker exec -it mathesar_db psql -U mathesar -d mathesar_django\n</code></pre> <p>(This assumes your installation DB role is <code>mathesar</code>. Modify if necessary.)</p> </li> <li> <p>At the <code>psql</code> prompt, run:</p> <pre><code>SELECT db_name,host,port FROM mathesar_database;\n</code></pre> <ul> <li>The above SQL query will provide the list of connected database names along with their hosts and port.</li> <li>Copy and paste them in a text file somewhere. We will need them after installing 0.2.0.</li> </ul> </li> <li> <p>Then create a temporary database:</p> <pre><code>CREATE DATABASE mathesar_temp;\n</code></pre> </li> <li> <p>Log out with Ctrl+D, and log into the <code>mathesar_temp</code> database:</p> <pre><code>docker exec -it mathesar_db psql -U mathesar -d mathesar_temp\n</code></pre> </li> <li> <p>Then drop the old Mathesar Django database, and create a new one:</p> <pre><code>DROP DATABASE mathesar_django;\n</code></pre> <pre><code>CREATE DATABASE mathesar_django OWNER mathesar;\n</code></pre> <p>(Modify <code>mathesar</code> above to set the owner to whichever role you use to run Mathesar.)</p> </li> <li> <p>Log out with Ctrl+D, and log into your new <code>mathesar_django</code> database:</p> <pre><code>docker exec -it mathesar_db psql -U mathesar -d mathesar_django\n</code></pre> </li> <li> <p>Then drop the temporary database:</p> <pre><code>DROP DATABASE mathesar_temp;\n</code></pre> </li> <li> <p>Log out with Ctrl+D.</p> </li> <li> <p>Stop Mathesar.</p> <pre><code>docker compose -f /etc/mathesar/docker-compose.yml down\n</code></pre> </li> <li> <p>Rename the old docker-compose file.</p> <pre><code>mv /etc/mathesar/docker-compose.yml /etc/mathesar/docker-compose.old.yml\n</code></pre> </li> <li> <p>Download the 0.2.0 docker-compose.yml file and place it within <code>/etc/mathesar</code>.</p> <pre><code>cd /etc/mathesar\n</code></pre> <pre><code>wget https://github.com/mathesar-foundation/mathesar/raw/0.2.0/docker-compose.yml\n</code></pre> </li> <li> <p>Modify it as per the installation instructions, using values from your old <code>docker-compose.old.yml</code> file.</p> </li> <li> <p>Run the command below:</p> <pre><code>docker compose -f /etc/mathesar/docker-compose.yml up --pull always -d\n</code></pre> </li> <li> <p>After Mathesar starts, connect to the databases using the \u201cConnect to an Existing Database\u201d option on the UI.</p> <ul> <li>Use the db_name, host, and port information from the previous database backup list to fill the form.</li> <li>For the <code>mathesar_db</code> host, the Role Name and Password can be found from the values of <code>POSTGRES_USER</code> and <code>POSTGRES_PASSWORD</code> environment variables.</li> <li>The values for these environment variables can be found in the <code>docker-compose.yml</code> file, or if you\u2019ve customized them, in your <code>.env</code> file.</li> <li>The default values for them are <code>mathesar</code> and <code>mathesar</code>.</li> <li>If you have any external hosts (other than <code>mathesar_db</code>), you should probably have the postgres user and passwords with you.</li> </ul> </li> </ol>"},{"location":"releases/0.2.0/#for-installations-done-from-scratch","title":"For installations done from scratch","text":"<p>For these instructions, you\u2019ll need to be familiar enough with your setup to log into your internal Mathesar Database.</p> <p>These steps assume that the installation directory is <code>/etc/mathesar</code>.</p> <p>If you have installed Mathesar in a different location, you may need to change some details of the provided commands.</p> <ol> <li> <p>Log into your <code>mathesar_django</code> database, and run:</p> <pre><code>SELECT db_name,host,port FROM mathesar_database;\n</code></pre> <ul> <li>The above SQL query will provide the list of connected database names along with their hosts and port.</li> <li>Copy and paste them in a text file somewhere. We will need them after installing 0.2.0.</li> </ul> </li> <li> <p>Then create a temporary database:</p> <pre><code>CREATE DATABASE mathesar_temp;\n</code></pre> </li> <li> <p>Log out with Ctrl+D, and log into the <code>mathesar_temp</code> database.</p> </li> <li> <p>Then drop the old Mathesar Django database, and create a new one:</p> <pre><code>DROP DATABASE mathesar_django;\n</code></pre> <pre><code>CREATE DATABASE mathesar_django OWNER mathesar;\n</code></pre> <p>(Modify <code>mathesar</code> above to set the owner to whichever role you use to run Mathesar.)</p> </li> <li> <p>Log out with Ctrl+D, and log into your new <code>mathesar_django</code> database.</p> </li> <li> <p>Then drop the temporary database:</p> <pre><code>DROP DATABASE mathesar_temp;\n</code></pre> </li> <li> <p>Log out with Ctrl+D.</p> </li> <li> <p>Stop Mathesar if it\u2019s running.</p> </li> <li> <p>Delete your previous Mathesar installation directory</p> <pre><code>rm -rf /etc/mathesar\n</code></pre> </li> <li> <p>Install Mathesar 0.2.0 using the installation steps in the same location: <code>/etc/mathesar</code>. You would not have to setup a PostgreSQL database since you already have one running.</p> </li> <li> <p>After Mathesar starts, connect to the databases using the \u201cConnect to an Existing Database\u201d option on the UI.</p> <ul> <li>Use the db_name from the previous database backup list to fill the Database Name in the form.</li> <li>The Host name would be same as the value of <code>POSTGRES_HOST</code> environment variable for the databases created via Mathesar.</li> <li>The Role Name and Password can be found from the values of <code>POSTGRES_USER</code> and <code>POSTGRES_PASSWORD</code> environment variables.</li> <li>The values for these environment variables can be found in your <code>.env</code> file.</li> <li>If you have any external hosts (other than the one in <code>POSTGRES_HOST</code>), you should probably have the postgres user and passwords with you.</li> </ul> </li> </ol>"},{"location":"releases/0.2.1/","title":"Mathesar 0.2.1","text":""},{"location":"releases/0.2.1/#summary","title":"Summary","text":"<p>Mathesar 0.2.1 addresses a number of bug fixes identified by members of our community during our beta release. This release also includes some quality-of-life improvements to Mathesar like nicknames for databases, persisted column widths, and the ability to connect databases without a password.</p> <p>We also have a new form to allow users to submit suggestions and feedback about Mathesar to our team.</p> <p>This page provides a comprehensive list of all changes since Mathesar 0.2.0.</p>"},{"location":"releases/0.2.1/#improvements","title":"Improvements","text":""},{"location":"releases/0.2.1/#database-nicknames","title":"Database nicknames","text":"<p>Users can now assign nicknames to their configured databases, making it easier to identify and organize connections. Instead of relying on technical database names, users can set meaningful labels that will be used throughout Mathesar.</p> <p></p> <p>This is especially useful when managing multiple databases with identical names, or when connecting to external services where database names are automated.</p> <p></p> <p>In addition to nickname support, all database connection values can now be edited.</p> <p>#4262 #4244 #4261</p>"},{"location":"releases/0.2.1/#in-app-feedback","title":"In-app feedback","text":"<p>Users can now provide direct feedback within the app using a built-in feedback form. This simple  input allows users to share thoughts, report issues, or suggest improvements without leaving the interface.</p> <p></p> <p>#4241</p>"},{"location":"releases/0.2.1/#column-widths-are-persisted","title":"Column widths are persisted","text":"<p>Column widths in table views are now automatically saved, ensuring a consistent layout across sessions. Users no longer need to manually adjust column sizes every time they revisit a table, improving usability and efficiency when working with columns of varied lengths.</p> <p></p> <p>#4257 #4248</p>"},{"location":"releases/0.2.1/#drop-schema-contents-when-deleting","title":"Drop schema contents when deleting","text":"<p>Mathesar now automatically drops all objects within a schema before deleting the schema itself, without relying on CASCADE. This ensures a safer and more controlled deletion process, preventing unintended removal of external dependencies while still allowing users to delete schemas that contain objects.</p> <p></p> <p>This strikes a unique balance between safety and convenience, making it easier to manage schemas while reducing the risk of accidental data loss. It also provides greater confidence when granting database access to users, as deletions remain contained and predictable.</p> <p>#4251</p>"},{"location":"releases/0.2.1/#docker-compose-installs-are-updated-to-postgres-17","title":"Docker Compose installs are updated to Postgres 17","text":"<p>For existing users</p> <p>See the upgrading Postgres section for instructions on safely upgrading your Postgres version.</p> <p>New installs of Mathesar using our recommended Docker Compose installation will now use Postgres 17. Prior to 1.2.1, Mathesar installs configured via our docker compose file used version 13.</p> <p>#4263</p>"},{"location":"releases/0.2.1/#support-connections-without-a-database-password","title":"Support connections without a database password","text":"<p>Mathesar now allows users to configure database connections without requiring a password. This provides greater flexibility for users relying on secure, passwordless authentication mechanisms while maintaining compatibility with a variety of database configurations.</p> <p></p> <p>#4252 #4255</p>"},{"location":"releases/0.2.1/#additional-features","title":"Additional features","text":"<ul> <li>Backend changes to support CSV file imports with an id column #4269</li> <li>Allow patching records in tables with non-integer primary keys #4246</li> </ul>"},{"location":"releases/0.2.1/#bug-fixes","title":"Bug fixes","text":"<ul> <li>Fix UnicodeEncodeError during connection attempt #4254 #4272</li> <li>Remove unnecessary loading spinner from table widget during refresh #4222</li> </ul>"},{"location":"releases/0.2.1/#documentation","title":"Documentation","text":"<ul> <li>Update documentation styling #4227</li> <li>README improvements #4208 #4212 #4184</li> <li>Documentation cleanup #4205 #4201 #4203</li> <li>Small docs improvement to collaborators #4225</li> <li>Updated Mathesar description to align with messaging. #4213</li> <li>Add simple analytics to docs #4217</li> </ul>"},{"location":"releases/0.2.1/#maintenance","title":"Maintenance","text":"<p>The following PRs represent work done to reduce technical debt, update dependencies, improve developer documentation, and maintain our workflows.</p> <p>#4259 #4266 #4265 #4230 #4146 #4253 #4209</p>"},{"location":"releases/0.2.1/#upgrading-postgres","title":"Upgrading to Postgres 17","text":"<p>Follow these steps to upgrade Postgres to the latest version. Note that this upgrade is only necessary for existing Mathesar users who would like to switch to the latest version of Postgres.</p> <ol> <li>Navigate to your installation directory.</li> <li>Shut down Mathesar with <code>docker compose down</code>.</li> <li>Create a backup of your installation with <code>cp -r msar msar.backup</code>. Keep the <code>msar.backup</code> folder in a safe location.</li> <li>Back up your existing Docker Compose configuration with <code>cp docker-compose.yml docker-compose.yml.backup</code>.</li> <li>Download the latest Docker Compose file with:    <pre><code>wget https://github.com/mathesar-foundation/mathesar/raw/0.2.1/docker-compose.yml\n</code></pre></li> <li>Edit the new <code>docker-compose.yml</code> file to restore any personal variables or custom configurations from your backup.</li> <li>Restart Mathesar with the latest images:    <pre><code>docker compose up --pull always -d\n</code></pre></li> <li>Once you\u2019ve confirmed everything is working correctly, you can delete the backup files.</li> </ol>"},{"location":"releases/0.2.1/#troubleshooting-rolling-back","title":"Troubleshooting &amp; rolling back","text":"<p>If you encounter issues or the upgrade fails:</p> <ol> <li>Restore the previous <code>docker-compose.yml</code>:    <pre><code>mv docker-compose.yml.backup docker-compose.yml\n</code></pre></li> <li>Restore your Mathesar installation:    <pre><code>rm -rf msar &amp;&amp; mv msar.backup msar\n</code></pre></li> <li>Start Mathesar again:    <pre><code>docker compose up -d\n</code></pre></li> </ol> <p>For additional support, reach out to the Mathesar team via a GitHub issue or in the general channel of our Matrix chat.</p>"},{"location":"releases/0.2.1/#upgrading","title":"Upgrading to 0.2.1","text":""},{"location":"releases/0.2.1/#for-installations-using-docker-compose","title":"For installations using Docker Compose","text":"<p>If you have a Docker compose installation (including one from the guided script), run the command below:</p> <pre><code>docker compose -f /etc/mathesar/docker-compose.yml up --pull always -d\n</code></pre> <p>Your installation directory may be different</p> <p>You may need to change <code>/etc/mathesar/</code> in the command above if you chose to install Mathesar to a different directory.</p>"},{"location":"releases/0.2.1/#for-installations-done-from-scratch","title":"For installations done from scratch","text":"<p>If you installed Mathesar from scratch, then use these steps to upgrade your installation to 0.2.1.</p> <ol> <li> <p>Go to your Mathesar installation directory</p> <pre><code>cd xMATHESAR_INSTALLATION_DIRx\n</code></pre> <p>Note</p> <p>Your installation directory may be different from above if you used a different directory when installing Mathesar.</p> </li> <li> <p>Pull version 0.2.1 from the repository</p> <pre><code>git pull https://github.com/mathesar-foundation/mathesar.git\ngit checkout 0.2.1\n</code></pre> </li> <li> <p>Update Python dependencies</p> <pre><code>pip install -r requirements.txt\n</code></pre> </li> <li> <p>Activate our virtual environment</p> <pre><code>source ./mathesar-venv/bin/activate\n</code></pre> </li> <li> <p>Run Django migrations</p> <pre><code>python manage.py migrate\n</code></pre> </li> <li> <p>Download and extract frontend assets</p> <pre><code>wget https://github.com/mathesar-foundation/mathesar/releases/download/0.2.1/static_files.zip\nunzip static_files.zip &amp;&amp; mv static_files mathesar/static/mathesar &amp;&amp; rm static_files.zip\n</code></pre> </li> <li> <p>Compile Mathesar translation files</p> <pre><code>python manage.py compilemessages\n</code></pre> </li> <li> <p>Update Mathesar functions on the database:</p> <pre><code>python -m mathesar.install --skip-confirm | tee /tmp/install.py.log\n</code></pre> </li> <li> <p>Restart the gunicorn server</p> <pre><code>systemctl restart gunicorn\n</code></pre> </li> </ol>"},{"location":"releases/0.2.2/","title":"Mathesar 0.2.2","text":""},{"location":"releases/0.2.2/#summary","title":"Summary","text":"<p>Mathesar 0.2.2 introduces several improvements, including enhanced primary key handling, smart pasting for easier data entry, and various bug fixes. Users can now choose UUIDs as primary keys, designate any existing column as a primary key during data import, and benefit from a new UUID column type.</p> <p>This page provides a comprehensive list of all changes in the release.</p>"},{"location":"releases/0.2.2/#improvements","title":"Improvements","text":""},{"location":"releases/0.2.2/#inserting-records-when-the-primary-key-has-no-default-value","title":"Inserting records when the primary key has no default value","text":"<p>Previously, Mathesar required a default value to be set on the primary key column in order to insert records. However there are some valid use cases for primary keys without default values, such as a TEXT column that receives a manually-supplied value on each insert. In 0.2.2 Mathesar now allows you to insert records into such tables by entering the primary key values during the insert.</p> <p>#4337 #4348</p>"},{"location":"releases/0.2.2/#configuring-primary-keys-during-import","title":"Configuring primary keys during import","text":"<p>When importing existing data, Mathesar automatically generates a primary key column. Previously, importing a simple CSV like:</p> <pre><code>First Name,Last Name\nJane,Park\nSteve,Smith\nLaura,Stein\nAmy,Richards\n</code></pre> <p>would result in Mathesar automatically adding an integer \u201cid\u201d primary key column that auto-increments by default.</p> <p>That\u2019s still the default behavior. But now, you can choose the type of generated primary key column: either an auto-incrementing integer or a UUID column with a default value of a random UUIDv4:</p> <p></p> <p>Additionally, you can now designate any existing column as the primary key. If you select a UUID or Number column, you\u2019ll have the option to apply the same default value settings that Mathesar uses for generated primary key columns.</p> <p>#4353 #4358 #4366 #4316</p>"},{"location":"releases/0.2.2/#configuring-primary-keys-when-creating-tables-from-scratch","title":"Configuring primary keys when creating tables from scratch","text":"<p>When creating new tables in Mathesar, you\u2019ll now have the option to set the name and type of your primary key column:</p> <p></p> <p>As when importing data, you can choose between an auto-incrementing integer or a UUID column with a default value of a random UUIDv4.</p> <p>#4331</p>"},{"location":"releases/0.2.2/#pasting-data-into-multiple-mathesar-cells","title":"Pasting data into multiple Mathesar cells","text":"<p>Mathesar now supports pasting, making it easy to update multiple cells across multiple rows and/or columns in one go. It automatically handles type conversions, so you can paste data from different formats without hassle. Linked column references work just like any other value. You can also copy-paste multiple cells from a variety of other spreadsheet applications directly into Mathesar.</p> <p>To paste cells that you\u2019ve copied, select the top-left cell of the cell range in Mathesar where you want to paste. Then use your system\u2019s keyboard shortcut to paste \u2014 \u2318 Command+V on macOS, or Ctrl+V on Windows and Linux.</p> <p>You\u2019ll see a confirmation dialog:</p> <p></p> <p>After choosing \u201cpaste\u201d, your selected rows will be updated with the new values.</p> <p></p> <p>#4258 #4322 #4327 #4326 #4345</p>"},{"location":"releases/0.2.2/#improved-support-for-uuid-types","title":"Improved support for UUID types","text":"<p>We\u2019ve elevated PostgreSQL\u2019s <code>uuid</code> data type to be a fully-supported type from within Mathesar.</p> <ul> <li>As mentioned in the sections above, you can now configure UUID primary keys for tables created via import and from scratch.</li> <li>UUID columns now display with an appropriate icon and column type label.</li> <li>Hexadecimal serialization of UUIDs in CSV data will be inferred to the UUID type during import.</li> <li>When searching and filtering records, you can now enter a substring of a UUID hexadecimal representation.</li> <li>You can now add UUID columns to existing tables from Mathesar. (However you cannot yet define dynamic defaults for those columns from within Mathesar.)</li> </ul> <p>#4316 #4329 #4351</p>"},{"location":"releases/0.2.2/#additional-improvements","title":"Additional improvements","text":"<ul> <li>Nickname searching in database search #4354</li> <li>Set default time type to \u2018Time without Time Zone\u2019 in new column form #4346</li> </ul>"},{"location":"releases/0.2.2/#bug-fixes","title":"Bug fixes","text":"<ul> <li>Gracefully handle restrictions on editing data in tables lacking primary keys #4349</li> <li>Fix error when saving a record in a table with a \u201cGENERATED ALWAYS AS IDENTITY\u201d primary key #4321</li> <li>Allow the user to recover from failed type inference during import #4359</li> <li>Fix bug causing Mathesar to infer certain text strings as money values when importing #4350</li> <li>Fix text descender clipping in Select dropdown elements #4344</li> <li>Fix problem with timezones and date/time keywords #4317</li> <li>Don\u2019t render invalid URLs as hyperlinks in URI cells #4365</li> </ul>"},{"location":"releases/0.2.2/#documentation","title":"Documentation","text":"<ul> <li>Fix documentation version chooser #4291</li> <li>Fix search result styling #4287</li> <li>Update README.md to fix typo #4361</li> </ul>"},{"location":"releases/0.2.2/#maintenance","title":"Maintenance","text":"<ul> <li>Revert \u201cBump django from 4.2.18 to 4.2.20\u201d #4325</li> <li>Bump django from 4.2.18 to 4.2.20 #4315</li> <li>Make SQL tests fail when test file is broken #4293</li> </ul>"},{"location":"releases/0.2.2/#upgrading","title":"Upgrading to 0.2.2","text":""},{"location":"releases/0.2.2/#for-installations-using-docker-compose","title":"For installations using Docker Compose","text":"<p>If you have a Docker compose installation (including one from the guided script), run the command below:</p> <pre><code>docker compose -f /etc/mathesar/docker-compose.yml up --pull always -d\n</code></pre> <p>Your installation directory may be different</p> <p>You may need to change <code>/etc/mathesar/</code> in the command above if you chose to install Mathesar to a different directory.</p>"},{"location":"releases/0.2.2/#for-installations-done-from-scratch","title":"For installations done from scratch","text":"<p>If you installed Mathesar from scratch, then use these steps to upgrade your installation to 0.2.2.</p> <ol> <li> <p>Go to your Mathesar installation directory</p> <pre><code>cd xMATHESAR_INSTALLATION_DIRx\n</code></pre> <p>Note</p> <p>Your installation directory may be different from above if you used a different directory when installing Mathesar.</p> </li> <li> <p>Pull version 0.2.2 from the repository</p> <pre><code>git pull https://github.com/mathesar-foundation/mathesar.git\ngit checkout 0.2.2\n</code></pre> </li> <li> <p>Update Python dependencies</p> <pre><code>pip install -r requirements.txt\n</code></pre> </li> <li> <p>Activate our virtual environment</p> <pre><code>source ./mathesar-venv/bin/activate\n</code></pre> </li> <li> <p>Run Django migrations</p> <pre><code>python manage.py migrate\n</code></pre> </li> <li> <p>Download and extract frontend assets</p> <pre><code>wget https://github.com/mathesar-foundation/mathesar/releases/download/0.2.2/static_files.zip\nunzip static_files.zip &amp;&amp; mv static_files mathesar/static/mathesar &amp;&amp; rm static_files.zip\n</code></pre> </li> <li> <p>Compile Mathesar translation files</p> <pre><code>python manage.py compilemessages\n</code></pre> </li> <li> <p>Update Mathesar functions on the database:</p> <pre><code>python -m mathesar.install --skip-confirm | tee /tmp/install.py.log\n</code></pre> </li> <li> <p>Restart the gunicorn server</p> <pre><code>systemctl restart gunicorn\n</code></pre> </li> </ol>"},{"location":"releases/0.2.3/","title":"Mathesar 0.2.3","text":"Switch to 0.2.5 if connecting over Unix socket <p>If you plan to connect Postgres databases to Mathesar over a Unix socket, we strongly recommend upgrading to version 0.2.5. Unix socket connections were introduced in 0.2.3 but contained a number of bugs related to port specification and the creation of new databases.</p>"},{"location":"releases/0.2.3/#summary","title":"Summary","text":"<p>Mathesar 0.2.3 adds support for row duplication, enhanced paste behavior in newly saved rows, new ways to connect an internal database, and improved numeric inference.</p> <p>This page provides a comprehensive list of all changes in the release.</p>"},{"location":"releases/0.2.3/#improvements","title":"Improvements","text":""},{"location":"releases/0.2.3/#more-options-for-internal-database-connections","title":"More options for internal database connections","text":"<p>Mathesar now supports connecting to internal PostgreSQL databases using any valid connection string, including configurations that:</p> <ul> <li>Use Unix sockets instead of TCP/IP.</li> <li>Omit the port or do not require a password.</li> </ul> <p>Previously, Mathesar required both a port and password to be defined, which prevented these types of connections. This was a common pain point for users attempting to use custom Postgres installations.</p> <p>Here\u2019s an example of the <code>docker-compose.yml</code> configuration to connect to Postgres running on the UNIX socket:</p> <pre><code>POSTGRES_HOST=\"%2Fvar%2Frun%2Fpostgresql\"\nPOSTGRES_PORT=\"\"\nPOSTGRES_USER=\"mathesar\"\nPOSTGRES_PASSWORD=\"\"\nPOSTGRES_DB=\"mathesar_django\"\n</code></pre> <p>Tip</p> <p><code>%2F</code> is the URL-encoded version of <code>/</code>, which is required when specifying a Unix socket path in a PostgreSQL connection string.</p> <p>#4416</p>"},{"location":"releases/0.2.3/#duplicate-row-functionality","title":"\u201cDuplicate row\u201d functionality","text":"<p>It\u2019s now easy to duplicate rows in Mathesar using the \u201cright click\u201d context menu. Right click any cell in the row you would like to duplicate and choose \u201cDuplicate Record\u201d.</p> <p>#4414</p>"},{"location":"releases/0.2.3/#support-for-pasting-into-cells-of-newly-inserted-rows","title":"Support for pasting into cells of newly-inserted rows","text":"<p>You may now paste data into the cells of newly-saved rows. Previously, you needed to hit the \u201crefresh\u201d button or reload the page before pasting into these rows.</p> <p>It is still not possible to paste into new, unsaved rows. Attempting to do so will present an error:</p> <p></p> <p>#4410</p>"},{"location":"releases/0.2.3/#improved-inference-for-numeric-columns","title":"Improved inference for numeric columns","text":"<p>In this release we have greatly improved the accuracy, safety, and performance of type inference for numeric columns. This means that Mathesar is much faster and reliable at detecting the type of numeric columns.</p> <p>In the future, this will enable significant front end performance improvements when switching columns to and from numeric types.</p> <p>#4406</p>"},{"location":"releases/0.2.3/#documentation","title":"Documentation","text":"<ul> <li>Fix pencil \u201cedit\u201d icons to be clickable #4369</li> </ul>"},{"location":"releases/0.2.3/#maintenance","title":"Maintenance","text":""},{"location":"releases/0.2.3/#removed-redundant-casting-functions","title":"Removed redundant casting functions","text":"<p>Many of Mathesar\u2019s existing casting functions included multiple versions that accepted different types of parameters. Where possible, we are making an effort to simplify and remove these redundant functions.</p> <p>#4386 #4387 #4389 #4390 #4391 #4392 #4393 #4394 #4395 #4396 #4397 #4398 #4401 #4402 #4411</p>"},{"location":"releases/0.2.3/#type-casting-improvements","title":"Type casting improvements","text":"<ul> <li>Extract casting logic from inference function #4385</li> <li>Remove valid_target_types #4404</li> <li>Make cast_to_uuid sql immutable #4403</li> </ul>"},{"location":"releases/0.2.3/#other-maintenance","title":"Other maintenance","text":"<ul> <li>Add build tests to checkpoint v2 #4413</li> <li>Bump tj-actions/changed-files from 41 to 46 in /.github/workflows #4377</li> <li>Update Flake8 to 7.2.0, fix error in deprecated code #4383</li> </ul>"},{"location":"releases/0.2.3/#upgrading","title":"Upgrading to 0.2.3","text":""},{"location":"releases/0.2.3/#for-installations-using-docker-compose","title":"For installations using Docker Compose","text":"<p>If you have a Docker compose installation (including one from the guided script), run the command below:</p> <pre><code>docker compose -f /etc/mathesar/docker-compose.yml up --pull always -d\n</code></pre> <p>Your installation directory may be different</p> <p>You may need to change <code>/etc/mathesar/</code> in the command above if you chose to install Mathesar to a different directory.</p>"},{"location":"releases/0.2.3/#for-installations-done-from-scratch","title":"For installations done from scratch","text":"<p>If you installed Mathesar from scratch, then use these steps to upgrade your installation to 0.2.3.</p> <ol> <li> <p>Go to your Mathesar installation directory</p> <pre><code>cd xMATHESAR_INSTALLATION_DIRx\n</code></pre> <p>Note</p> <p>Your installation directory may be different from above if you used a different directory when installing Mathesar.</p> </li> <li> <p>Pull version 0.2.3 from the repository</p> <pre><code>git pull https://github.com/mathesar-foundation/mathesar.git\ngit checkout 0.2.3\n</code></pre> </li> <li> <p>Update Python dependencies</p> <pre><code>pip install -r requirements.txt\n</code></pre> </li> <li> <p>Activate our virtual environment</p> <pre><code>source ./mathesar-venv/bin/activate\n</code></pre> </li> <li> <p>Run Django migrations</p> <pre><code>python manage.py migrate\n</code></pre> </li> <li> <p>Download and extract frontend assets</p> <pre><code>wget https://github.com/mathesar-foundation/mathesar/releases/download/0.2.3/static_files.zip\nunzip static_files.zip &amp;&amp; mv static_files mathesar/static/mathesar &amp;&amp; rm static_files.zip\n</code></pre> </li> <li> <p>Compile Mathesar translation files</p> <pre><code>python manage.py compilemessages\n</code></pre> </li> <li> <p>Update Mathesar functions on the database:</p> <pre><code>python -m mathesar.install --skip-confirm | tee /tmp/install.py.log\n</code></pre> </li> <li> <p>Restart the gunicorn server</p> <pre><code>systemctl restart gunicorn\n</code></pre> </li> </ol>"},{"location":"releases/0.2.4/","title":"Mathesar 0.2.4","text":"Upgrade to 0.2.5 strongly recommended <p>Mathesar 0.2.4 contains a regression that renders the Data Explorer inccessible for users unless you are connecting to PostgreSQL over a Unix socket. This bug is fixed in 0.2.5.</p>"},{"location":"releases/0.2.4/#summary","title":"Summary","text":"<p>This release contains targeted fixes for bugs within Mathesar\u2019s new UNIX socket connection feature, as released in version 0.2.3.</p> <p>We are keeping this release intentionally narrow to expedite delivery of these bug fixes. Additional new features and improvements will launch in our 0.3.0 release, targeted for June 2025.</p> <p>This page provides a comprehensive list of all changes in the release.</p>"},{"location":"releases/0.2.4/#bug-fixes","title":"Bug fixes","text":""},{"location":"releases/0.2.4/#unix-socket-bug-fixes","title":"Unix socket bug fixes","text":"<p>In version 0.2.3, users experienced the following issues when connecting via Unix socket:</p> <ul> <li>Inability to create new databases when Mathesar\u2019s internal database used a Unix socket connection #4473.</li> <li>Failure to connect when the internal database used a Unix socket connection with an explicit port specified #4473.</li> <li>Problems working with data explorations whose base tables were connected via Unix socket #4481.</li> </ul> <p>These issues have all been resolved. Additionally, Unix socket connections no longer require URL encoding. Instead, they must now be provided unencoded:</p> <ul> <li>\u274c <code>%2Fvar%2Frun%2Fpostgresql</code></li> <li>\u2705 <code>/var/run/postgresql</code></li> </ul>"},{"location":"releases/0.2.4/#upgrading","title":"Upgrading to 0.2.4","text":""},{"location":"releases/0.2.4/#for-installations-using-docker-compose","title":"For installations using Docker Compose","text":"<p>If you have a Docker compose installation (including one from the guided script), run the command below:</p> <pre><code>docker compose -f /etc/mathesar/docker-compose.yml up --pull always -d\n</code></pre> <p>Your installation directory may be different</p> <p>You may need to change <code>/etc/mathesar/</code> in the command above if you chose to install Mathesar to a different directory.</p>"},{"location":"releases/0.2.4/#for-installations-done-from-scratch","title":"For installations done from scratch","text":"<p>If you installed Mathesar from scratch, then use these steps to upgrade your installation to 0.2.4.</p> <ol> <li> <p>Go to your Mathesar installation directory</p> <pre><code>cd xMATHESAR_INSTALLATION_DIRx\n</code></pre> <p>Note</p> <p>Your installation directory may be different from above if you used a different directory when installing Mathesar.</p> </li> <li> <p>Pull version 0.2.4 from the repository</p> <pre><code>git pull https://github.com/mathesar-foundation/mathesar.git\ngit checkout 0.2.4\n</code></pre> </li> <li> <p>Update Python dependencies</p> <pre><code>pip install -r requirements.txt\n</code></pre> </li> <li> <p>Activate our virtual environment</p> <pre><code>source ./mathesar-venv/bin/activate\n</code></pre> </li> <li> <p>Run Django migrations</p> <pre><code>python manage.py migrate\n</code></pre> </li> <li> <p>Download and extract frontend assets</p> <pre><code>wget https://github.com/mathesar-foundation/mathesar/releases/download/0.2.4/static_files.zip\nunzip static_files.zip &amp;&amp; mv static_files mathesar/static/mathesar &amp;&amp; rm static_files.zip\n</code></pre> </li> <li> <p>Compile Mathesar translation files</p> <pre><code>python manage.py compilemessages\n</code></pre> </li> <li> <p>Update Mathesar functions on the database:</p> <pre><code>python -m mathesar.install --skip-confirm | tee /tmp/install.py.log\n</code></pre> </li> <li> <p>Restart the gunicorn server</p> <pre><code>systemctl restart gunicorn\n</code></pre> </li> </ol>"},{"location":"releases/0.2.5/","title":"Mathesar 0.2.5","text":""},{"location":"releases/0.2.5/#summary","title":"Summary","text":"<p>This is a minor hotfix release that fixes a single regression introduced by Mathesar 0.2.4. Access to the Data Explorer has been restored for Postgres databases that are connected via TCP/IP.</p> <p>We are working hard on several user-facing improvements. These are planned to launch in June 2025 as part of Mathesar 0.3.0.</p> <p>This page provides a comprehensive list of all changes in the release.</p>"},{"location":"releases/0.2.5/#bug-fixes","title":"Bug fixes","text":""},{"location":"releases/0.2.5/#data-explorer-access-restored-for-all-connections","title":"Data explorer access restored for all connections","text":"<p>Mathesar 0.2.4 introduced a bug where the Data Explorer was showing an error unless the underlying Postgres database was configured to connect via Unix socket. This change restores full Data Explorer functionality, regardless of database connection type.</p> <p>#4492</p>"},{"location":"releases/0.2.5/#upgrading","title":"Upgrading to 0.2.5","text":""},{"location":"releases/0.2.5/#for-installations-using-docker-compose","title":"For installations using Docker Compose","text":"<p>If you have a Docker compose installation (including one from the guided script), run the command below:</p> <pre><code>docker compose -f /etc/mathesar/docker-compose.yml up --pull always -d\n</code></pre> <p>Your installation directory may be different</p> <p>You may need to change <code>/etc/mathesar/</code> in the command above if you chose to install Mathesar to a different directory.</p>"},{"location":"releases/0.2.5/#for-installations-done-from-scratch","title":"For installations done from scratch","text":"<p>If you installed Mathesar from scratch, then use these steps to upgrade your installation to 0.2.5.</p> <ol> <li> <p>Go to your Mathesar installation directory</p> <pre><code>cd xMATHESAR_INSTALLATION_DIRx\n</code></pre> <p>Note</p> <p>Your installation directory may be different from above if you used a different directory when installing Mathesar.</p> </li> <li> <p>Pull version 0.2.5 from the repository</p> <pre><code>git pull https://github.com/mathesar-foundation/mathesar.git\ngit checkout 0.2.5\n</code></pre> </li> <li> <p>Update Python dependencies</p> <pre><code>pip install -r requirements.txt\n</code></pre> </li> <li> <p>Activate our virtual environment</p> <pre><code>source ./mathesar-venv/bin/activate\n</code></pre> </li> <li> <p>Run Django migrations</p> <pre><code>python manage.py migrate\n</code></pre> </li> <li> <p>Download and extract frontend assets</p> <pre><code>wget https://github.com/mathesar-foundation/mathesar/releases/download/0.2.5/static_files.zip\nunzip static_files.zip &amp;&amp; mv static_files mathesar/static/mathesar &amp;&amp; rm static_files.zip\n</code></pre> </li> <li> <p>Compile Mathesar translation files</p> <pre><code>python manage.py compilemessages\n</code></pre> </li> <li> <p>Update Mathesar functions on the database:</p> <pre><code>python -m mathesar.install --skip-confirm | tee /tmp/install.py.log\n</code></pre> </li> <li> <p>Restart the gunicorn server</p> <pre><code>systemctl restart gunicorn\n</code></pre> </li> </ol>"},{"location":"releases/0.3.0/","title":"Mathesar 0.3.0","text":""},{"location":"releases/0.3.0/#summary","title":"Summary","text":"<p>Mathesar 0.3.0 focuses on improvements to Mathesar\u2019s installation experience, look-and-feel, usability, and stability. Highlights include a new dark mode theme, a UI refresh in light mode and a new install method using a one-line script. We\u2019ve also improved usability of the Data Explorer, finding table records, and creating records. The release includes several other smaller fixes and improvements.</p> <p>This page provides a comprehensive list of all changes in the release.</p>"},{"location":"releases/0.3.0/#improvements","title":"Improvements","text":""},{"location":"releases/0.3.0/#a-new-look-for-mathesar","title":"A new look for Mathesar","text":"<p>We\u2019ve updated Mathesar\u2019s visual style to improve readability and contrast, move towards design consistency, support future ability to theme Mathesar, and better integrate with the new https://mathesar.org/.</p> <p></p> <p>A preview of the table page in Mathesar\u2019s new Light theme</p> <p>As part of our new look, we\u2019ve also introduced a dark mode theme for users who prefer using dark backgrounds to reduce eye strain for extended use.</p> <p></p> <p>A preview of the table page in Mathesar\u2019s new Dark theme</p> <p>By default, Mathesar will respect your \u201csystem\u201d color theme. You can switch to explicitly using light or dark mode via a new toggle in the header menu:</p> <p></p> <p>Related work: #4380 #4483 #4439 #4407 #4477 #4442</p>"},{"location":"releases/0.3.0/#updated-from-scratch-installation-workflow","title":"Updated \u201cfrom scratch\u201d installation workflow","text":"<p>We\u2019ve streamlined Mathesar\u2019s \u201cfrom scratch\u201d installation using <code>uv</code>, which eliminates several steps from the process. This simplifies setup for users who want to use Mathesar without Docker. You can see the updated installation instructions here.</p> <p>Related work: #4399 #4533 #4503 #4508 #4540 #4448</p>"},{"location":"releases/0.3.0/#browsing-records-in-the-record-selector","title":"Browsing records in the record selector","text":"<p>Previously, Mathesar\u2019s \u201crecord selector\u201d only displayed the first 10 rows of a table, and relied primarily on the search interface. We now support pagination and displaying up to 100 rows per page, which makes it much easier to browse all available records.</p> <p></p> <p>#4534</p>"},{"location":"releases/0.3.0/#data-explorer-usability-improvements","title":"Data Explorer usability improvements","text":"<p>We\u2019ve eliminated the distinction between viewing and editing explorations, instead moving to a single page that allows you to do both. We also now save column width changes made while viewing explorations.</p> <p>We\u2019ve made a few other minor usability improvements such as improving headings, using a dynamic \u201cInspector\u201d button that indicates when the inspector is open, improved display of help text.</p> <p>We have also removed \u201cundo\u201d / \u201credo\u201d functionality within the data explorer to prepare for future improvements.</p> <p>Related work: #4453 #4440 #4446 #4460</p>"},{"location":"releases/0.3.0/#pasting-into-mathesar-now-works-with-draft-rows","title":"Pasting into Mathesar now works with draft rows","text":"<p>Previously, pasting into Mathesar tables only worked for rows that had already been saved to PostgreSQL. Now you can create draft rows and paste into them.</p> <p>Related work: #4505</p>"},{"location":"releases/0.3.0/#set-up-security-policy","title":"Set up security policy","text":"<p>We\u2019ve added an initial security policy for Mathesar in line with best practices from other open source projects. Our aim was to use GitHub security features and improve our workflow around users reporting potential vulnerabilities.</p> <p>Related work: #4548</p>"},{"location":"releases/0.3.0/#new-help-text-for-time-zone-db-option","title":"New help text for time zone DB option","text":"<p>We\u2019ve improved our in-app explanation of how Postgres <code>WITH TIME ZONE</code> behavior works for users who may not be familiar with it.</p> <p>Related work: #4476</p>"},{"location":"releases/0.3.0/#bug-fixes","title":"Bug Fixes","text":"<ul> <li>Fix issue where <code>NOT NULL</code> constraints could only be set in the <code>public</code> schema #4531</li> <li>Fix localization not being available during Mathesar setup #4449</li> <li>Fix issue with some external links not showing the external link icon #4450</li> <li>Fix UUID-based foreign keys showing the value directly in filters instead of showing the record selector #4491</li> <li>Fix issue where a text data type column could not be changed to money data type #4415</li> </ul>"},{"location":"releases/0.3.0/#maintenance","title":"Maintenance","text":"<ul> <li>Lay the groundwork for the refactor of altering database columns #4499</li> <li>Frontend preparation work for future backend casting performance improvements #4426</li> <li>Work related to our internal workflows #4438 #4444 #4447 #4451 #4452 #4471 #4472 #4478 #4487 #4497 #4498 #4537 #4539</li> </ul>"},{"location":"releases/0.3.0/#upgrading","title":"Upgrading to 0.3.0","text":""},{"location":"releases/0.3.0/#for-installations-using-docker-compose","title":"For installations using Docker Compose","text":"<p>If you have a Docker compose installation, run the command below:</p> <pre><code>docker compose -f /etc/mathesar/docker-compose.yml up --pull always -d\n</code></pre> <p>Your installation directory may be different</p> <p>You may need to change <code>/etc/mathesar/</code> in the command above if you chose to install Mathesar to a different directory.</p>"},{"location":"releases/0.3.0/#for-direct-installations-of-mathesar-on-linux-macos-or-wsl","title":"For direct installations of Mathesar on Linux, macOS, or WSL","text":"<p>Starting with Mathesar 0.3.0, we provide an install script that automates both fresh installs and upgrades for standalone (non-Docker) installations.</p> <p>Previously referred to as \u201cInstallation from scratch\u201d</p> <p>In versions earlier than 0.3.0, this setup was referred to as \u201cInstallation from scratch\u201d</p> <p>Follow the steps below to upgrade Mathesar:</p> <ol> <li> <p>Enter your installation directory into the box below and press Enter to personalize this guide:</p> <p></p> <ul> <li>Do not include a trailing slash.</li> <li>Do not use any variables like <code>$HOME</code>.</li> </ul> </li> <li> <p>Go to your Mathesar installation directory.</p> <pre><code>cd xMATHESAR_INSTALL_DIRx\n</code></pre> <p>Note</p> <p>Your installation directory may be different from above if you used a different directory when installing Mathesar.</p> </li> <li> <p>Download and run the install script for 0.3.0</p> <pre><code>curl -sSfL https://github.com/mathesar-foundation/mathesar/releases/download/0.3.0/install.sh -o install.sh\nchmod +x install.sh\n\n./install.sh .\n</code></pre> </li> <li> <p>Replace your gunicorn systemd service with a Mathesar systemd service</p> <ol> <li> <p>Disable and stop the existing gunicorn service     <pre><code>systemctl disable gunicorn.service\nsystemctl stop gunicorn.service\n</code></pre></p> </li> <li> <p>Follow the steps in Run Mathesar as a systemd service from the installation guide</p> </li> <li> <p>Remove the gunicorn service file     <pre><code>sudo rm /lib/systemd/system/gunicorn.service\n</code></pre></p> </li> </ol> </li> <li> <p>Update your Caddyfile</p> <ol> <li> <p>Use the configuration shown in Install and configure Caddy in the installation guide, and update your Caddyfile accordingly</p> </li> <li> <p>Ensure that your domains are specified directly in the first line of the Caddyfile</p> </li> <li> <p>Restart your Caddy service   <pre><code>systemctl restart caddy.service\n</code></pre></p> </li> </ol> </li> </ol> <p>Tip</p> <p>If you\u2019re running Mathesar only on localhost and do not want it to run as a service, you could:</p> <ol> <li>Remove the gunicorn and caddy services</li> <li>Start Mathesar manually with:   <pre><code>mathesar run\n</code></pre></li> </ol>"},{"location":"releases/0.4.0/","title":"Mathesar 0.4.0","text":""},{"location":"releases/0.4.0/#summary","title":"Summary","text":"<p>Mathesar 0.4.0 introduces support for single sign-on (SSO) using OIDC, DigitalOcean and Railway one-click deployments, and the ability to paste new records directly into Mathesar. The release also includes many smaller enhancements and fixes, such as the ability to view and edit JSON from the UI.</p> <p>This page provides a comprehensive list of all changes in the release.</p>"},{"location":"releases/0.4.0/#improvements","title":"Improvements","text":""},{"location":"releases/0.4.0/#single-sign-on-sso","title":"Single Sign-on (SSO)","text":"<p>A glimpse of Mathesar\u2019s login page with Okta single sign-on enabled.</p> <p>Mathesar administrators can now set up single sign-on (SSO) as an authentication mechanism for their users, allowing them to log in without needing separate credentials. Administrators can also restrict access to specific email domains and assign a default database role for new users.</p> <p>We support any OpenID Connect (OIDC) identity provider, including Keycloak, Okta, Auth0, Google Workspace, and dozens of others. See our SSO documentation for more information.</p> <p>Related work: #4634 #4643</p>"},{"location":"releases/0.4.0/#bulk-creation-of-new-records-via-paste","title":"Bulk creation of new records via paste","text":"<p>Add 20 new customers by pasting a CSV into your table.</p> <p>You can now bulk-create records within Mathesar\u2019s UI by pasting data into the table page. This feature also allows you to import data into existing Mathesar tables from other sources such as spreadsheets.</p> <p>Previously, Mathesar\u2019s support for pasting needed existing rows to hold the data. Now, you can paste new data into the placeholder row at the bottom of a table, and Mathesar will create as many new rows as needed. If your pasted content also overlaps existing records, those will be updated as well.</p> <p>Related work: #4601</p>"},{"location":"releases/0.4.0/#new-one-click-installation-methods","title":"New one-click installation methods","text":"<p>We\u2019ve set up official templates to deploy Mathesar to DigitalOcean and Railway. These options allow you to set up a Mathesar installation without needing to manage server infrastructure or use the command-line.</p> <p>Related work: 4582 4651 4655</p>"},{"location":"releases/0.4.0/#initial-support-for-json-in-ui","title":"Initial support for JSON in UI","text":"<p>JSON is viewable and editable in Mathesar\u2019s table views.</p> <p>We have added support for viewing and editing <code>JSON</code> and <code>JSONB</code> data in tables, plus displaying the data correctly in the Data Explorer. Previously, JSON data was displayed as <code>[object Object]</code> in cells.</p> <p>Related work: #4641</p>"},{"location":"releases/0.4.0/#record-pages-use-table-column-order","title":"Record pages use table column order","text":"<p>Record pages reflect custom column order from table pages.</p> <p>Previously, pages for individual records listed columns in the order that the database stored them in. Table pages allow columns to be reordered for display, and we\u2019ve updated record pages to use that same order.</p> <p>Special thanks to community member @vishaljoshi789 for the fix.</p> <p>Related work: #4584</p>"},{"location":"releases/0.4.0/#groundwork","title":"Groundwork","text":""},{"location":"releases/0.4.0/#forms","title":"Forms","text":"<p>This release includes partial work for allowing users to create public-facing forms to collect data directly in Mathesar. We\u2019ve done initial work on defining core data models, CRUD API endpoints, and listing created forms. This functionality is not exposed in the UI yet.</p> <p>This functionality is hidden in 0.4.0 but will be published in an upcoming Mathesar release.</p> <p>Related work:</p> <p>#4565 #4536 #4576 #4554 #4577 #4525 #4642 #4585 #4568</p>"},{"location":"releases/0.4.0/#experimental-read-only-mathesar-role","title":"Experimental \u201cread only\u201d Mathesar role","text":"<p>Use at your own risk</p> <p>This management command may cause unintended behavior and is not fully tested.</p> <p>We\u2019re experimenting with a way to run Mathesar with a read-only Postgres role.</p> Instructions for use (Use at your own risk.) <ol> <li>Create a PostgreSQL database role with read-only access to your user data.</li> <li>Create a Mathesar user and assign it to that role.</li> <li>Log in as that user to complete the first-time password setup.</li> <li>Run the management command to restrict Django state:     <pre><code>python manage.py add_readonly_django -v 3 mathesar_ro_django\n</code></pre></li> <li>Update your <code>docker-compose.yml</code> (or Django settings) to make Mathesar use the read-only <code>mathesar_ro_django</code> role for Django.</li> <li>Restart the service to apply the changes.</li> </ol> <p>The result is an instance that allows login and viewing but blocks any permanent changes to user or app state.</p> <p>Related work: #4571</p>"},{"location":"releases/0.4.0/#documentation","title":"Documentation","text":""},{"location":"releases/0.4.0/#dataset-instructions-for-developers","title":"Dataset instructions for developers","text":"<p>We\u2019ve clarified our instructions for loading and using sample datasets to make it easier for contributors to test features and explore the app with realistic data.</p> <p>Related work: #4581</p>"},{"location":"releases/0.4.0/#maintenance","title":"Maintenance","text":"<ul> <li>Add an application name to all database connections and limit the connection pool size to 2. #4566</li> <li>Rename Column &amp; Constraint TS types to make way for models #4562</li> <li>Map function calls and their return values with a unique ID to better conform to the JSON-RPC 2.0 spec #4583</li> <li>Allow static props for RPC requests in AsyncRpcApiStore #4574</li> <li>0.4.0 Release notes #4658</li> <li>Work related to our internal workflows: #4586 #4630 #4631 #4611 #4614</li> </ul>"},{"location":"releases/0.4.0/#upgrading","title":"Upgrading to 0.4.0","text":""},{"location":"releases/0.4.0/#for-installations-using-docker-compose","title":"For installations using Docker Compose","text":"<p>If you have a Docker compose installation, run the command below:</p> <pre><code>docker compose -f /etc/mathesar/docker-compose.yml up --pull always -d\n</code></pre> <p>Your installation directory may be different</p> <p>You may need to change <code>/etc/mathesar/</code> in the command above if you chose to install Mathesar to a different directory.</p>"},{"location":"releases/0.4.0/#for-direct-installations-of-mathesar-on-linux-macos-or-wsl","title":"For direct installations of Mathesar on Linux, macOS, or WSL","text":"<p>Mathesar provides an install script that automates both fresh installs and upgrades for standalone (non-Docker) installations.</p> <p>Previously referred to as \u201cInstallation from scratch\u201d</p> <p>In versions earlier than 0.3.0, this setup was referred to as \u201cInstallation from scratch\u201d.</p> <p>Follow the steps below to upgrade Mathesar:</p> <ol> <li> <p>Enter your installation directory into the box below and press Enter to personalize this guide:</p> <p></p> <ul> <li>Do not include a trailing slash.</li> <li>Do not use any variables like <code>$HOME</code>.</li> </ul> </li> <li> <p>Go to your Mathesar installation directory.</p> <pre><code>cd xMATHESAR_INSTALL_DIRx\n</code></pre> <p>Note</p> <p>Your installation directory may be different from above if you used a different directory when installing Mathesar.</p> </li> <li> <p>Download and run the install script for 0.4.0</p> <pre><code>curl -sSfL https://github.com/mathesar-foundation/mathesar/releases/download/0.4.0/install.sh -o install.sh\nchmod +x install.sh\n\n./install.sh .\n</code></pre> </li> <li> <p>Replace your gunicorn systemd service with a Mathesar systemd service</p> <ol> <li> <p>Disable and stop the existing gunicorn service     <pre><code>systemctl disable gunicorn.service\nsystemctl stop gunicorn.service\n</code></pre></p> </li> <li> <p>Follow the steps in Run Mathesar as a systemd service from the installation guide</p> </li> <li> <p>Remove the gunicorn service file     <pre><code>sudo rm /lib/systemd/system/gunicorn.service\n</code></pre></p> </li> </ol> </li> <li> <p>Update your Caddyfile</p> <ol> <li> <p>Use the configuration shown in Install and configure Caddy in the installation guide, and update your Caddyfile accordingly</p> </li> <li> <p>Ensure that your domains are specified directly in the first line of the Caddyfile</p> </li> <li> <p>Restart your Caddy service   <pre><code>systemctl restart caddy.service\n</code></pre></p> </li> </ol> </li> </ol> <p>Tip</p> <p>If you\u2019re running Mathesar only on localhost and do not want it to run as a service, you could:</p> <ol> <li>Remove the gunicorn and caddy services</li> <li>Start Mathesar manually with:   <pre><code>mathesar run\n</code></pre></li> </ol>"},{"location":"releases/0.5.0/","title":"Mathesar 0.5.0","text":""},{"location":"releases/0.5.0/#summary","title":"Summary","text":"<p>Mathesar 0.5.0 introduces the ability to build and customize forms that allow anyone to submit data directly into your database. This release also updates the default single record view to use a modal instead of a separate page, makes column descriptions more prominent, and automates secret key generation during installation.</p> <p>This page provides a comprehensive list of all changes in the release.</p>"},{"location":"releases/0.5.0/#improvements","title":"Improvements","text":""},{"location":"releases/0.5.0/#form-builder","title":"Form builder","text":"<p>Create new service requests for a bike shop, choosing from available mechanics.</p> <p>You can now build and share forms that collect information from anyone, without giving them access to your Mathesar installation. Each form is linked to a table, and submissions are automatically saved as new records. Forms are shared via a unique link, and anyone with access to the link can submit responses.</p> <p></p> <p>The new form builder allows respondents to choose from and/or create new linked records.</p> <p>You can create forms that connect data across multiple tables, choose which fields to include, and control how related data is handled. Respondents can select from existing records or create new ones on the fly, depending on how you set up the form.</p> <p>Related work: #4556 #4598 #4609 #4637 #4644 #4653 #4657 #4663 #4664 #4665 #4666 #4669 #4671 #4673 #4680 #4681 #4683 #4691 #4694 #4695 #4698 #4699 #4700 #4701 #4704 #4707 #4710 #4711 #4713 #4726 #4727</p>"},{"location":"releases/0.5.0/#single-record-view-modal","title":"Single record view modal","text":"<p>View a customer\u2019s service requests without leaving the table page.</p> <p>Single record links in the table page now open a modal instead of a separate page. You can still access the full single record page via a link in the modal. This change aims to make it easier for users to review and edit records without losing context.</p> <p>Related work: #4674 #4659</p>"},{"location":"releases/0.5.0/#more-prominent-column-descriptions","title":"More prominent column descriptions","text":"<p>Column headers in the table page now show icons when the column has a description. The description is displayed on hover. This eliminates the need to open the Inspector to see column descriptions.</p> <p>Related work: #4685</p>"},{"location":"releases/0.5.0/#automatic-secret_key-generation-during-install","title":"Automatic <code>SECRET_KEY</code> generation during install","text":"<p>We\u2019ve automated generating and persisting the <code>SECRET_KEY</code> variable during the Mathesar installation process. You may also provide your own <code>SECRET_KEY</code>, which will override the automatically generated one.</p> <p>This simplifies some installation methods by removing the need for a previously fully manual step. However, you must still supply a <code>SECRET_KEY</code> manually when deploying on platforms without a persistent filesystem such as DigitalOcean\u2019s App Platform, to ensure stability across restarts.</p> <p>Related work: #4597</p>"},{"location":"releases/0.5.0/#clarified-edit-and-rename-actions-in-some-menus","title":"Clarified \u201cedit\u201d and \u201crename\u201d actions in some menus","text":"<p>We\u2019ve created a better distinction between actions that involve editing a resource and renaming a resource, for objects like tables, schemas, and forms. This was aimed at improving UX by better reflecting the purpose of the action.</p> <p>Related work: #4709</p>"},{"location":"releases/0.5.0/#bug-fixes","title":"Bug Fixes","text":"<ul> <li>Fix UI delays when changing the table page result size #4686</li> <li>Add a default value for the <code>OIDC_CONFIG_DICT</code> #4667</li> </ul>"},{"location":"releases/0.5.0/#maintenance","title":"Maintenance","text":"<ul> <li>Write 0.5.0 Release notes #4716</li> <li>Update the setuptools package to 78.1.1 #4484</li> <li>Remove a duplicated line from the 0.4.0 release notes #4662 #4668</li> </ul>"},{"location":"releases/0.5.0/#upgrading","title":"Upgrading to 0.5.0","text":""},{"location":"releases/0.5.0/#for-installations-using-docker-compose","title":"For installations using Docker Compose","text":"<p>If you have a Docker compose installation, run the command below:</p> <pre><code>docker compose -f /etc/mathesar/docker-compose.yml up --pull always -d\n</code></pre> <p>Your installation directory may be different</p> <p>You may need to change <code>/etc/mathesar/</code> in the command above if you chose to install Mathesar to a different directory.</p>"},{"location":"releases/0.5.0/#for-direct-installations-of-mathesar-on-linux-macos-or-wsl","title":"For direct installations of Mathesar on Linux, macOS, or WSL","text":"<p>Mathesar provides an install script that automates both fresh installs and upgrades for standalone (non-Docker) installations.</p> <p>Previously referred to as \u201cInstallation from scratch\u201d</p> <p>In versions earlier than 0.3.0, this setup was referred to as \u201cInstallation from scratch\u201d.</p> <p>Follow the steps below to upgrade Mathesar:</p> <ol> <li> <p>Enter your installation directory into the box below and press Enter to personalize this guide:</p> <p></p> <ul> <li>Do not include a trailing slash.</li> <li>Do not use any variables like <code>$HOME</code>.</li> </ul> </li> <li> <p>Go to your Mathesar installation directory.</p> <pre><code>cd xMATHESAR_INSTALL_DIRx\n</code></pre> <p>Note</p> <p>Your installation directory may be different from above if you used a different directory when installing Mathesar.</p> </li> <li> <p>Download and run the install script for 0.5.0     <pre><code>curl -sSfL https://github.com/mathesar-foundation/mathesar/releases/download/0.5.0/nstall.sh -o install.sh\nchmod +x install.sh\n\n./install.sh .\n</code></pre></p> </li> <li> <p>Replace your gunicorn systemd service with a Mathesar systemd service</p> <ol> <li> <p>Disable and stop the existing gunicorn service     <pre><code>systemctl disable gunicorn.service\nsystemctl stop gunicorn.service\n</code></pre></p> </li> <li> <p>Follow the steps in Run Mathesar as a systemd service from the installation guide</p> </li> <li> <p>Remove the gunicorn service file     <pre><code>sudo rm /lib/systemd/system/gunicorn.service\n</code></pre></p> </li> </ol> </li> <li> <p>Update your Caddyfile</p> <ol> <li> <p>Use the configuration shown in Install and configure Caddy in the installation guide, and update your Caddyfile accordingly</p> </li> <li> <p>Ensure that your domains are specified directly in the first line of the Caddyfile</p> </li> <li> <p>Restart your Caddy service   <pre><code>systemctl restart caddy.service\n</code></pre></p> </li> </ol> </li> </ol> <p>Tip</p> <p>If you\u2019re running Mathesar only on localhost and do not want it to run as a service, you could:</p> <ol> <li>Remove the gunicorn and caddy services</li> <li>Start Mathesar manually with:   <pre><code>mathesar run\n</code></pre></li> </ol>"},{"location":"releases/0.6.0/","title":"Mathesar 0.6.0","text":"<p>Want cross-table editing or bulk imports in Mathesar? Talk to us!</p> <p>For our next release, we\u2019re actively working on:</p> <ul> <li>the ability to edit data from multiple tables in a single view</li> <li>bulk import of data into existing tables</li> </ul> <p>If you\u2019re interested in either, we\u2019d love your input so we\u2019re prioritizing the right problems to solve. Talk to us for 20 min, we\u2019ll give you a $25 gift card as a thank you.</p>"},{"location":"releases/0.6.0/#summary","title":"Summary","text":"<p>Mathesar 0.6.0 introduces the file data type which allows you to upload, download, and preview files alongside your data. This release also brings a refreshed visual style to Mathesar, introducing semantic colors that make it easier to distinguish between databases, schemas, tables, and more at a glance.</p> <p>This page provides a comprehensive list of all changes in the release.</p>"},{"location":"releases/0.6.0/#improvements","title":"Improvements","text":""},{"location":"releases/0.6.0/#file-data-type","title":"File data type","text":"<p>Mathesar now includes a file data type, which lets you attach and interact with files directly in your tables. Any file type can be stored, with images showing a thumbnail preview that can be expanded to a larger view. Other file types display an icon with file details. Files can be downloaded or removed from a row at any time.</p> <p></p> <p>View an order along with its line items, related images, and a downloadable PDF invoice.</p> <p>To use file columns, you\u2019ll first need to configure an S3-compatible storage backend. Once configured, you can add files just like any other data type, and then upload files through the Mathesar interface.</p> <p>Related work:</p> <p>#4757 #4563 #4758 #4728 #4770 #4795 #4783 #4779 #4739 #4768 #4778 #4788 #4564 #4790 #4793 #4784 #4791 #4762 #4782 #4777 #4781 #4798 #4780 #4760 #4792 #4800 #4776 #4801 #4794 #4799 #4786 #4832</p>"},{"location":"releases/0.6.0/#refreshed-visual-style-with-semantic-colors","title":"Refreshed visual style with semantic colors","text":"<p>Mathesar\u2019s refined light mode makes it easier to navigate and edit your data.</p> <p>Mathesar\u2019s interface now uses semantic colors to help you quickly understand and navigate your data. Databases, schemas, tables, and other objects each have distinct colors, making it easier to tell them apart at a glance. This update brings a clearer, more consistent visual style across the application, improving readability and reducing the cognitive load when working with complex datasets.</p> <p>Related work:</p> <p>#4563 #4833</p>"},{"location":"releases/0.6.0/#bug-fixes","title":"Bug fixes","text":"<ul> <li>Updated default Gunicorn sync worker count to <code>3</code> and exposed worker count as an env var #4844</li> <li>Moved installation page language-switcher to top right corner #4735</li> <li>Fixed JSON rendering in the data explorer and in lists #4741</li> <li>Fixed an issue with placeholder cell focus #4802 #4816 #4822</li> <li>Now correctly fetch records data when adding a constraint #4734</li> <li>Improved keyboard navigation for the form builder #4748</li> <li>Now properly clear all statuses and errors when inserting a new row #4746</li> </ul>"},{"location":"releases/0.6.0/#maintenance","title":"Maintenance","text":"<ul> <li>Write 0.6.0 release notes #4813</li> <li>Add Form analytics #4726</li> <li>Bump django from 4.2.22 to 4.2.24 #4755</li> </ul>"},{"location":"releases/0.6.0/#upgrading","title":"Upgrading to 0.6.0","text":"<p>Improve Mathesar\u2019s performance with multi-user installs</p> <p>Mathesar now sets the <code>WEB_CONCURRENCY</code> variable to <code>3</code> by default, which can significantly improve performance for installs with multiple users.</p> <p>Existing users should set the <code>WEB_CONCURRENCY</code> env var using our recommended settings.</p>"},{"location":"releases/0.6.0/#for-installations-using-docker-compose","title":"For installations using Docker Compose","text":"<p>If you have a Docker compose installation, run the command below:</p> <pre><code>docker compose -f /etc/mathesar/docker-compose.yml up --pull always -d\n</code></pre> <p>Your installation directory may be different</p> <p>You may need to change <code>/etc/mathesar/</code> in the command above if you chose to install Mathesar to a different directory.</p>"},{"location":"releases/0.6.0/#for-direct-installations-of-mathesar-on-linux-macos-or-wsl","title":"For direct installations of Mathesar on Linux, macOS, or WSL","text":"<p>Mathesar provides an install script that automates both fresh installs and upgrades for standalone (non-Docker) installations.</p> <p>Previously referred to as \u201cInstallation from scratch\u201d</p> <p>In versions earlier than 0.3.0, this setup was referred to as \u201cInstallation from scratch\u201d.</p> <p>Follow the steps below to upgrade Mathesar:</p> <ol> <li> <p>Enter your installation directory into the box below and press Enter to personalize this guide:</p> <p></p> <ul> <li>Do not include a trailing slash.</li> <li>Do not use any variables like <code>$HOME</code>.</li> </ul> </li> <li> <p>Go to your Mathesar installation directory.</p> <pre><code>cd xMATHESAR_INSTALL_DIRx\n</code></pre> <p>Note</p> <p>Your installation directory may be different from above if you used a different directory when installing Mathesar.</p> </li> <li> <p>Download and run the install script for 0.6.0     <pre><code>curl -sSfL https://github.com/mathesar-foundation/mathesar/releases/download/0.6.0/nstall.sh -o install.sh\nchmod +x install.sh\n\n./install.sh .\n</code></pre></p> </li> <li> <p>Replace your gunicorn systemd service with a Mathesar systemd service</p> <ol> <li> <p>Disable and stop the existing gunicorn service     <pre><code>systemctl disable gunicorn.service\nsystemctl stop gunicorn.service\n</code></pre></p> </li> <li> <p>Follow the steps in Run Mathesar as a systemd service from the installation guide</p> </li> <li> <p>Remove the gunicorn service file     <pre><code>sudo rm /lib/systemd/system/gunicorn.service\n</code></pre></p> </li> </ol> </li> <li> <p>Update your Caddyfile</p> <ol> <li> <p>Use the configuration shown in Install and configure Caddy in the installation guide, and update your Caddyfile accordingly</p> </li> <li> <p>Ensure that your domains are specified directly in the first line of the Caddyfile</p> </li> <li> <p>Restart your Caddy service   <pre><code>systemctl restart caddy.service\n</code></pre></p> </li> </ol> </li> </ol> <p>Tip</p> <p>If you\u2019re running Mathesar only on localhost and do not want it to run as a service, you could:</p> <ol> <li>Remove the gunicorn and caddy services</li> <li>Start Mathesar manually with:   <pre><code>mathesar run\n</code></pre></li> </ol>"},{"location":"releases/TEMPLATE/","title":"Mathesar VERSION","text":""},{"location":"releases/TEMPLATE/#summary","title":"Summary","text":"<p>TODO</p> <p>This page provides a comprehensive list of all changes in the release.</p>"},{"location":"releases/TEMPLATE/#upgrading-to-version","title":"Upgrading to VERSION","text":"<p>TODO</p>"},{"location":"snippets/docker-compose-prerequisites/","title":"Docker compose prerequisites","text":""},{"location":"snippets/docker-compose-prerequisites/#operating-system","title":"Operating System","text":"<p>You can install Mathesar using this method on Linux, MacOS, and Windows.</p>"},{"location":"snippets/docker-compose-prerequisites/#software","title":"Software","text":"<p>You\u2019ll need to install the following software before you install Mathesar:</p> <ul> <li>Docker v23+</li> <li>Docker Compose v2.10+</li> <li>If you\u2019re installing on Windows:<ul> <li>Ensure you have WSL installed</li> <li>Turn on Docker Desktop WSL 2, see Docker docs for more information</li> </ul> </li> </ul>"},{"location":"snippets/generate-secret-key/","title":"Generate secret key","text":"Generate Secret Key Generating a secret key requires JavaScript to work. Please enable JavaScript in your browser. Copy Regenerate"},{"location":"snippets/metadata-access-control/","title":"Metadata access control","text":"<p>Mathesar metadata and data explorations are currently readable and writable by all collaborators on a database, regardless of their PostgreSQL role\u2019s permissions or their user\u2019s admin status. If you need to restrict access to metadata or data explorations, we would be curious to hear about your use case and welcome you to open an issue to discuss it.</p>"},{"location":"snippets/uninstall-schemas/","title":"Uninstall schemas","text":"<ol> <li> <p>Remove Mathesar internal schemas.</p> <p>If you\u2019d like to continue using your PostgreSQL databases, you can remove the schemas created for Mathesar\u2019s use during installation. For each database accessible through the Mathesar UI, the safe and easy way to do so is to use Mathesar\u2019s new \u201cDisconnect Database\u201d functionality. When disconnecting a database, choose the \u201cRemove Mathesar\u2019s internal schemas\u201d option to safely remove any Mathesar schemas.</p> <p>If that doesn\u2019t work, or doesn\u2019t work for all databases, you can perform the following manual steps instead:</p> <ol> <li> <p>Connect to the database.</p> <pre><code>psql -h &lt;DB HOSTNAME&gt; -p &lt;DB PORT&gt; -U &lt;DB_USER&gt; &lt;DB_NAME&gt;\n</code></pre> </li> <li> <p>Delete the types schema.</p> <pre><code>DROP SCHEMA mathesar_types CASCADE;\n</code></pre> <p>Deleting this schema will also delete any database objects that depend on it. Specifically, this will delete any data using Mathesar\u2019s custom data types.</p> </li> <li> <p>Delete the function schemas.</p> <pre><code>DROP SCHEMA msar CASCADE;\nDROP SCHEMA __msar CASCADE;\n</code></pre> </li> </ol> </li> </ol>"},{"location":"user-guide/","title":"Mathesar User Guide","text":""},{"location":"user-guide/#how-mathesar-works","title":"How Mathesar works","text":"<p>Mathesar is a web application that gives you a spreadsheet-like interface to one or more PostgreSQL databases. It lets technical and non-technical users collaborate directly with the same relational data, providing user-friendly access to your database\u2019s schemas, tables, relationships, and so on \u2014 all comfortably within the limits of the PostgreSQL privileges for the PostgreSQL role that you give to Mathesar. Your data appears in Mathesar exactly as it is structured in PostgreSQL, with some additional convenience features ease the process of working with related data while keeping it normalized.</p> <p>You can use Mathesar with PostgreSQL data sets you already have. Point it at your database, and you\u2019ll have a powerful GUI admin tool to help with data entry, analytics, and internal back-office processes.</p> <p>Or you can use Mathesar to build data sets and workflows from scratch, giving you a robust and highly scalable alternative to typical spreadsheet-based solutions.</p> <p>The Mathesar application has a small internal database where it stores the users you create, the database connection credentials you add, the data explorations you save, and a small amount of metadata which you may configure. But all your actual data lives in your PostgreSQL database \u2014 outside Mathesar. The extensive interoperability afforded by PostgreSQL means you\u2019ll always have control over your data should you later choose to use incorporate other tools into your workflow or abandon Mathesar altogether.</p>"},{"location":"user-guide/#postgres","title":"About PostgreSQL","text":"<p>PostgreSQL (aka \u201cPostgres\u201d) is an industry-leading relational database management system which has been actively maintained by a vibrant community of open source contributors since the mid 1990\u2019s. It has since emerged as the dominant and defacto relational database solution in the open source world and beyond.</p> <p>While the choice to support PostgreSQL in a product like Mathesar would be obvious, Mathesar has doubled down on our commitment to PostgreSQL by architecting the application to integrate very tightly with PostgreSQL. A large part of the Mathesar application logic actually runs within the PostgreSQL database to which Mathesar connects. This architecture enables Mathesar\u2019s high performance and snappy UI by reducing the need for multiple network round trips between the Mathesar application and the PostgreSQL server. So Mathesar will be fast even when your PostgreSQL server is around the world from your Mathesar application server.</p> <p>A short-term consequence of this development strategy is that, for the time being, Mathesar only works with PostgreSQL databases. However we are hopeful that in the future we\u2019ll have the opportunity to leverage PostgreSQL\u2019s powerful Foreign Data Wrapper functionality to connect to other kinds of databases such as MySQL, SQLite, Oracle, MongoDB, and more.</p> <p>In order to function, Mathesar needs to install some functions on your PostgreSQL database. We install these functions inside Mathesar-specific schemas to separate them from any user defined functions on the database.</p>"},{"location":"user-guide/access-control/","title":"Access Control in Mathesar","text":"<p>Mathesar manages data access using PostgreSQL\u2019s powerful role-based permissions system. Users interact with the database through designated PostgreSQL roles, with their access determined by the privileges assigned to those roles.</p> <p>Here\u2019s how it works:</p> <ol> <li> <p>Mathesar Users: Everyone using Mathesar gets their own personal user account and has control over their password and username. Admin users have some additional privileges, but only for high-level Mathesar-specific operations like connecting databases and managing other users.</p> <p>Users use a separate password to log into Mathesar by default, but some Mathesar deployments use single sign-on (SSO) for login.</p> </li> <li> <p>PostgreSQL roles: Within PostgreSQL, privileges on data can be granted to different roles at a granular level. Mathesar respects these privileges and also exposes functionality for you to see and modify them.</p> </li> <li> <p>Stored Roles: Mathesar stores the passwords for any roles that you would like to use to authenticate with PostgreSQL.</p> </li> <li> <p>Collaborators: For a user to access a given database, an admin must add the user as a collaborator on that database and assign the user to a specific PostgreSQL role. You can configure separate Mathesar users to share the same PostgreSQL role if you like. Or you can use dedicated PostgreSQL roles for different users.</p> </li> </ol> <p>Mathesar metadata and data explorations are currently readable and writable by all collaborators on a database, regardless of their PostgreSQL role\u2019s permissions or their user\u2019s admin status. If you need to restrict access to metadata or data explorations, we would be curious to hear about your use case and welcome you to open an issue to discuss it.</p>"},{"location":"user-guide/collaborators/","title":"Collaborators","text":"<p>For every database you connect in Mathesar, you can manage the access that your Mathesar users have to that database by adding them as collaborators. Each collaborator is associated with a PostgreSQL role that determines their access to data.</p> <p>Only Mathesar admin users can manage collaborators.</p> <p>When you add a new database connection to Mathesar, your Mathesar user will automatically be added as a collaborator using the PostgreSQL role you specify at connection time.</p> <p>Note that with collaborators, a user\u2019s role is set per-database. This means that one Mathesar user can be configured to use different PostgreSQL roles for different databases on the same server.</p>"},{"location":"user-guide/collaborators/#adding-a-collaborator","title":"Adding a collaborator","text":"<p>Prerequisites</p> <p>Before you can add a new collaborator:</p> <ul> <li>Your database must be connected already</li> <li>The user must already exist in Mathesar</li> <li>The role must already exist in PostgreSQL (you can use Mathesar)</li> <li>The role must be stored in Mathesar</li> </ul> <ol> <li>Navigate to the page for your connected database.</li> <li>Click on the Database Settings tab.</li> <li>Click on Collaborators in the left-hand menu.</li> <li>Click Add Collaborator.</li> </ol>"},{"location":"user-guide/collaborators/#removing-a-collaborator","title":"Removing a collaborator","text":"<p>Removing a collaborator revokes that user\u2019s access to the database but:</p> <ul> <li>If the user is a Mathesar admin, they\u2019ll be able to gain access again by adding their user back as a collaborator.</li> <li>The user will still remain in Mathesar, potentially with access to other Databases.</li> <li>The role (and its corresponding password) will still remain configured in Mathesar.</li> <li>The role will still remain on the PostgreSQL server.</li> </ul>"},{"location":"user-guide/collaborators/#configuration-patterns","title":"Configuration patterns","text":"<ul> <li>You can configure separate Mathesar users to share the same PostgreSQL role if you like. This is a good option if you want those users to have the same permissions on the data.</li> <li>Or you can use separate PostgreSQL roles for different users. This is necessary any time you want different users to have different permissions on the data.</li> <li>You cannot configure one Mathesar user with two PostgreSQL role simultaneously \u2014 though you can save multiple PostgreSQL roles in Mathesar and manually switch between them if necessary. You won\u2019t even need to enter the role\u2019s password each time you switch, since it will be saved in Mathesar.</li> </ul>"},{"location":"user-guide/data-explorer/","title":"Mathesar\u2019s Data Explorer","text":"<p>The Data Explorer lets you create reports from your data.</p> <p>You can:</p> <ul> <li>View the data across multiple tables</li> <li>Filter</li> <li>Sort</li> <li>Summarize data to see aggregate values</li> </ul> <p>After you\u2019ve constructed an exploration, you can save it to easily run it later as well.</p>"},{"location":"user-guide/data-explorer/#exploration-and-access-controls","title":"Exploration and access controls","text":"<ul> <li> <p>The Data Explorer will not allow you to modify any data. It is a read-only reporting tool.</p> </li> <li> <p>Your ability to view data in the Data Explorer is determined by the privileges of the PostgreSQL role you\u2019re using.</p> </li> <li> <p>All collaborators can see (and modify) the same set of explorations. (This is the same way that access control works for metadata).</p> </li> <li> <p>Keep in mind that if a collaborator is using a different role, they may see different data through the Data Explorer due to their role\u2019s access controls.</p> </li> </ul>"},{"location":"user-guide/data-types/","title":"Data Types","text":""},{"location":"user-guide/data-types/#postgresqls-data-types","title":"PostgreSQL\u2019s Data Types","text":"<p>PostgreSQL requires that every table column has a predefined data type. These types serve to keep your data clean by ensuring that (for example) arbitrary text doesn\u2019t somehow end up in a column designated for numbers. This type system is quite powerful, but it can be complex. See the PostgreSQL docs. There are a lot of different types to choose from, and you can even define your own custom types.</p>"},{"location":"user-guide/data-types/#ui-types","title":"Mathesar\u2019s Data Types","text":"<p>Mathesar seeks to tame some of PostgreSQL\u2019s type system complexity by grouping similar PostgreSQL data types into user-friendly categories. We call these categories \u201cMathesar data types\u201d \u2014 or simply \u201cdata types\u201d within Mathesar itself.</p> <p>Every PostgreSQL data type maps to exactly one Mathesar data type; and one Mathesar data type can potentially map to multiple PostgreSQL data types. For example, Mathesar has one Number data type which serves to simplify the seven different PostgreSQL data types for numbers.</p> <p>When creating a new column within Mathesar, you\u2019ll need to specify a Mathesar data type. Then Mathesar will create the column in PostgreSQL using the default PostgreSQL data type for your selected Mathesar data type. You can also modify the PostgreSQL data type later if needed and customize its type options in some cases.</p> <p>The relatively concise set of Mathesar data types \u2014 along with their associated default PostgreSQL data types \u2014 provide a curated assortment of recommended types well-suited for most use cases. And your ability to customize the PostgreSQL data type for a Mathesar data type gives you the flexibility to handle more specialized cases as needed.</p> <p>Each Mathesar data type is described in more detail below.</p>"},{"location":"user-guide/data-types/#boolean","title":"Boolean","text":"<ul> <li>PostgreSQL types<ul> <li><code>boolean</code></li> </ul> </li> <li>Formatting options (stored as metadata)<ul> <li>Display a dropdown instead of a checkbox</li> <li>Customize the text show within the two dropdown options</li> </ul> </li> </ul>"},{"location":"user-guide/data-types/#date","title":"Date","text":"<ul> <li>PostgreSQL types<ul> <li><code>date</code></li> </ul> </li> <li>Formatting options (stored as metadata)<ul> <li>Customize the format of the displayed date</li> </ul> </li> </ul>"},{"location":"user-guide/data-types/#date-time","title":"Date &amp; Time","text":"<ul> <li>PostgreSQL types<ul> <li><code>timestamp with time zone</code> (default)</li> <li><code>timestamp without time zone</code></li> </ul> </li> <li>Formatting options (stored as metadata)<ul> <li>Customize the format of the displayed date and time</li> </ul> </li> </ul>"},{"location":"user-guide/data-types/#duration","title":"Duration","text":"<p>Used to store a length of time, for example \u201c1 hour\u201d or \u201c3 days\u201d</p> <ul> <li>PostgreSQL types<ul> <li><code>interval</code></li> </ul> </li> <li>Formatting options (stored as metadata)<ul> <li>Customize the format of the displayed duration</li> </ul> </li> </ul>"},{"location":"user-guide/data-types/#email","title":"Email","text":"<p>Used to store valid email addresses</p> <ul> <li>PostgreSQL types<ul> <li> <p><code>mathesar_types.email</code></p> <p>This is a custom PostgreSQL type implemented by Mathesar. It is a domain over <code>text</code> with additional logic to validate that the input is a valid email address.</p> </li> </ul> </li> </ul>"},{"location":"user-guide/data-types/#money","title":"Money","text":"<ul> <li> <p>PostgreSQL types</p> <ul> <li> <p><code>mathesar_types.money</code> (default)</p> <p>This is custom PostgreSQL type implemented by Mathesar as a domain over <code>numeric</code>.</p> <code>mathesar_types.money</code> vs <code>numeric</code> <p>Compared with <code>numeric</code>, the <code>mathesar_types.money</code> type only exists for: (A) compatibility with our custom casting functions that can import CSV data with currency symbols; and (B) indicate to the upper layers of the Mathesar application that this column is eligible for an additional \u201cCurrency Symbol\u201d metadata field.</p> <p>You are welcome to store money values in Number columns, but you won\u2019t be able to display the values with a currency symbol.</p> </li> <li> <p><code>money</code></p> <code>mathesar_types.money</code> vs <code>money</code> <p>Although PostgreSQL does natively have a <code>money</code> type, we\u2019ve chosen to recommend our custom PostgreSQL type for money in order to give your more control over the fractional precision for money columns. The fractional precision of the native <code>money</code> type is controlled by the <code>LC_MONETARY</code> which is set at the database level and thus may not be granular enough or accessible enough for all Mathesar users to configure.</p> </li> </ul> </li> <li> <p>Formatting options (stored as metadata)</p> <ul> <li>Customize the number of decimal places displayed (e.g. 1.2 vs 1.20)</li> <li>Customize the digit grouping (e.g. 1,000 vs 1000)</li> <li>Customize the locale for number formatting (e.g. 1.000,00 vs 1,000.00)</li> <li>Customize the currency symbol character</li> <li>Customize the position of the currency symbol</li> </ul> </li> </ul>"},{"location":"user-guide/data-types/#number","title":"Number","text":"<ul> <li>PostgreSQL types<ul> <li><code>numeric</code> (default)</li> <li><code>smallint</code></li> <li><code>integer</code></li> <li><code>bigint</code></li> <li><code>decimal</code></li> <li><code>real</code></li> <li><code>double precision</code></li> </ul> </li> <li>Formatting options (stored as metadata)<ul> <li>Customize the number of decimal places displayed (e.g. 1.2 vs 1.20)</li> <li>Customize the digit grouping (e.g. 1,000 vs 1000)</li> <li>Customize the locale for number formatting (e.g. 1.000,00 vs 1,000.00)</li> </ul> </li> </ul>"},{"location":"user-guide/data-types/#text","title":"Text","text":"<ul> <li>PostgreSQL types<ul> <li><code>text</code> (default)</li> <li><code>char</code></li> <li><code>varchar</code></li> </ul> </li> </ul>"},{"location":"user-guide/data-types/#time","title":"Time","text":"<ul> <li>PostgreSQL types<ul> <li><code>time with time zone</code> (default)</li> <li><code>time without time zone</code></li> </ul> </li> <li>Formatting options (stored as metadata)<ul> <li>Customize the format of the displayed time</li> </ul> </li> </ul>"},{"location":"user-guide/data-types/#url","title":"URL","text":"<ul> <li>PostgreSQL types<ul> <li> <p><code>mathesar_types.uri</code></p> <p>This is a custom PostgreSQL type implemented by Mathesar. It is a domain over <code>text</code> with additional logic to validate that the input is a valid uri address.</p> </li> </ul> </li> </ul>"},{"location":"user-guide/data-types/#files","title":"Files","text":"<ul> <li>PostgreSQL types<ul> <li><code>JSONB</code></li> </ul> </li> </ul> <p>This is a custom type implemented in Mathesar\u2019s UI. To enable this data type, you must configure a file backend.</p> <p>Learn more about Mathesar\u2019s file feature.</p>"},{"location":"user-guide/data-types/#other-postgresql-types","title":"Other PostgreSQL types","text":"<p>Mathesar has rudimentary support for other PostgreSQL types such as: <code>array</code>, <code>bytea</code>, <code>point</code>, <code>line</code>, <code>lseg</code>, <code>box</code>, <code>path</code>, <code>path</code>, <code>polygon</code>, <code>circle</code>, <code>cidr</code>, <code>inet</code>, <code>macaddr</code>, <code>macaddr8</code>, <code>bit</code>, <code>bit varying</code>, <code>tsquery</code>, <code>tsvector</code>, <code>json</code>, <code>jsonb</code>, <code>xml</code>, <code>pg_lsn</code>, <code>pg_snapshot</code>, <code>txid_snapshot</code>, <code>int4range</code>, <code>int8range</code>, <code>numrange</code>, <code>tsrange</code>, <code>tstzrange</code>, <code>daterange</code>.</p> <p>In most cases Mathesar is able to display data from such types, but the following limitations apply:</p> <ul> <li>Columns of these types cannot be created from within Mathesar</li> <li>Data entry is not yet supported</li> <li>Formatting cannot be applied</li> </ul> <p>If you would like to request additional support for a type, please open an issue requesting the feature. And if you find that an unsupported type is causing other features to break, please note it as a bug.</p>"},{"location":"user-guide/databases/","title":"Databases","text":"<p>Each installation of Mathesar can connect to multiple PostgreSQL databases. When you begin using Mathesar, your first step will likely be connecting to or creating a database. But what exactly is a database, and how does it differ from tools you might be more familiar with, like spreadsheets?</p>"},{"location":"user-guide/databases/#what-is-a-database","title":"What is a database","text":"<p>If you\u2019re using Mathesar as a spreadsheet alternative, you might be curious what makes a database different from a spreadsheet and why it matters. A database is a self-contained set of data stored within a rigid structure that maintains data integrity and allows for efficient data operations. There are many different kinds of databases, and Mathesar works specifically with PostgreSQL databases, so that\u2019s what we\u2019ll focus on here.</p> <p>Within a database, you can have multiple tables \u2014 much like you might have multiple sheets within a spreadsheet. And within each table in your database, you\u2019ll have rows and columns, similar to a spreadsheet. But while a spreadsheet gives you a blank canvas to freely enter any data into any cell you choose, a database is more structured. Rows and columns must be explicitly added before you can enter data, and each column must have a name and a data type. In a database, rows are sometimes called \u201crecords\u201d.</p> <p>One superpower of PostgreSQL is that cells from one table can reference records from another table. These references are called foreign key constraints, and Mathesar leverages them so you can model your data with relationships.</p> <p>If you\u2019ve ever used <code>VLOOKUP</code> in a spreadsheet, you\u2019ll love using relationships in Mathesar!</p>"},{"location":"user-guide/databases/#connection","title":"Connecting a database","text":"<p>Click the Connect Database button from the home page of your Mathesar application and follow the prompts.</p> <p>Once you\u2019ve connected a database, you can navigate to Mathesar\u2019s page for it where you can browse the database\u2019s schemas and configure various settings for it.</p> <p>Mathesar will remember the connection even after the application is shut down. Your Mathesar user will be added as a collaborator on the database (along with the PostgreSQL role you entered). The password you entered for that role will be stored in Mathesar\u2019s internal database, encrypted using Mathesar\u2019s SECRET_KEY.</p> Trouble connecting a database? <ul> <li>If you are running Mathesar via Docker, keep in mind that setting the \u201cHost\u201d to <code>localhost</code> may not work as expected. Instead:<ul> <li>On macOS and Windows, <code>host.docker.internal</code> generally works instead of <code>localhost</code> without additional setup.</li> <li>On Linux, configure <code>host.docker.internal</code> explicitly, or try the Docker network gateway IP <code>172.17.0.1</code>.</li> </ul> </li> <li>To connect to PostgreSQL via Unix socket, set the \u201cHost\u201d value as the path to the socket, for example: (<code>/var/run/postgresql</code>). You may omit the \u201cPort\u201d if using the default (<code>5432</code>) or otherwise specify.<ul> <li>When using Docker, make sure the container can access the socket path as a mounted volume.</li> </ul> </li> </ul>"},{"location":"user-guide/databases/#creating-a-new-database","title":"Creating a new database","text":"<p>If you\u2019re starting your database from scratch with Mathesar you can either:</p> <ul> <li> <p>Use Mathesar to create a new database within Mathesar\u2019s internal server and connect to it. This is a good option to get up and running quickly, but it might require more work later should you decide to set up periodic backups or connect other tools to the same database. Also, this option won\u2019t be possible if Mathesar was installed without an internal server.</p> <p>OR</p> </li> <li> <p>Use another tool to create your database on an external server and then connect Mathesar to it. You can administer that external server yourself, or choose from a variety of hosted PostgreSQL solutions such as Amazon RDS, Google Cloud SQL, Supabase, and others.</p> </li> </ul>"},{"location":"user-guide/databases/#permissions","title":"Database Permissions","text":"<p>PostgreSQL databases use a careful system of privileges (colloquially referred to as \u201cpermissions\u201d) to control what different users can do. Understanding these permissions is crucial for keeping your data secure while ensuring everyone has the access they need to do their work.</p> <ul> <li> <p>Owner: In PostgreSQL, every database has a role set as its owner.</p> <p>Only the owner can:</p> <ul> <li>Drop the database</li> <li>Manage database-level privileges</li> <li>Transfer ownership</li> </ul> </li> <li> <p>Granted Privileges: Additionally, the following privileges on one database may be granted to specific roles in PostgreSQL:</p> <ul> <li><code>CONNECT</code>- Allows the role to connect to the database.</li> <li><code>CREATE</code>- Allows the role to create new schemas within the database.</li> <li><code>TEMPORARY</code>- Allows the role to create temporary tables within the database.</li> </ul> </li> </ul> <p>See the PostgreSQL docs for more info.</p> <p>To manage the owner and granted privileges for a database, navigate to the database page in Mathesar and click on the Database Permissions button at the top right.</p> <p>See also</p> <p>To manage the access that Mathesar users have to a database, go to Database Settings &gt; Collaborators. See Access Control for more information.</p>"},{"location":"user-guide/databases/#disconnecting-a-database","title":"Disconnecting a database","text":"<ol> <li>From the Mathesar home page, click on your database to its database page.</li> <li>At the top right, click on the dropdown menu, and select \u201cDisconnect Database\u201d.</li> </ol> <p>Disconnecting a database will not delete the database. It will still be accessible outside Mathesar, and you can reconnect it in the future.</p> <p>However, disconnecting your database will delete the Mathesar-specific metadata associated with objects in the database. This includes saved explorations, customized column display options, and customized record summary templates.</p>"},{"location":"user-guide/databases/#dropping-a-database","title":"Dropping a database","text":"<p>If you want to entirely remove all the data in your database by dropping the database from the PostgreSQL server, you\u2019ll need to do so outside of Mathesar via PostgreSQL itself.</p> <p>We plan to add support for dropping databases in the future. If this is a feature you would like, please comment on this issue to let us know.</p>"},{"location":"user-guide/databases/#internal","title":"Mathesar\u2019s internal database","text":"<p>Mathesar keeps as much of your data as possible inside your connected PostgreSQL database, structured consistently with the way it appears in the Mathesar interface.</p> <p>Separate from your connected PostgreSQL database, Mathesar also maintains an internal database to store configuration relevant to the Mathesar application itself. While Mathesar does not allow you to work directly with this internal database, you might be interested to understand the distinction between it and your connected database. Below is a comparison of the data stored in each:</p> Data in your connected database Data in Mathesar's internal database <ul> <li>           The           schemas           and           tables           you see from within Mathesar         </li> <li>The rows, columns, and cells within those tables</li> <li> Relationships           between those tables         </li> <li> Roles           and their privileges         </li> </ul> <ul> <li>Users</li> <li>Database connection credentials, including saved role passwords</li> <li>Collaborators</li> <li>Metadata</li> <li>Saved Explorations</li> </ul>"},{"location":"user-guide/databases/#metadata","title":"Understanding Mathesar\u2019s Metadata","text":"<p>Mathesar keeps as much of your data as possible inside your connected PostgreSQL database, structured consistently with the way it appears in the Mathesar interface. However, some of the customization that Mathesar offers doesn\u2019t fit neatly into the PostgreSQL model, so Mathesar stores a thin layer of metadata in its internal database to support these features.</p>"},{"location":"user-guide/databases/#table-metadata","title":"Table metadata","text":"<p>For each table, the following optional configurations are stored as metadata:</p> <ul> <li> <p>Column order</p> <p>Interestingly, PostgreSQL does not allow existing columns to be rearranged. Mathesar allows you to customize the column order by dragging and dropping columns in the table view. This order is stored as metadata. When no metadata is present, the columns will be displayed in the order they are stored in PostgreSQL.</p> </li> <li> <p>Record summary template</p> <p>The template used to generate record summaries. This allows links to records in the table to be summarized into short human-readable pieces of text.</p> <p>Without any metadata, the record summary will be generated using the first text-like column of the table if possible.</p> </li> </ul>"},{"location":"user-guide/databases/#column-metadata","title":"Column metadata","text":"<p>Many of Mathesar\u2019s data types have type-specific formatting options which are stored as metadata. These options allow you to customize the way the data is displayed in the Mathesar interface.</p>"},{"location":"user-guide/databases/#metadata-access-control","title":"Metadata access control","text":"<p>Mathesar metadata and data explorations are currently readable and writable by all collaborators on a database, regardless of their PostgreSQL role\u2019s permissions or their user\u2019s admin status. If you need to restrict access to metadata or data explorations, we would be curious to hear about your use case and welcome you to open an issue to discuss it.</p>"},{"location":"user-guide/exporting-data/","title":"Exporting Data From Mathesar","text":"<p>You can use Mathesar to export all the data from one table to a CSV file.</p> <ol> <li>Navigate to the table page.</li> <li>Click on the \u201cExport\u201d button at the top right.</li> </ol> <p>Note:</p> <ul> <li>Any filters and sorting that you\u2019ve applied to the table will be reflected in the exported data.</li> <li>All relevant records will be included in the export, even if they are not shown on the current page within Mathesar.</li> </ul>"},{"location":"user-guide/files/","title":"Working with files in Mathesar","text":"<p>Help us refine files!</p> <p>Our file column feature is new and still evolving. We would like to support a wide variety of backends, storage formats, and use cases in the future.</p> <p>We\u2019d love to hear about how you\u2019re using files, what\u2019s working, and what additional workflows you\u2019d like to see supported. If you schedule a call with us for 20 min, we\u2019ll give you a $25 gift card as a thank you!</p> <p>Mathesar\u2019s file data type allows you to attach and interact with files directly in Mathesar, making it easy to store and preview files alongside your structured data.</p> <ul> <li>All file types are supported.</li> <li>Image files display a thumbnail preview, which can be clicked to preview a larger version.</li> <li>Non-images display an icon which can be clicked to view file metadata.</li> <li>All files can be downloaded or removed from a row.</li> </ul>"},{"location":"user-guide/files/#enabling-the-file-data-type","title":"Enabling the file data type","text":"<p>To enable files in Mathesar, see our guide for how to configure a file storage backend. At present, Mathesar only supports storing files on an S3-compatible object storage backend.</p> <p>Once you have configured a backend, users with edit permissions on a table can add file columns to tables and begin uploading files.</p>"},{"location":"user-guide/files/#adding-file-columns","title":"Adding file columns","text":"<p>A bike shop owner adding an \u201cEmployment Contract\u201d column to their \u201cMechanics\u201d table.</p> <p>Adding a file column works just like adding any other column type in Mathesar:</p> <ol> <li>Open the table where you want to add files.</li> <li>Click the \u201c+\u201d icon Add Column.</li> <li>Choose File as the column type and name the column.</li> <li>Save your changes.</li> </ol> <p>Once the file column is created, you\u2019ll be able to upload files into it directly from the Mathesar UI.</p>"},{"location":"user-guide/files/#uploading-files","title":"Uploading files","text":"<p>To upload a file into a file cell, click the cell\u2019s \u201c+\u201d icon and upload an image using the file upload dialog:</p> <p></p>"},{"location":"user-guide/files/#viewing-files","title":"Viewing files","text":"<p>Once uploaded, you\u2019ll now see a preview of your file in the cell:</p> <p>For image files, Mathesar will show a thumbnail preview which can be clicked to view a larger preview in a lightbox:</p> <p></p> <p>For all other files, Mathesar will display a file icon which can be clicked to show the file path and other details:</p> <p></p>"},{"location":"user-guide/files/#removing-files","title":"Removing files","text":"<p>To remove a file from a cell, click the \u201cremove\u201d button in either the image lightbox or the file popup.</p> <p>Removed files are not deleted from the backend</p> <p>Files that are removed from a cell in Mathesar are not deleted from the file backend. Only the reference to the file is deleted from the cell.</p> <p>In the future, we plan to assist users in cleaning up these \u201corphaned\u201d files.</p>"},{"location":"user-guide/files/#associating-multiple-files-with-a-row","title":"Associating multiple files with a row","text":"<p>Each file column can hold only one file per cell. However, you can add multiple file columns to a single row if you need to attach different types of files.</p> <p>If you expect a row to reference a large or variable number of files\u2014where creating a separate column for each one would be cumbersome\u2014consider using database relationships instead. This lets you associate many files with a single record in a structured way.</p> <p>For example, consider an Orders table with a few image columns:</p> <ul> <li>an Invoice column for storing a PDF invoice</li> <li>a Delivery Photo column for storing one image of the shipped order</li> </ul> <p>If each order needs to include many related files, for example multiple order photos, a relational approach is more flexible:</p> <ol> <li>Create a new table called Order Photos with a file column.</li> <li>Add a foreign key from Order Photos back to Orders.</li> <li>Each order can now have as many photos as needed while keeping the schema clean.</li> </ol> <p>In the future, we plan to enhance this workflow by making it easier to view related columns across tables in a single interface.</p>"},{"location":"user-guide/importing-data/","title":"Importing data into Mathesar","text":"<p>Mathesar allows importing data in CSV format. It also attempts to automatically infer the data type of the columns.</p>"},{"location":"user-guide/importing-data/#csv","title":"Importing CSV data","text":""},{"location":"user-guide/importing-data/#delimiters","title":"Delimiters","text":"<p>Fields in the CSV data may be delimited by any of the following characters:</p> Name Character Notes Comma <code>,</code> A traditional CSV file (a \u201cComma Separated Value\u201d document) Tab (not printable) This is sometimes referred to as a TSV file (a \u201cTab Separated Value\u201d document) Semicolon <code>;</code> Colon <code>:</code> Pipe <code>|</code>"},{"location":"user-guide/importing-data/#header-rows","title":"Header rows","text":"<p>By default, Mathesar will use the first row of CSV data to name the columns.</p> <p>If you un-check \u201cUse first row as header\u201d, then Mathesar will generate default names for the columns which you can edit later.</p>"},{"location":"user-guide/relationships/","title":"Relationships","text":"<p>Relationships allow a single cell in one table to reference a row in another table. When one table references another in this manner, the two tables are said to be \u201crelated\u201d. This is a core feature of PostgreSQL, and it allows us to model complex data structures using multiple tables.</p>"},{"location":"user-guide/relationships/#example","title":"Example","text":"<p>Let\u2019s say we are maintaining an address book of people and their contact info\u2026</p> Without Relationships <p>Associating multiple email addresses with one person is tricky! We might try the following approaches:</p> <ul> <li> <p>Option 1: Email addresses combined into a single column:</p> name emails Alice Roberts alice@example.com, aroberts@example.net Bob Davis bob@example.com </li> <li> <p>Option 2: Email addresses spread across multiple columns</p> name email_1 email_2 Alice Roberts alice@example.com aroberts@example.net Bob Davis bob@example.com </li> <li> <p>Option 3: People spread across multiple rows</p> name email Alice Roberts alice@example.com Alice Roberts aroberts@example.net Bob Davis bob@example.com </li> </ul> <p>None of these options are ideal. They make it difficult to query the data, and they make it easy to introduce errors.</p> With Relationships <p>We can create two tables:</p> <p>The <code>people</code> table:</p> id name 1 Alice Roberts 2 Bob Davis <p>The <code>emails</code> table:</p> id email person 1 alice@example.com 1 2 aroberts@example.net 1 3 bob@example.com 2 <p>And we configure the <code>person</code> column to reference the <code>id</code> column in the <code>people</code> table, ensuring that all the references are valid. The database handles this validation for us, and even prevents us from deleting a person without deleting their associated email addresses too.</p>"},{"location":"user-guide/relationships/#normalization","title":"Normalization","text":"<p>This practice of modeling data through multiple related tables is called data normalization, and it\u2019s why a database will typically have its data spread across many tables, each with their own unique column structure, and very few tables providing much use or value in isolation. In the example above, the approaches without relationships are not normalized, while the approach with relationships is normalized.</p> <p>Normalized data structures are more efficient to query and update, and they help to ensure data integrity by reducing redundancy and minimizing the risk of inconsistencies. But they can also be more cumbersome to work with manually due to the indirection inherent in having data spread across multiple tables. Mathesar helps you manage this complexity by providing a user-friendly interface to work with normalized data.</p>"},{"location":"user-guide/relationships/#foreign-key-constraints-in-postgresql","title":"Foreign key constraints in PostgreSQL","text":"<p>In PostgreSQL, references are called \u201cforeign key constraints\u201d, or simply \u201cforeign keys\u201d. These constraints are set on the table to ensure that the data in the referencing column always points to a valid row in the referenced table.</p>"},{"location":"user-guide/relationships/#reference-columns-in-mathesar","title":"Reference columns in Mathesar","text":"<p>Mathesar identifies reference columns in your database by looking for foreign key constraints set in PostgreSQL. And when you create a reference column in Mathesar, it will automatically create the necessary foreign key constraint in PostgreSQL.</p> <p>As noted below, reference columns get some extra features too!</p>"},{"location":"user-guide/relationships/#record-summaries","title":"Record summaries","text":"<p>Without Mathesar, reference cells are typically rather opaque. Often they contain only an id number, which is not very helpful when you\u2019re trying to understand the data.</p> <p>Mathesar helps solve this problem by providing a feature called \u201crecord summaries\u201d which allows you to see a short text summary of the referenced record directly in the referencing cell. By default, the record summary will be the value of the first text-like column in the referenced table. You can customize the record summary to show any columns and text you choose.</p> <p>To customize a record summary, you can either:</p> <ul> <li> <p>Start from the referenced table, and:</p> <ol> <li>Go to the table page of the referenced table.</li> <li>In the table inspector on the right, click on the \u201cTable\u201d tab.</li> <li>Find the \u201cRecord Summary\u201d section below.</li> </ol> <p>or</p> </li> <li> <p>Start from a reference column, and:</p> <ol> <li>Go to the table page containing the reference column.</li> <li>Select the reference column or a cell within it.</li> <li>In the table inspector on the right, click on the \u201cColumn\u201d tab.</li> <li>Find the \u201cLinked Record Summary\u201d section below.</li> </ol> </li> </ul>"},{"location":"user-guide/relationships/#record-selector","title":"Record selector","text":"<p>Reference columns also provide a \u201crecord selector\u201d tool which helps you search through referenced records when modifying reference values. It allows you to search on all columns from the referenced table and will use fuzzy logic to find the most relevant records. You can even create new records directly from the record selector.</p>"},{"location":"user-guide/relationships/#limitations-of-mathesars-reference-columns","title":"Limitations of Mathesar\u2019s reference columns","text":"<ul> <li> <p>Mathesar does not support \u201ccomposite\u201d foreign keys \u2014 foreign keys that reference multiple columns in the referenced table at once.</p> </li> <li> <p>Some PostgreSQL databases might contain normalized data which is implicitly structured to utilize the concept of references but which lacks the foreign key constraints necessary to ensure data integrity. Mathesar will not treat such columns as references. It only recognizes foreign key columns as references.</p> </li> </ul>"},{"location":"user-guide/relationships/#relationship-types-and-patterns","title":"Relationship types and patterns","text":""},{"location":"user-guide/relationships/#one-to-many-relationships","title":"One-to-many relationships","text":"<p>To illustrate a one-to-many relationship we\u2019ll re-use our example above.</p> <ul> <li> <p>We\u2019ll have a <code>people</code> table as follows:</p> id name 1 Alice Roberts 2 Bob Davis </li> <li> <p>And an <code>emails</code> table as follows:</p> id email person 1 alice@example.com <code>Alice Roberts</code> 2 aroberts@example.net <code>Alice Roberts</code> 3 bob@example.com <code>Bob Davis</code> <p>Note</p> <p>Here the reference column, <code>person</code>, displays with formatting to mimic Mathesar\u2019s record summaries feature.</p> </li> </ul> <p>Now one person can have many email addresses, hence the name \u201cone-to-many\u201d.</p>"},{"location":"user-guide/relationships/#many-to-one-relationships","title":"Many-to-one relationships","text":"<p>A many-to-one relationships is structurally equivalent to a one-to-many relationships, but with the perspective reversed. The two terms are often used interchangeably.</p>"},{"location":"user-guide/relationships/#many-to-many-relationships","title":"Many-to-many relationships","text":"<p>Continuing our address book example, let\u2019s pretend we\u2019d like to apply tags to our contacts. For example, we\u2019d like to:</p> <ul> <li>Tag Alice Roberts as \u201ccolleague\u201d</li> <li>Tag Bob Davis as \u201cfriend\u201d and \u201ccolleague\u201d</li> </ul> <p>We can use three tables to model this relationship:</p> <ul> <li> <p>A <code>people</code> table (as before):</p> id name 1 Alice Roberts 2 Bob Davis </li> <li> <p>A new <code>tags</code> table:</p> id tag 1 colleague 2 friend </li> <li> <p>And a new <code>people_tags</code> table (sometimes referred to as a \u201cjoin table\u201d or \u201cmapping table\u201d):</p> id person tag 1 <code>Alice Roberts</code> <code>colleague</code> 2 <code>Bob Davis</code> <code>friend</code> 3 <code>Bob Davis</code> <code>colleague</code> </li> </ul> <p>Now people can have many tags and tags can have many people, hence the name \u201cmany-to-many\u201d.</p>"},{"location":"user-guide/relationships/#other-types-of-relationships","title":"Other types of relationships","text":"<p>More esoteric relationships are possible too. For example:</p> <ul> <li>One-to-one relationships can be created by applying a unique constraint to the reference column. This is sometimes useful in more complex situations.</li> <li>Hierarchical data structures can be modeled using self-referential relationships.</li> <li>Polymorphic relationships can be modeled through a variety of different patterns.</li> </ul>"},{"location":"user-guide/relationships/#creating-relationships","title":"Creating relationships","text":"<ol> <li>First, create the tables you want to relate.</li> <li>From the table page of either table, open the \u201cTable\u201d tab within the table inspector, and find the \u201cRelationships\u201d section.</li> <li>Click on the \u201cCreate relationship\u201d button, and follow the prompts.</li> </ol> <p>Alternatively, you can manually add a foreign key constraint to an existing column with the following steps:</p> <ol> <li>Open the \u201cTable\u201d tab within the table inspector.</li> <li>Open the \u201cAdvanced\u201d section at the bottom.</li> <li>Click on the \u201cConstraints\u201d button.</li> <li>Next to \u201cForeign Key\u201d, click on \u201cAdd\u201d.</li> </ol>"},{"location":"user-guide/roles/","title":"PostgreSQL Roles","text":"<p>PostgreSQL uses roles to manage access to data, and each PostgreSQL server has many roles within it.</p>"},{"location":"user-guide/roles/#what-is-a-role","title":"What is a role?","text":"<p>PostgreSQL\u2019s role system is elegant and powerful, albeit somewhat idiosyncratic.</p> <p>Many permission systems utilize the concept of \u201cusers\u201d to control access, and PostgreSQL roles work similarly. You connect to a PostgreSQL server by supplying your role\u2019s name and password. Then your role will dictate your access throughout the server.</p> <p>Other permission systems commonly have a separate concept of \u201cgroups\u201d, wherein multiple users can be members of a single group. Permissions can be granted to the group as a whole. Interestingly, PostgreSQL roles can also function as groups! Through role inheritance, the permissions of any role can be granted to any other role.</p> <p>Users vs Roles</p> <p>Outside of Mathesar, it\u2019s not uncommon for people to say user when referring to a PostgreSQL role. However, within the context of Mathesar, users and roles are different things! Our documentation maintains this distinction pedantically. When we say \u201cuser\u201d, we mean a Mathesar user, and when we say \u201crole\u201d, we mean a PostgreSQL role.</p>"},{"location":"user-guide/roles/#managing","title":"Managing your PostgreSQL roles from within Mathesar","text":"<p>To see the roles available on your server, navigate to the Database Settings tab within the page for one of your connected databases. From there, you\u2019ll be able to add roles, drop roles, and edit role inheritance.</p> <p>Role passwords are stored in Mathesar\u2019s internal database and encrypted with your SECRET_KEY.</p> <p>Renaming roles and modifying role properties (e.g. <code>LOGIN</code> status) is not supported within Mathesar.</p>"},{"location":"user-guide/roles/#login","title":"LOGIN vs non-LOGIN roles","text":"<p>In PostgreSQL every role has a boolean <code>LOGIN</code> property which is either true or false. A <code>LOGIN</code> role may have an associated password and thus be used to connect to the server; while a non-<code>LOGIN</code> role may not. Non-<code>LOGIN</code> roles are often used as \u201cgroup\u201d roles to be granted to other roles.</p> <p>Mathesar lets you see the <code>LOGIN</code> status of each role, but does not allow you to change it. If you need to change a role\u2019s <code>LOGIN</code> status, you\u2019ll need to do so directly in PostgreSQL.</p>"},{"location":"user-guide/roles/#roles-vis-a-vis-databases","title":"Roles vis-\u00e0-vis databases","text":"<p>In PostgreSQL, roles live within the server and thus are not necessarily specific to individual databases. One role can be configured to access many different databases; and one database can be configured for access via many different roles. Within the Mathesar interface however, the list of roles is presented inside the page. This structure exists for the sake of convenience \u2014 and because PostgreSQL requires that clients connect to a specific database, even to query the roles present on a server. Nonetheless, it is important to understand that when you add/remove PostgreSQL roles (or edit their child roles), your changes will be visible for all databases which share the same server.</p>"},{"location":"user-guide/roles/#ownership","title":"Ownership","text":"<p>Every PostgreSQL object (e.g. a table, schema, etc.) has one and only one role said to be its \u201cowner\u201d. By default the owner is set to the role which created the object.</p> <p>The owner generally can do anything directly to the object, but not necessarily other objects contained within it. For example, a role might own a schema but not have access to certain tables within the schema.</p>"},{"location":"user-guide/roles/#privileges","title":"Privileges","text":"<p>Privileges are specific, granular rights that can be granted on database objects. Privileges can be granted to roles, allowing non-owning roles to perform certain actions. See the following sections for more information on configuring these privileges:</p> <ul> <li>Database permissions</li> <li>Schema permissions</li> <li>Table permissions</li> </ul> <p>These privileges cover common actions, but there are still certain actions which remain restricted to object owners and cannot be granted to other roles. For example, only the owner of a table can add new columns to it; there is no way to grant that privilege to a non-owning role.</p>"},{"location":"user-guide/roles/#inheritance","title":"Role inheritance","text":"<p>PostgreSQL has a mechanism for role inheritance (aka \u201crole membership\u201d) wherein any role can be \u201cgranted\u201d to any other role. For example, when the role <code>auditors</code> is granted to role <code>bob</code>, then <code>bob</code> will inherit all of the privileges set for <code>auditors</code>. While it\u2019s common for non-login roles to serve as \u201cgroups\u201d which are granted to login roles, any role can actually be granted to any other role. This feature can be used to form simple hierarchies and complex graph-based inheritance structures. See the PostgreSQL docs for more info.</p>"},{"location":"user-guide/roles/#shared-ownership","title":"Shared ownership","text":"<p>Although every object in PostgreSQL has only one owner, it\u2019s still possible configure multiple roles to effectively \u201cown\u201d a single object by leveraging inheritance:</p> <ol> <li>We can create a role to directly own the object and act as a sort of proxy \u201cgroup\u201d. (The group role doesn\u2019t need to be a <code>LOGIN</code> role and thus doesn\u2019t require a password to be configured.)</li> <li>Then we can grant that group role to any other roles we\u2019d like.</li> <li>Those child roles will then have permission do things as if they were the owner themselves.</li> </ol> <p>You can use Mathesar to configure an arrangement like the above, though it will require many steps.</p>"},{"location":"user-guide/schemas/","title":"Schemas","text":""},{"location":"user-guide/schemas/#what-is-a-schema","title":"What is a schema?","text":"<p>\u201cSchema\u201d is one of those funny words that can mean different things in different contexts, even within the word of relational database systems.</p> <p>While all relational databases store their data in tables, PostgreSQL has an additional level of nesting which requires every table to live within one and only one schema. You might think of a schema as a sort of folder. PostgreSQL sometimes calls it a \u201cnamespace\u201d. Schemas exist to help organize tables (and other database objects such as functions) into logical groups and avoid naming collisions.</p> <p>Schemas cannot contain other schemas, so there is a fixed hierarchy of objects\u2026 Within a database you have multiple schemas. And within a schema you have multiple tables. Mathesar\u2019s interface mirrors this structure.</p>"},{"location":"user-guide/schemas/#the-public-schema","title":"The \u201cpublic\u201d schema","text":"<p>Every PostgreSQL database has a schema named <code>public</code>. It cannot be deleted or renamed. It\u2019s also common for PostgreSQL servers to be configured to allow all roles to create tables within the public schema. And it\u2019s common for people to use PostgreSQL heavily without ever venturing outside the public schema. If you don\u2019t need to separate your data into different schemas, you can put everything in the public schema and more or less forget about schemas altogether.</p>"},{"location":"user-guide/schemas/#managing-schemas-within-your-database","title":"Managing schemas within your database","text":"<p>Mathesar lets you add/remove/rename the schemas in your database from within the database page. You can also add descriptions to your schemas which are stored in PostgreSQL as COMMENTs.</p> <p>However, your ability to alter schemas may be limited by access control \u2014 and you won\u2019t be able to change the public schema.</p>"},{"location":"user-guide/schemas/#organizing-your-data-schemas-or-databases","title":"Organizing your data \u2014 schemas or databases?","text":"<p>If you have separate, self-contained data projects you can choose between organizing them into separate schemas within the same database or into entirely separate databases.</p>"},{"location":"user-guide/schemas/#permissions","title":"Schema Permissions","text":"<ul> <li> <p>Owner: In PostgreSQL, every schema has a role set as its owner.</p> <p>Only the owner can:</p> <ul> <li>Drop the schema</li> <li>Manage schema-level privileges</li> <li>Transfer ownership</li> </ul> </li> <li> <p>Granted Privileges: Additionally, the following privileges on one schema may be granted to specific roles in PostgreSQL:</p> <ul> <li><code>USAGE</code>- Allows the role to see the tables within the schema.</li> <li><code>CREATE</code>- Allows the role to create new tables within the schema.</li> </ul> </li> </ul> <p>See the PostgreSQL docs for more info.</p> <p>To manage the owner and granted privileges for a schema, navigate to the schema page in Mathesar and click on the Schema Permissions button at the top right.</p>"},{"location":"user-guide/schemas/#internal","title":"Mathesar\u2019s internal schemas","text":"<p>Mathesar allows you to work with all the schemas in your database except for the following Mathesar-specific \u201cinternal\u201d schemas:</p> <ul> <li><code>mathesar_types</code> - This holds Mathesar\u2019s custom data types that you can use for your data.</li> <li><code>msar</code> - This holds the bulk of Mathesar\u2019s application code, defined as PostgreSQL functions.</li> <li><code>__msar</code> - This is a deprecated schema which holds some Mathesar functions that are gradually being migrated to the <code>msar</code> schema.</li> </ul> <p>The first time you use Mathesar to connect to your database, Mathesar installs these schemas. Mathesar\u2019s approach to tightly integrating with PostgreSQL means these schemas are required for Mathesar to function with your database. For Mathesar to successfully install them, you\u2019ll need to enure that the PostgreSQL role you provide has <code>CREATE</code> privileges on the database. After the schemas are installed and your database is connected, you can revoke the <code>CREATE</code> privilege if do not wish for your users to be able to create other schemas.</p>"},{"location":"user-guide/stored-roles/","title":"Stored Roles","text":"<p>Mathesar stores roles that you would like to use when authenticating with PostgreSQL to work with data. Stored roles can then be assigned to users via collaborators</p> <p>When you connect a database for the first time, the password for the role you specify is stored in Mathesar, and a collaborator for your user is established for the database. However for any additional roles you create, you\u2019ll need to manually save the password in Mathesar.</p> <p>After being saved, the stored passwords are not available to be viewed again within Mathesar.</p> <p>If the password for a role is modified within PostgreSQL, you\u2019ll need to update the stored password for that role in Mathesar.</p> <p>How roles are stored:</p> <ul> <li>Passwords are stored in Mathesar\u2019s internal database.</li> <li>They are encrypted at rest with your SECRET_KEY generated at installation time.</li> <li>They are stored per-database-server. This means that if you connect two databases on the same server, then the same role can be used for both databases.</li> </ul> <p>To manage the stored roles:</p> <ol> <li>Navigate to the page for your connected database.</li> <li>Go to the Database Settings tab.</li> <li>Click on Stored Roles in the left-hand menu.</li> </ol>"},{"location":"user-guide/tables/","title":"Tables","text":""},{"location":"user-guide/tables/#what-is-a-table","title":"What is a table?","text":"<p>All relational databases, including PostgreSQL, organize data into tables (also known as \u201crelations\u201d) containing rows, columns, and cells. Much like a single spreadsheet might have multiple sheets within it, a single database will typically have several \u2014 or sometimes several dozen \u2014 tables within it. Unlike most spreadsheets though, database tables are usually highly interconnected. In a database, relationships offer a robust mechanism for one cell to reference one record in another table. By leveraging relationships, we can unlock the ability to model complex data structures via multiple linked tables.</p>"},{"location":"user-guide/tables/#managing-tables","title":"Managing tables","text":"<p>Mathesar lets you add/remove/rename tables from within the database page. You can also add descriptions to your tables which are stored in PostgreSQL as COMMENTs. </p> <p>Keep in mind that your ability to alter tables may be limited by access control.</p>"},{"location":"user-guide/tables/#permissions","title":"Table Permissions","text":"<ul> <li> <p>Owner: In PostgreSQL, every table has a role set as its owner.</p> <p>Only the owner can:</p> <ul> <li>Drop the table</li> <li>Alter the table\u2019s columns</li> <li>Manage table-level privileges</li> <li>Transfer ownership</li> </ul> </li> <li> <p>Granted Privileges: Additionally, the following privileges on one table may be granted to specific roles in PostgreSQL:</p> <ul> <li><code>SELECT</code> - Allows reading data from the table</li> <li><code>INSERT</code> - Allows creation of new records within the table.</li> <li><code>UPDATE</code> - Allow updating existing records within the table.</li> <li><code>DELETE</code> - Allow deletion of records from the table.</li> <li><code>TRUNCATE</code> - Allows the deletion of all records from the table at once</li> <li><code>REFERENCES</code> - Allow creation of foreign key constraints that reference the table.</li> <li><code>TRIGGER</code> - Allow creation of triggers on the table.</li> </ul> </li> </ul> <p>See the PostgreSQL docs for more info.</p> <p>To manage the owner and granted privileges for a table, navigate to the table page in Mathesar and click on the Table Permissions button at the top right.</p>"},{"location":"user-guide/usage-data-collection/","title":"Usage Data Collection","text":"<p>You can opt-in to allow Mathesar to gather anonymized usage data. This is very valuable to us to help us improve Mathesar\u2019s features, performance, and stability, through understanding how Mathesar is being used, enabling us to identify areas to improve the user experience, and allowing us to track adoption and ensure the reliability of the tool.</p>"},{"location":"user-guide/usage-data-collection/#data-sent","title":"Data Sent","text":"<p>When you\u2019ve opted-in to usage data collection, the following information is sent every 24 hours:</p> <ul> <li>created_at: A timestamp giving the time the report was created.</li> <li>installation_id: This is a randomized UUID unique to your Mathesar installation.</li> <li>mathesar_version: This is a string giving your Mathesar version, e.g., \u20180.2.0\u2019.</li> <li>user_count: The number of user accounts on your Mathesar installation.</li> <li>active_user_count: The number of users who have logged into your Mathesar installation within the last 14 days.</li> <li>sso_connected_user_count: The number of users who have SSO configured on your Mathesar installation.</li> <li>configured_role_count: The number of PostgreSQL roles you\u2019ve configured in your Mathesar installation.</li> <li>connected_database_count: The number of Databases you\u2019ve connected to your Mathesar installation.</li> <li>connected_database_schema_count: The total number of schemas connected to your Mathesar installation.</li> <li>connected_database_table_count: The total number of tables connected to your Mathesar installation.</li> <li>connected_database_record_count: The approximate number of records in all tables connected to your Mathesar installation.</li> <li>exploration_count: The number of Explorations you\u2019ve created in Mathesar.</li> <li>form_count: The number of Forms you\u2019ve created in Mathesar.</li> <li>public_form_count: The number of Forms you\u2019ve published publicly in Mathesar.</li> </ul>"},{"location":"user-guide/usage-data-collection/#viewing-actual-reports","title":"Viewing Actual Reports","text":"<p>If you\u2019d like to see an actual report from your running Mathesar installation, go to the path <code>/info/analytics_sample_report/</code> at the domain where you connect to Mathesar. You can also call the RPC function <code>analytics.view_report</code>.</p>"},{"location":"user-guide/users/","title":"Mathesar Users","text":"<p>Each Mathesar installation can have multiple users, allowing different people to sign in, either with their own password or via single sign-on (SSO), and work with the same data collaboratively.</p>"},{"location":"user-guide/users/#managing-users","title":"Managing Users","text":"<p>To manage the users in you Mathesar installation, navigate to the users page:</p> <ol> <li>Click on the gear icon on the top right of the application and select Administration.</li> <li>In the left sidebar, click on Users.</li> </ol> <p>Note</p> <ul> <li>Any user with an admin-assigned password (new or edited) will be prompted to change their password after logging in.</li> <li>Newly added users won\u2019t see any of the connected databases unless you either make them admin users or explicitly add them as collaborators to each database.</li> <li>If your Mathesar server uses SSO, then users are automatically managed by your identity provider. You\u2019ll still see a list of users on this page, but you won\u2019t be able to manage them fully. For example, if you delete a user, they may log in again and will have a new user created for them if they do.</li> </ul>"},{"location":"user-guide/users/#admin","title":"Admin vs Standard users","text":"<p>Each Mathesar user is either Admin or Standard.</p> <p>Admin users have the following capabilities which Standard users do not:</p> <ul> <li>Admins can can manage other Mathesar users (view, add, edit, delete).</li> <li>Admins can connect and disconnect databases.</li> <li>Admins can save, update, and remove the stored passwords for PostgreSQL roles.</li> <li>Admins can manage collaborators. This allows an Admin user to grant any Mathesar user access to a database through a PostgreSQL role that the Admin specifies.</li> </ul> <p>Upon installing Mathesar, your first user will be an Admin user. Admins can only be created manually via the Mathesar UI, even if SSO is enabled.</p>"},{"location":"user-guide/users/#limitations","title":"Limitations","text":"<ul> <li>Mathesar does not send invitation emails to new users (yet). You\u2019ll need to send the user their username and password yourself.</li> <li>Nor is there yet an email-based password recovery mechanism. If you are locked out of your Mathesar installation\u2019s web interface, your system administrator can still use the command line reset any user\u2019s password.</li> </ul>"}]}