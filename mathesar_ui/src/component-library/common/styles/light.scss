@import './colors.scss';
// ********************************************
// LIGHT MODE
// ********************************************

// ------------------------------------------
// Base colors
// ------------------------------------------

$base: hsl(42, 10%, 95%);
$text-base: hsl(0, 0%, 7%);

// Special semantic colors
$highlight: hsl(59, 84%, 90%);
$highlight-elevated: hsl(59, 98%, 52%);
$icon: hsl(hue($wisteria), 45%, 10%);
$link: hsl(hue($fjord), 40%, 55%);
$visited-link: hsl(hue($wisteria), 50%, 30%);

// ------------------------------------------
// Surfaces
// ------------------------------------------

// Colors, ordered by elevation / lightness
$surface-colors: (
  'inset': hsl(hue($base), saturation($base), 100%),
  'input': hsl(hue($base), saturation($base), 100%),
  'base': $base,
  'card': hsl(hue($base), 15%, 92%),
  'canvas': hsl(hue($base), saturation($base), 96%),
  'supporting': hsl(hue($base), saturation($base), 97%),
  'fieldset': hsl(hue($base), saturation($base), 99%),
  'header': hsl(hue($base), saturation($base), 92%),
  'control': hsl(hue($base), saturation($base), 92%),
  'elevated-low': hsl(hue($base), saturation($base), 96%),
  'elevated-mid': hsl(hue($base), saturation($base), 94%),
  'elevated-header': hsl(hue($base), 20%, 90%),
  'elevated-high': hsl(hue($base), saturation($base), 92%),
  'elevated-top': hsl(hue($base), saturation($base), 90%),
  'token': hsl(hue($base), saturation($base), 75%),
  'input-fill': $input-fill,
  'light': hsl(hue($base), saturation($base), 100%),
);

$surface-states: (
  'hover': (
    'h_delta': 0,
    's_delta': 0,
    'l_delta': -7,
  ),
  'active': (
    'h_delta': 0,
    's_delta': 0,
    'l_delta': -9,
  ),
  'focused': (
    'h_delta': 0,
    's_delta': 0,
    'l_delta': -2,
  ),
  'disabled': (
    'h_delta': 0,
    's_delta': 0,
    'l_delta': -20,
  ),
  'muted': (
    'h_delta': 0,
    's_delta': 0,
    'l_delta': 10,
  ),
);

// ------------------------------------------
// Borders
// ------------------------------------------

// Ordered by lightnesss.
// Although some tokens have the same values, they're defined separately for modularity.
$border-colors: (
  'container': hsl(hue($base), saturation($base), 88%),
  'row': hsl(hue($base), saturation($base), 88%),
  'grid': hsl(hue($base), saturation($base), 88%),
  'card': hsl(hue($base), saturation($base), 85%),
  'dropdown': hsl(hue($base), saturation($base), 85%),
  'shadow': hsl(hue($base), saturation($base), 82%),
  'divider': hsl(hue($base), saturation($base), 80%),
  'elevated-low': hsl(hue($base), saturation($base), 80%),
  'header': hsl(hue($base), saturation($base), 80%),
  'control': hsl(hue($base), saturation($base), 80%),
  'elevated-mid': hsl(hue($base), saturation($base), 75%),
  'fieldset': hsl(hue($base), saturation($base), 75%),
  'elevated-high': hsl(hue($base), saturation($base), 70%),
  'section': hsl(hue($base), saturation($base), 70%),
  'input': hsl(hue($base), saturation($base), 60%),
  'token': hsl(hue($base), saturation($base), 60%),
);

$border-states: (
  'hover': (
    'h_delta': 0,
    's_delta': 0,
    'l_delta': 6,
  ),
  'active': (
    'h_delta': 0,
    's_delta': 0,
    'l_delta': 14,
  ),
  'focused': (
    'h_delta': 0,
    's_delta': 0,
    'l_delta': 10,
  ),
);

// ------------------------------------------
// Text
// ------------------------------------------

$text-colors: (
  'code': hsl(hue($text-base), 80%, 4%),
  'control': hsl(hue($text-base), 5%, 30%),
  'disabled': hsl(hue($base), 0%, 30%),
  'faint': hsl(hue($base), 15%, 85%),
  'header': hsl(hue($base), 0%, 20%),
  'highlight': $highlight,
  'highlight-elevated': $highlight-elevated,
  'navigation': hsl(hue($wisteria), 10%, 20%),
  'icon': $icon,
  'input': hsl(hue($text-base), 0%, 0%),
  'label': hsl(hue($text-base), 0%, 30%),
  'inverted': hsl(hue($base), 10%, 96%),
  'light': hsl(hue($text-base), 0%, 100%),
  'link': $link,
  'visited-link': $visited-link,
  'muted': hsl(hue($text-base), 0%, 50%),
  'primary': $text-base,
  'secondary': hsl(hue($text-base), 0%, 18%),
  'tertiary': hsl(hue($base), 0%, 40%),
  'token': hsl(hue($base), 15%, 7%),
);

$text-states: (
  'hover': (
    'h_delta': 0,
    's_delta': 0,
    'l_delta': 12,
  ),
  'active': (
    'h_delta': 0,
    's_delta': 0,
    'l_delta': 18,
  ),
);

// ------------------------------------------
// Utility boxes + buttons
// ------------------------------------------

$semantic-colors: (
  'success': hsl(hue($success), 40%, 30%),
  'warning': hsl(hue($warning), 70%, 40%),
  'danger': hsl(hue($danger), 100%, 60%),
  'info': hsl(hue($info), 55%, 45%),
  'help': hsl(hue($help), 40%, 50%),
  'tip': hsl(hue($tip), 40%, 40%),
  'outcome': hsl(hue($outcome), 25%, 40%),
);

$semantic-roles: (
  'bg': (
    'h_delta': 0,
    's_delta': 0%,
    'l_delta': 50%,
  ),
  'text': (
    'h_delta': 0,
    's_delta': 0%,
    'l_delta': -25%,
  ),
  'icon': (
    'h_delta': 0,
    's_delta': 0%,
    'l_delta': 10%,
  ),
  'border': (
    'h_delta': 0,
    's_delta': 0%,
    'l_delta': 20%,
  ),
  'inner-bg': (
    'h_delta': 0,
    's_delta': 0%,
    'l_delta': 45%,
  ),
  'inner-text': (
    'h_delta': 0,
    's_delta': 0%,
    'l_delta': -20%,
  ),
  'inner-icon': (
    'h_delta': 0,
    's_delta': 0%,
    'l_delta': 0%,
  ),
  'inner-border': (
    'h_delta': 0,
    's_delta': 0%,
    'l_delta': 25%,
  ),
);

$semantic-states: (
  'hover': (
    'h_delta': 0,
    's_delta': 6,
    'l_delta': 6,
  ),
  'active': (
    'h_delta': 0,
    's_delta': 2,
    'l_delta': 10,
  ),
  'focused': (
    'h_delta': 5,
    's_delta': 5,
    'l_delta': 3,
  ),
);

// ------------------------------------------
// GENERATE COLORS FOR THEME
// ------------------------------------------
body {
  @each $name, $color in $surface-colors {
    @include generate-surface-tokens(#{$name}, $color, $surface-states);
  }

  @each $name, $color in $border-colors {
    @include generate-border-tokens(#{$name}, $color, $border-states);
  }

  @each $name, $color in $text-colors {
    @include generate-text-tokens(#{$name}, $color, $text-states);
  }

  @each $name, $color in $semantic-colors {
    @include generate-semantic-tokens(#{$name}, $color, $semantic-roles);
  }

  --mix-blend-mode: multiply;
}
