.btn {
  display: inline-flex;
  align-items: center;
  box-sizing: border-box;
  position: relative;

  vertical-align: middle;
  gap: 0.5em;
  cursor: pointer;

  font-family: inherit;
  font-size: 1em;
  line-height: var(--input-line-height);

  outline-offset: 1px;
  transition: background-color 0.15s ease;

  padding: var(--button-padding, var(--input-padding) var(--sm3));
  font-weight: var(--button-font-weight, var(--font-weight-medium));
  border-radius: var(--button-border-radius, var(--sm4));

  &:disabled {
    opacity: 0.5;
    cursor: not-allowed;
  }

  /**
   * Css properties that are altered for each variant.
   */
  $btn-configurable-props: (
    background: transparent,
    color: inherit,
    border: 1px solid,
    border-color: transparent,
    outline: none,
    outline-color: transparent,
    box-shadow: none,
  );

  $btn-states: (hover, focus, active);

  $btn-variants: (
    default: (
      normal: (
        background: var(--surface-control),
        border-color: var(--border-control),
        box-shadow: (
          var(--surface-base) 0 1px 2px 0,
          var(--border-shadow) 0 1px 3px 0,
        ),
      ),
      hover: (
        background: var(--surface-control-hover),
        border-color: var(--border-control-hover),
      ),
      focus: (
        background: var(--surface-control-focused),
        border-color: var(--border-control-focused),
        box-shadow: (
          0 2px 4px color-mix(in srgb, var(--border-shadow), transparent 15%),
          0 1px 2px color-mix(in srgb, var(--border-shadow), transparent 10%),
        ),
      ),
      active: (
        background: var(--surface-control-active),
        border-color: var(--border-control-active),
        box-shadow: 0 0 0 2px var(--surface-control-active),
      ),
    ),

    primary: (
      normal: (
        background:
          linear-gradient(
            to bottom right,
            var(--color-primary),
            var(--color-primary-80)
          ),
        color: var(--text-light),
        border-color: var(--border-control),
        box-shadow: (
          0 1px 2px color-mix(in srgb, var(--border-shadow), transparent 75%),
          0 1px 3px color-mix(in srgb, var(--border-shadow), transparent 80%),
          0 1px 2px -1px color-mix(in srgb, var(--border-shadow), transparent
                80%),
        ),
      ),
      hover: (
        background:
          linear-gradient(
            to bottom right,
            var(--color-primary-hover-80),
            var(--color-primary-hover-60)
          ),
        border-color: var(--border-control-hover),
        box-shadow: (
          0 1px 2px -1px color-mix(in srgb, var(--border-shadow), transparent
                75%),
          0 1px 3px -2px color-mix(in srgb, var(--border-shadow), transparent
                80%),
          0 1px 2px -1px color-mix(in srgb, var(--border-shadow), transparent
                80%),
        ),
      ),
      focus: (
        outline: 2px solid,
        outline-color: var(--color-primary-80),
      ),
      active: (
        background:
          linear-gradient(
            to bottom right,
            var(--color-primary-active-80),
            var(--color-primary-active-60)
          ),
        border-color: var(--border-control-hover),
        box-shadow: var(--border-shadow) 0 1px 2px 0,
      ),
    ),

    secondary: (
      normal: (
        background: var(--color-navigation-20),
        color: var(--text-control),
        border-color: var(--border-control),
      ),
      hover: (
        background: var(--color-navigation-hover-25),
        border-color: var(--border-control-hover),
        box-shadow: (
          0 4px 6px -1px color-mix(in srgb, var(--border-shadow), transparent
                10%),
          0 2px 4px -2px color-mix(in srgb, var(--border-shadow), transparent
                10%),
          0 0 0 1px color-mix(in srgb, var(--border-shadow), transparent 10%)
            inset,
        ),
      ),
      focus: (
        outline: 2px solid,
        outline-color: var(--border-control-active),
      ),
      active: (
        background: var(--color-navigation-active-25),
        border-color: var(--border-control-active),
        box-shadow: (
          0 1px 2px color-mix(in srgb, var(--border-shadow), transparent 5%),
          0 1px 3px color-mix(in srgb, var(--border-shadow), transparent 10%),
          0 1px 2px -1px color-mix(in srgb, var(--border-shadow), transparent
                10%),
        ),
      ),
    ),

    outcome: (
      normal: (
        background: transparent,
        border: 2px solid,
        border-color: transparent,
        color: var(--semantic-outcome-text),
      ),
      hover: (
        background:
          color-mix(in srgb, var(--semantic-outcome-inner-bg), transparent 60%),
        outline: 2px solid,
        outline-color: var(--semantic-outcome-inner-border-hover),
        color: var(--semantic-outcome-text-hover),
      ),
      focus: (
        outline: 2px solid,
        outline-color: var(--semantic-outcome-border-focused),
      ),
      active: (
        background:
          color-mix(in srgb, var(--semantic-outcome-inner-bg), transparent 50%),
        border-color: var(--semantic-outcome-inner-border-active),
        color: var(--semantic-outcome-text-active),
      ),
    ),

    plain: (
      normal: (
        background: transparent,
        border-color: transparent,
        box-shadow: none,
      ),
      hover: (
        background: var(--surface-control-hover),
        color: var(--text-primary),
      ),
      focus: (
        background: var(--surface-control-focused),
        border-color: var(--border-control-focused),
        box-shadow: (
          0 2px 4px color-mix(in srgb, var(--border-shadow), transparent 15%),
          0 1px 2px color-mix(in srgb, var(--border-shadow), transparent 10%),
        ),
        outline: none,
      ),
      active: (
        background: var(--surface-control-active),
        box-shadow: 0 0 0 2px var(--surface-control-active),
      ),
    ),

    ghost: (
      normal: (
        background: transparent,
        border-color: transparent,
        box-shadow: none,
      ),
    ),

    option-card: (
      normal: (
        background: var(--surface-elevated-high),
        color: var(--text-control),
        border-color: var(--border-elevated-mid),
        box-shadow: (
          0 1px 2px color-mix(in srgb, var(--border-shadow), transparent 5%),
          0 1px 3px color-mix(in srgb, var(--border-shadow), transparent 10%),
          0 1px 2px -1px color-mix(in srgb, var(--border-shadow), transparent
                10%),
        ),
      ),
      hover: (
        background: var(--color-navigation-auxiliary-hover-10),
        border-color: var(--color-navigation-auxiliary-hover-20),
        box-shadow: (
          0 4px 6px -1px color-mix(in srgb, var(--border-shadow), transparent
                10%),
          0 2px 4px -2px color-mix(in srgb, var(--border-shadow), transparent
                10%),
          0 0 0 1px color-mix(in srgb, var(--border-shadow), transparent 5%)
            inset,
        ),
      ),
      focus: (
        outline: 2px solid,
        outline-color: var(--color-navigation-auxiliary-40),
      ),
      active: (
        background: var(--color-navigation-auxiliary-active-10),
        border-color: var(--color-navigation-auxiliary-active-20),
        box-shadow: (
          0 1px 2px color-mix(in srgb, var(--border-shadow), transparent 5%),
          0 1px 3px color-mix(in srgb, var(--border-shadow), transparent 10%),
          0 1px 2px -1px color-mix(in srgb, var(--border-shadow), transparent
                10%),
        ),
      ),
    ),

    danger: (
      normal: (
        background: transparent,
        border-color: transparent,
        color: var(--semantic-danger-text),
      ),
      hover: (
        background:
          color-mix(in srgb, var(--semantic-danger-inner-bg), transparent 60%),
        border-color: var(--semantic-danger-inner-border-hover),
        color: var(--semantic-danger-text-hover),
      ),
      focus: (
        outline: 2px solid,
        outline-color: var(--semantic-danger-inner-border-focused),
      ),
      active: (
        background:
          color-mix(in srgb, var(--semantic-danger-inner-bg), transparent 50%),
        border-color: var(--semantic-danger-inner-border-active),
        color: var(--semantic-danger-text-active),
      ),
    ),

    action: (
      normal: (
        background: var(--color-navigation-10),
        color: var(--text-navigation),
        border: 2px solid,
        border-color: transparent,
      ),
      hover: (
        background:
          color-mix(in srgb, var(--color-navigation-20), transparent 60%),
        border-color: var(--color-navigation-hover-20),
      ),
      focus: (
        outline: 2px solid,
        outline-color: var(--color-navigation-active-40),
      ),
      active: (
        background: var(--color-navigation-active-20),
        border-color: var(--color-navigation-active-40),
      ),
    ),

    tip: (
      normal: (
        background: var(--semantic-tip-inner-bg),
        border-color: var(--semantic-tip-inner-border),
        color: var(--semantic-tip-inner-text),
      ),
      hover: (
        background: var(--semantic-tip-inner-bg-hover),
        border-color: var(--semantic-tip-inner-border-hover),
        color: var(--semantic-tip-inner-text-hover),
      ),
      active: (
        background: var(--semantic-tip-inner-bg-active),
        border-color: var(--semantic-tip-inner-border-active),
        color: var(--semantic-tip-inner-text-active),
      ),
    ),

    refresh: (
      normal: (
        background: var(--color-highlight-asparagus-20),
        border-color: var(--color-highlight-asparagus-20),
        color: var(--text-control),
      ),
      hover: (
        background: var(--color-highlight-asparagus-hover-40),
        border-color: var(--color-highlight-asparagus-hover-40),
        color: var(--text-control-hover),
      ),
      active: (
        background: var(--color-highlight-asparagus-active-40),
        border-color: var(--color-highlight-asparagus-active-40),
        color: var(--text-control-active),
      ),
    ),

    inspector: (
      normal: (
        background: var(--color-navigation-15),
        border-color: var(--color-navigation-20),
        color: var(--text-control),
        box-shadow: (
          0 1px 2px color-mix(in srgb, var(--border-shadow), transparent 75%),
          0 1px 3px color-mix(in srgb, var(--border-shadow), transparent 80%),
          0 1px 2px -1px color-mix(in srgb, var(--border-shadow), transparent
                80%),
        ),
      ),
      hover: (
        background: var(--color-navigation-20),
        border-color: var(--color-navigation-hover-40),
        box-shadow: (
          0 4px 6px -1px color-mix(in srgb, var(--border-shadow), transparent
                10%),
          0 2px 4px -2px color-mix(in srgb, var(--border-shadow), transparent
                10%),
          0 0 0 1px color-mix(in srgb, var(--border-shadow), transparent 10%)
            inset,
        ),
      ),
      focus: (
        outline: 2px solid,
        outline-color: var(--color-navigation-active-40),
      ),
      active: (
        background: var(--color-navigation-40),
        border-color: var(--color-navigation-60),
        box-shadow: (
          0 1px 2px color-mix(in srgb, var(--border-shadow), transparent 5%),
          0 1px 3px color-mix(in srgb, var(--border-shadow), transparent 10%),
          0 1px 2px -1px color-mix(in srgb, var(--border-shadow), transparent
                10%),
        ),
      ),
    ),

    link: (
      normal: (
        color: var(--color-navigation-auxiliary),
        background: transparent,
        border-color: transparent,
      ),
      hover: (
        color: var(--color-navigation-auxiliary-hover),
      ),
      active: (
        color: var(--color-navigation-auxiliary-active),
      ),
    ),
  );

  &.btn-default {
    &.dropdown {
      --button-background: var(--surface-input);
      --button-border-color: var(--border-input);
    }
  }

  // Utilities
  &.size-medium {
    font-size: 1em;
  }

  &.size-small {
    font-size: 0.889em;
  }

  &.size-large {
    font-size: 1.2em;
  }

  &.padding-zero {
    padding: 0px;
  }

  &.padding-compact {
    padding: var(--sm4) var(--sm3);
  }

  &.full-width {
    width: 100%;
  }

  // Mixins & scss functions

  /**
   * Produce external configurable css vars.
   * Examples:
   *  background: var(--button-background, var(--button-internal-background));
   *  color: var(--button-color, var(--button-internal-color));
   */
  @each $prop-name, $def-value in $btn-configurable-props {
    #{$prop-name}: var(
      --button-#{$prop-name},
      var(--button-internal-#{$prop-name})
    );
  }

  /**
   * Produce internal css vars, with their defaults.
   * Examples:
   *  --button-internal-background: transparent;
   *  --button-internal-color: inherit;
   */
  @each $prop-name, $def-value in $btn-configurable-props {
    --button-internal-#{$prop-name}: #{$def-value};
  }

  /**
   * Produce internal css vars for different states with their defaults.
   * Examples:
   *  --button-internal-hover-background: var(--button-internal-background);
   *  --button-internal-hover-color: var(--button-internal-color);
   */
  @each $state in $btn-states {
    @each $prop-name, $def-value in $btn-configurable-props {
      --button-internal-#{$state}-#{$prop-name}: var(
        --button-internal-#{$prop-name}
      );
    }
  }

  &:not(:disabled) {
    /**
     * Produces external css vars for states.
     * Example:
     *   &:hover,
     *   &.hover {
     *     background: var(
     *       --button-hover-background,
     *       var(--button-background, var(--button-internal-hover-background))
     *     );
     *     border-color: var(
     *       --button-hover-border-color,
     *       var(--button-border-color, var(--button-internal-hover-border-color))
     *     );
     *   }
     */
    @each $state in $btn-states {
      &:#{$state},
      &.#{$state} {
        @each $prop-name, $def-value in $btn-configurable-props {
          #{$prop-name}: var(
            --button-#{$state}-#{$prop-name},
            var(
              --button-#{$prop-name},
              var(--button-internal-#{$state}-#{$prop-name})
            )
          );
        }
      }
    }
  }

  /**
   * The following calls produce the css variables for each variant.
   */

  @function _variant-state-suffix($state-name) {
    @return if($state-name == 'normal', '', '-#{$state-name}');
  }

  @mixin btn-variant-state($state-name, $cfg) {
    $seg: _variant-state-suffix($state-name);

    @each $prop-name, $def-value in $btn-configurable-props {
      @if map-has-key($cfg, $prop-name) {
        --button-internal#{$seg}-#{$prop-name}: #{map-get($cfg, $prop-name)};
      }
    }
  }

  @each $name, $states in $btn-variants {
    &.btn-#{$name} {
      @each $state-name, $state in $states {
        @include btn-variant-state($state-name, $state);
      }
    }
  }
}

a.btn {
  text-decoration: none;
}
