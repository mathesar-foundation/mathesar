# Generated by Django 4.2.17 on 2025-01-21 15:12

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import encrypted_fields.fields
import mathesar.models.base


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('full_name', models.CharField(blank=True, max_length=255, null=True)),
                ('short_name', models.CharField(blank=True, max_length=255, null=True)),
                ('password_change_needed', models.BooleanField(default=False)),
                ('display_language', models.CharField(blank=True, default='en', max_length=30)),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='AnalyticsReport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('mathesar_version', models.CharField()),
                ('user_count', models.PositiveIntegerField(blank=True, null=True)),
                ('active_user_count', models.PositiveIntegerField(blank=True, null=True)),
                ('configured_role_count', models.PositiveIntegerField(blank=True, null=True)),
                ('connected_database_count', models.PositiveIntegerField(blank=True, null=True)),
                ('connected_database_schema_count', models.PositiveIntegerField(blank=True, null=True)),
                ('connected_database_table_count', models.PositiveIntegerField(blank=True, null=True)),
                ('connected_database_record_count', models.PositiveBigIntegerField(blank=True, null=True)),
                ('exploration_count', models.PositiveIntegerField(blank=True, null=True)),
                ('uploaded', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ColumnMetaData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('table_oid', models.PositiveBigIntegerField()),
                ('attnum', models.SmallIntegerField()),
                ('bool_input', models.CharField(choices=[('dropdown', 'dropdown'), ('checkbox', 'checkbox')], null=True)),
                ('bool_true', models.CharField(null=True)),
                ('bool_false', models.CharField(null=True)),
                ('num_min_frac_digits', models.PositiveIntegerField(null=True)),
                ('num_max_frac_digits', models.PositiveIntegerField(null=True)),
                ('num_grouping', models.CharField(choices=[('always', 'always'), ('auto', 'auto'), ('never', 'never')], null=True)),
                ('num_format', models.CharField(choices=[('english', 'english'), ('german', 'german'), ('french', 'french'), ('hindi', 'hindi'), ('swiss', 'swiss')], null=True)),
                ('mon_currency_symbol', models.CharField(null=True)),
                ('mon_currency_location', models.CharField(choices=[('after-minus', 'after-minus'), ('end-with-space', 'end-with-space')], null=True)),
                ('time_format', models.CharField(null=True)),
                ('date_format', models.CharField(null=True)),
                ('duration_min', models.CharField(max_length=255, null=True)),
                ('duration_max', models.CharField(max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ConfiguredRole',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255)),
                ('password', encrypted_fields.fields.EncryptedCharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Database',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=128)),
                ('last_confirmed_sql_version', models.CharField(default='0.0.0')),
            ],
        ),
        migrations.CreateModel(
            name='DataFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('file', models.FileField(upload_to=mathesar.models.base.DataFile._user_directory_path)),
                ('created_from', models.CharField(choices=[('FILE', 'File'), ('PASTE', 'Paste'), ('URL', 'Url')], max_length=128)),
                ('type', models.CharField(choices=[('CSV', 'Csv'), ('TSV', 'Tsv'), ('JSON', 'Json')], max_length=128)),
                ('base_name', models.CharField(max_length=100)),
                ('header', models.BooleanField(default=True)),
                ('max_level', models.IntegerField(blank=True, default=0)),
                ('sheet_index', models.IntegerField(default=0)),
                ('delimiter', models.CharField(blank=True, default=',', max_length=1)),
                ('escapechar', models.CharField(blank=True, max_length=1)),
                ('quotechar', models.CharField(blank=True, default='"', max_length=1)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Explorations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=128, unique=True)),
                ('base_table_oid', models.PositiveBigIntegerField()),
                ('schema_oid', models.PositiveBigIntegerField()),
                ('initial_columns', models.JSONField()),
                ('transformations', models.JSONField(null=True)),
                ('display_options', models.JSONField(null=True)),
                ('display_names', models.JSONField(null=True)),
                ('description', models.CharField(null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='InstallationID',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.IntegerField(default=1, primary_key=True, serialize=False)),
                ('value', models.UUIDField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Server',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('host', models.CharField(max_length=255)),
                ('port', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='UserDatabaseRoleMap',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('configured_role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mathesar.configuredrole')),
                ('database', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mathesar.database')),
                ('server', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mathesar.server')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TableMetaData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('table_oid', models.PositiveBigIntegerField()),
                ('import_verified', models.BooleanField(null=True)),
                ('column_order', models.JSONField(null=True)),
                ('record_summary_template', models.JSONField(null=True)),
                ('data_file', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='mathesar.datafile')),
                ('database', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mathesar.database')),
            ],
        ),
        migrations.AddConstraint(
            model_name='server',
            constraint=models.UniqueConstraint(fields=('host', 'port'), name='unique_server'),
        ),
        migrations.AddField(
            model_name='explorations',
            name='database',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mathesar.database'),
        ),
        migrations.AddField(
            model_name='datafile',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='database',
            name='server',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='databases', to='mathesar.server'),
        ),
        migrations.AddField(
            model_name='configuredrole',
            name='server',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='roles', to='mathesar.server'),
        ),
        migrations.AddField(
            model_name='columnmetadata',
            name='database',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mathesar.database'),
        ),
        migrations.AddField(
            model_name='analyticsreport',
            name='installation_id',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='mathesar.installationid'),
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions'),
        ),
        migrations.AddConstraint(
            model_name='userdatabaserolemap',
            constraint=models.UniqueConstraint(fields=('user', 'database'), name='user_one_role_per_database'),
        ),
        migrations.AddConstraint(
            model_name='tablemetadata',
            constraint=models.UniqueConstraint(fields=('database', 'table_oid'), name='unique_table_metadata'),
        ),
        migrations.AddConstraint(
            model_name='database',
            constraint=models.UniqueConstraint(fields=('name', 'server'), name='unique_database'),
        ),
        migrations.AddConstraint(
            model_name='database',
            constraint=models.UniqueConstraint(fields=('id', 'server'), name='database_id_server_index'),
        ),
        migrations.AddConstraint(
            model_name='configuredrole',
            constraint=models.UniqueConstraint(fields=('name', 'server'), name='unique_role'),
        ),
        migrations.AddConstraint(
            model_name='configuredrole',
            constraint=models.UniqueConstraint(fields=('id', 'server'), name='role_id_server_index'),
        ),
        migrations.AddConstraint(
            model_name='columnmetadata',
            constraint=models.UniqueConstraint(fields=('database', 'table_oid', 'attnum'), name='unique_column_metadata'),
        ),
        migrations.AddConstraint(
            model_name='columnmetadata',
            constraint=models.CheckConstraint(check=models.Q(('num_max_frac_digits__lte', 20), ('num_min_frac_digits__lte', 20), ('num_min_frac_digits__lte', models.F('num_max_frac_digits'))), name='frac_digits_integrity'),
        ),
    ]
