# Generated by Django 3.1.14 on 2022-10-04 16:23

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.constraints
import django.db.models.deletion
import django.db.models.manager
import django.utils.timezone
import mathesar.models.query
import mathesar.models.relation
import mathesar.utils.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('full_name', models.CharField(blank=True, max_length=255, null=True)),
                ('short_name', models.CharField(blank=True, max_length=255, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Database',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=128, unique=True)),
                ('deleted', models.BooleanField(blank=True, default=False)),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('current_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='PreviewColumnSettings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('customized', models.BooleanField()),
                ('template', models.CharField(max_length=255)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Schema',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('oid', models.IntegerField()),
                ('database', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='schemas', to='mathesar.database')),
            ],
            managers=[
                ('current_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='Table',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('oid', models.IntegerField()),
                ('import_verified', models.BooleanField(blank=True, null=True)),
                ('is_temp', models.BooleanField(blank=True, null=True)),
                ('import_target', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='mathesar.table')),
                ('schema', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tables', to='mathesar.schema')),
            ],
            bases=(models.Model, mathesar.models.relation.Relation),
            managers=[
                ('current_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='UIQuery',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=128, unique=True)),
                ('initial_columns', models.JSONField(validators=[mathesar.models.query.ListOfDictValidator(field_name='initial_columns'), mathesar.models.query.InitialColumnsValidator(field_name='initial_columns')])),
                ('transformations', models.JSONField(blank=True, null=True, validators=[mathesar.models.query.ListOfDictValidator(field_name='transformations'), mathesar.models.query.TransformationsValidator(field_name='transformations')])),
                ('display_options', models.JSONField(blank=True, null=True, validators=[mathesar.models.query.DictValidator(field_name='display_options')])),
                ('base_table', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='queries', to='mathesar.table')),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model, mathesar.models.relation.Relation),
        ),
        migrations.CreateModel(
            name='TableSettings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('preview_settings', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='mathesar.previewcolumnsettings')),
                ('table', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='settings', to='mathesar.table')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('current_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='DataFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('file', models.FileField(upload_to=mathesar.utils.models.user_directory_path)),
                ('created_from', models.CharField(choices=[('FILE', 'File'), ('PASTE', 'Paste'), ('URL', 'Url')], max_length=128)),
                ('base_name', models.CharField(max_length=100)),
                ('header', models.BooleanField(default=True)),
                ('delimiter', models.CharField(blank=True, default=',', max_length=1)),
                ('escapechar', models.CharField(blank=True, max_length=1)),
                ('quotechar', models.CharField(blank=True, default='"', max_length=1)),
                ('table_imported_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='data_files', to='mathesar.table')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Constraint',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('oid', models.IntegerField()),
                ('table', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='constraints', to='mathesar.table')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('current_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='Column',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('attnum', models.IntegerField()),
                ('display_options', models.JSONField(default=None, null=True)),
                ('table', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='columns', to='mathesar.table')),
            ],
            managers=[
                ('current_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.AddConstraint(
            model_name='table',
            constraint=models.UniqueConstraint(fields=('oid', 'schema'), name='unique_table'),
        ),
        migrations.AddConstraint(
            model_name='schema',
            constraint=models.UniqueConstraint(fields=('oid', 'database'), name='unique_schema'),
        ),
        migrations.AddConstraint(
            model_name='column',
            constraint=models.UniqueConstraint(deferrable=django.db.models.constraints.Deferrable['DEFERRED'], fields=('attnum', 'table'), name='unique_column'),
        ),
    ]
